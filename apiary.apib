FORMAT: 1A
HOST: https://sandbox-staging.imp-siemens.com

# SiMobility Connect/IMP North. V2

This is the description of version V2 of the public REST interface to the integrated mobility platform *SiMobility Connect* by Siemens AG ("Connect"). 

For demo access, please write an email to `connect.mobility@siemens.com`. Clients are authorized by Basic Authentication. The base URL for calling the API is https://sandbox-staging.imp-siemens.com

Â© Siemens AG 2017. All rights reserved

# General
* All coordinates are in the WGS84 system, in longitude, latitude order with units of decimal degrees. Example for a location in Berlin: *[13.387444, 52.523969]*
* Dates and time are represented in RFC-3339 format with an optional time zone offset. Example: *"2014-07-10T14:23:11+02:00"*
* Connect supports English and German and defaults to English. Integrated services may support additional languages but may also not translate all content from their default language. The language can be set in the `Accept-Language` header. Example: *de-DE* or *de*
* Parts of the response data structure might be omitted if the information is not available. Example: A car sharing operator might not provide the fuel type of its cars

# Metadata
The data provided by Connect originates from various integrated services. These are bundled into different mobility categories which are structured as resources.  

Usually, a resource request returns a response with a common metadata header. For each integrated service relevant to this request, the metadata header contains a field that describes general information regarding the respective service and its provider. Such information includes a service specific alias name, site URI, data refresh timestamp, and warning or error messages.
Warning messages are provided when request attributes are ignored or unsupported by the integrated services. Error messages refer to failures occuring during interaction with these services.

## Data Structures

### Unit (enum)
- second
- minute
- hour
- day
- x
- kilometerperhour
- meterpersecond
- mileperhour
- kilometer
- meter
- mile
- Eurocent
- Euro
- Usd
- Chf
- gram
- kilogram
- liter
- cubicmeter
- gallon
- ampere
- milliampere
- volt
- watt
- kilowatt
- kelvin
- degreecelsius
- joule
- kilowatthour
- kilocalories
- Aed
- Unknown

### Message (object)
+ code (string)
+ message (string)
+ type (string) - `INFO`, `WARNING`, or `ERROR`

### Address (object)
+ citycode: null (string) 
+ city: Berlin (string)
+ street: Friedrichstadtpalast (string)
+ affix: null (string)
+ houseno: null (string)
+ district: null (string)
+ region: null (string)
+ country: Germany (string)
+ countryCode: null (string)
+ poBox: null (string)

### GeoJsonPoint (object)
+ type: Point (string, required) - Geo JSON geometry type
+ coordinates: 13.38744394, 52.52396949 (array[number], required) -  In longitude, latitude order

### Bike Sharing Meta Data (object)
+ serviceAlias: `nextbike` (string) - Short name of this integrated service
+ webUiUrl: `http://www.nextbike.de/de/standorte/` (string) - URI of this service provider
+ lastUpdateTime: `2014-07-10T14:11:02+02:00` (string) - Timestamp when the data of the integrated service was last refreshed
+ messages (array[Message]) - Warning and error messages. Common examples: `service.unavailable`, `service.not.available.in.region`, or `trafficType.Car.not.supported`

### Bike Sharing Base (object)
+ actions (array)- To initiate transactional steps like booking, reservation, and cancellation
    + (object)
        + name: `book` (string)
        + method: `POST` (string)
        + uri: `Resources/BikeSharing/Stations/3177225/Process?action=book` (string)
+ id: 3177225 (number) - ID of Connect
+ description: `Friedrichstadtpalast` (string) - Usually the license ID, approximate location, or name of bike
+ type: Stations (enum, required)
    + Stations
    + Bikes
+ uri: `Resources/BikeSharing/Stations/3177225` (string) - URI to request details
+ location (GeoJsonPoint, required)
+ provider: nextbike (string) - Alias of service provider
+ availability: 100 (number) - Current availability in percentage. "=0" or "=100" in case of floating bike
+ externalId: 3165145 (string) - Identification number of service provider
+ operator: `nextbike Berlin` (string) - Company operating the bike fleet. Commonly same as provider

### Bike Sharing Station (Bike Sharing Base)
+ type: BikeSharingStation (string, required)
+ phoneNo: null (string)
+ operatorURI: null (string)
+ operatorName: `nextbike Berlin` (string)
+ address (Address)
+ openingHours: null (string)
+ numberOfBikes: 10 (number)
+ numberOfFreeBikes: 1 (number)
+ services: null

### Car Sharing Floating Meta Data (object)
+ serviceAlias: `driveNow` (string) - Short name of this integrated service
+ webUiUrl: `https://de.drive-now.com/` (string) - URI of this service provider
+ lastUpdateTime: `2016-09-27T08:25:28+00:00` (string) - Timestamp when the data of the integrated service was last refreshed
+ messages (array[Message]) - Common examples: "service.unavailable", service.not.available.in.region, "date.time.not.in.allowed.period", "origin.equal.or.too.close.to.destination", or "trafficType.Car.not.supported"

### Car Sharing Station Meta Data (object)
+ serviceAlias: `flinkster` (string) - Short name of this integrated service
+ webUiUrl: `https://www.flinkster.de/` (string) - URI of this service provider
+ lastUpdateTime: `2016-09-27T11:42:58+00:00"` (string) - Timestamp when the data of the integrated service was last refreshed
+ messages (array[Message]) - Common examples: "service.unavailable", service.not.available.in.region, "date.time.not.in.allowed.period", "origin.equal.or.too.close.to.destination", or "trafficType.Car.not.supported"

### Car Sharing Base (object)
+ actions (array)- To initiate transactional steps like booking, reservation, and cancellation
    + (object)
        + name: `book` (string)
        + method: `POST` (string)
        + uri: `Resources/CarSharing/Cars/365659/Process?action=book` (string)
+ id: 365659 (number) - ID of Connect
+ description: `Caroline` (string) - Usually the license ID, approximate location, or name of car
+ type: Cars (enum, required)
    + Stations
    + Cars
+ uri: `Resources/CarSharing/Cars/365659` (string) - URI to request details
+ location (GeoJsonPoint, required)
+ provider: driveNow (string) - Alias of service provider
+ availability: 100 (number) - Current availability in percentage. "=0" or "=100" in case of floating car
+ externalId: `DriveNow_13359942` (string) - Identification number of service provider
+ operator: `DriveNow` (string) - Company operating the car fleet. Commonly same as provider

### Car Sharing Car (Car Sharing Base)
+ type: CarSharingCar (string, required)
+ model: `MINI 3-Tuerer`(string) 
+ address (Address)
+ licenseId: `M-DX5353`(string) - License plate number
+ category: `null`(string)
+ fuelType: DIESEL(enum)
    + PETROL
    + ELECTRICITY
    + LPG
    + HYDROGEN
    + HYBRID
    + UNKNOWN
+ fuelLevel: 20 (number)
+ imageLink: `null`(string)

### Car Sharing Station (object)
+ actions (array)- To initiate transactional steps like booking, reservation, and cancellation
    + (object)
        + name: `book` (string)
        + method: `POST` (string)
        + uri: `Resources/CarSharing/Stations/4516/Process?action=book` (string)
+ id: 4516 (number) - ID of Connect
+ description: `U-Bahnhof Senefelder Platz` (string) - Usually the approximate location
+ type: CarSharingStation (string, required)
+ uri: `Resources/CarSharing/Stations/4516` (string) - URI to request details
+ location (GeoJsonPoint, required)
+ provider: flinkster (string) - Alias of service provider
+ availability: 100 (number)
+ externalId: `402673` (string) - Identification number of service provider
+ operator: `FlinksterDB` (string) - Company operating the car fleet. Commonly same as provider
+ phoneNo: null (string)
+ operatorURI: null (string)
+ operatorName: `FlinksterDB` (string)
+ address (Address) - If the address isn't structured it's entirely included in `street`
+ openingHours: null (string)

### EV Charging Meta Data (object)
+ serviceAlias: `vattenfall` (string) - Short name of this integrated service
+ webUiUrl: `http://vmz.de/Vattenfall` (string) - URI of this service provider
+ lastUpdateTime: `2014-07-10T12:06:09+02:00` (string) - Timestamp when the data of the integrated service was last refreshed
+ messages (array[Message]) - Warning and error messages. Common examples: `service.unavailable`, `service.not.available.in.region`, or `trafficType.Car.not.supported`

### EV Plug Type (enum)
- `AVCON`
- `CCS_COMBO_1_PLUG`
- `CHADEMO`
- `IEC_60309_SINGLE_PHASE`
- `IEC_60309_THREE_PHASE`
- `LARGE_PADDLE_INDUCTIVE`
- `NEMA_5_20`
- `SMALL_PADDLE_INDUCTIVE`
- `TESLA`
- `TYPE_1_CONNECTOR`
- `TYPE_2_CONNECTOR`
- `TYPE_2_OUTLET`
- `TYPE_3_OUTLET`
- `TYPE_E_FRENCH_STANDARD`
- `TYPE_F_SCHUKO`
- `TYPE_G_BRITISH_STANDARD`
- `TYPE_J_SWISS_STANDARD`
- `UNKNOWN`

### EV Charging Base (object)
+ actions (array)- To initiate transactional steps like booking, reservation, and cancellation
+ id: 268355 (number) - ID of Connect
+ description: `Conti` (string)
+ type: EVChargingStation (string, required)
+ uri: `Resources/EVCharging/Stations/268355` (string) - URI to request details
+ location (GeoJsonPoint, required)
+ provider: vattenfall (string) - Alias of service provider
+ availability: 0 (number) - Current availability in percentage. "=0" or "=100" in case of floating bike
+ externalId: 3165145 (string) - Identification number of service provider
+ operator: `Vattenfall` (string) - Company operating the bike fleet. Commonly same as provider
+ address (Address) - If the address isn't structured it's entirely included in `street`
+ plugTypes (array[EV Plug Type], fixed)
+ power
    + unit: Kilowatt (Unit)
    + value: 11040

### Public Transport Meta Data (object)
+ serviceAlias: `gtfsBerlin` (string) - Short name of this integrated service
+ webUiUrl: `http://www.vbb.de/` (string) - URI of this service provider
+ lastUpdateTime: `2016-09-23T12:22:10+00:00` (string) - Timestamp when the data of the integrated service was last refreshed
+ messages (array[Message]) - Warning and error messages. Common examples: `service.unavailable`, `service.not.available.in.region`, or `trafficType.Car.not.supported`

### Station Type (enum)
- MetroStation
- CityTrainStation
- TrainStation
- BusStation
- TramStation
- RegioTrainStation
- FerryStation
- BusTramStation
- GondolaStation
- FunicularStation
- PublicTransportStation

### Traffic Type (enum)
- Walk
- Bike
- BikeSharing
- OwnBike
- Car
- CarSharing
- OwnCar
- PublicTransit
- Metro
- CityTrain
- Train
- Bus
- Tram
- RegioTrain
- Ferry
- Gondola
- Funicular
- Taxi
- Unknown
- Other

### Public Transport Station (object)
+ actions (array)- To initiate transactional steps like booking, reservation, and cancellation
+ id: 33986 (number) - ID of Connect (number, required)
+ description: `U Rosa-Luxemburg-Platz (Berlin)` (string, required)
+ type: PublicTransportStation (string, required)
+ uri: `Resources/PublicTransport/Stations/33986` (string) - URI to request details
+ location (GeoJsonPoint, required)
+ provider: gtfsBerlin (string, required) - Alias of service provider
+ availability: 100 (number, required) - Current availability in percentage. "=0" or "=100" in case of floating bike
+ externalId: 9100016 (string) - Identification number of service provider
+ operator: `VBB` (string) - Company operating the bike fleet. Commonly same as provider
+ stationType (Station Type, required) - Main station type. `PublicTransportStation` is a generic type for stations without information about deparing lines.
+ platforms - Platforms of the station
+ wheelChair (boolean) - Wheel chair accessibility.
+ stationTypes (array[Station Type], fixed) - Each station type. `PublicTransportStation` is a generic type for stations without information about deparing lines.
+ lines (array) - Lines departing at the station. Duplicates are possible due to different start and final stations.
    + (object)
        + name: U2
        + trafficType: Metro (Traffic Type)

### Time Table (Public Transport Station)
+ type: PublicTransportStationTimeTable
+ lines (array) - Lines departing at the station. Duplicates are possible due to different start and final stations.
    + (object)
        + name: U2
        + trafficType: Metro (Traffic Type)
        + operator: Berliner Verkehrsbetriebe
        + network: Berliner Verkehrsbetriebe
        + origin: `S+U Pankow (Berlin)`
        + destination: `U Deutsche Oper (Berlin)`
        + description
+ arrivals (array)
+ departures (array)
    + (object)
        + direction: `U Theodor-Heuss-Platz (Berlin)` (required)
        + line: `U2` (required)
        + trafficType: Metro (Traffic Type, required)
        + platform - Scheduled platform
        + expectedPlatform - Real-time platform
        + aimedTime: `2017-06-14T17:32:00+02:00` - Scheduled departure time (required)
        + expectedTime: `2017-06-14T17:32:00+02:00` - Real-time departure time
        + cancelled: false (boolean) - True: departure got cancelled
    
# Group Bike Sharing

## Stations and Floating Bikes [/imp-endpoint/api/V2/Resources/BikeSharing/All{?lat}{?lng}{?radius}] 
<a name="BikeSharing_StationsAndFloatingBikes" />

+ Attributes 
    + metaData(array[Bike Sharing Meta Data])
    + resources (array[Bike Sharing Base])

### Get Stations and Floating Bikes [GET]
Get a list of all bike sharing stations and floating bikes contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format for, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

@testable
+ Request (application/json)
    + Headers
  
            Authorization: Basic


+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `1000`) ... Radius of bounding circle in meter.

+ Response 200 (application/json)
    + Attributes (Stations and Floating Bikes)

+ Response 500 (application/json)
    + Attributes (object)
        + errorCode (string)
        + errorMessage (string)
        + type: SYSTEM
        + source: IMP_ENDPOINT
        
## Bike Sharing Stations [/imp-endpoint/api/V2/Resources/BikeSharing/Stations{?lat}{?lng}{?radius}{?filter}] 

+ Attributes 
    + metaData(array[Bike Sharing Meta Data])
    + resources (array[Bike Sharing Station])

### Get Stations [GET]
Get a list of all bike sharing stations contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `500`) ... Radius of bounding circle in meter.
    + filter (optional, string, `Berlin`) ... Free text filter. Multiple strings are combined by OR.

+ Response 200 (application/json)
    + Attributes (Bike Sharing Stations)

## Station with Details [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}]

+ Attributes (Bike Sharing Station)

### Get Station with Details [GET] 
Get details of a specific bike sharing station determined by `stationId`.

@nottestable

+ Parameters
    + stationId (string, `3177225`, required) ... Station ID of Connect. Can be retrieved through "Bike Sharing Stations with Basic Info".
    
+ Response 200 (application/json)
    + Attributes (Station with Details)

## Bikes at a Station [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}/Bikes]

The response attributes are the same as [Stations and Floating Bikes](#BikeSharing_StationsAndFloatingBikes).

### Get Bikes at a Station [GET] 
Get a list of bikes at a specific station determined by `stationId`.

@nottestable

+ Parameters
    + stationId (string, `3177066`, required) ... Station ID of Connect. Can be retrieved through "Bike Sharing Stations with Basic Info".
    
+ Response 200 (application/json)

    + Body
    
            {  
               "metaData":[  
                  {  
                     "serviceAlias":"nextbike",
                     "webUiUrl":"http://www.nextbike.de/",
                     "lastUpdateTime":"2017-06-07T14:37:20+02:00",
                     "messages":[  
            
                     ]
                  }
               ],
               "resources":[  
                  {  
                     "actions":[  
                        {  
                           "name":"book",
                           "method":"POST",
                           "uri":"Resources/BikeSharing/Stations/3177066/Bikes/3283255/Process?action=book"
                        }
                     ],
                     "id":3283255,
                     "description":null,
                     "type":null,
                     "uri":"Resources/BikeSharing/Stations/3177066/Bikes/3283255",
                     "location":null,
                     "provider":"nextbike",
                     "availability":100.0,
                     "externalId":"13190",
                     "operator":"nextbike Berlin",
                     "unitId":"13190"
                  }
               ]
            }

## Bike with Details at a Station [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}/Bikes/{bikeId}]
The response attributes are the same as [Stations and Floating Bikes](#BikeSharing_StationsAndFloatingBikes).

### Get Bike with Details at a Station [GET] 
Get details of a specific bike at a specific station determined by `bikeId` and `stationId` resp.

@nottestable

+ Parameters
    + stationId (string, `203869`, required) ... Station ID of Connect. Can be retrieved through "Bike Sharing Stations with Basic Info".
    + bikeId (string, `18644`, required) ... Bike ID of Connect. Can be retrieved through "Getting bikes for a specific station".
        
+ Response 200 (application/json)

    + Body
    
            {
                "actions": [
                    {
                        "name": "book",
                        "method": "POST",
                        "uri": "Resources/BikeSharing/Stations/18612/Bikes/18644/Process?action=book"
                    }
                ],
                "id": 18644,
                "description": "S+U-Bhf. FriedrichstraÃe",
                "type": "BikeSharingStationBikeDetails",
                "uri": "Resources/BikeSharing/Stations/18612/Bikes/18644/",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.385995864868164,
                        52.519676208496094
                    ]
                },
                "provider": "callabike",
                "availability": 100,
                "operator": "CallABike",
                "unitId": "9423"
            }

## Book any Bike at a Station [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}/Process?action=book]

+ Attributes
    + actions (array)
        + (object)
            + name: `cancel` (string)
            + method: `PUT` (string)
            + uri: `Processes/82?action=cancel` (string)
    + processId: 82
    + confirmation
        + featureType: BOOKING
        + confirmationId: Reservation
        + confirmationData: 6678


### Book any Bike at a Station [POST]
Book any available bike at a specific station determined by `stationId`.

@nottestable

+ Parameters
    + stationId (string, `2`, required) ... Station ID of Connect where the bike is to be booked. Can be retrieved through "Bike Sharing Stations with Basic Info".

+ Attributes
    + operator (object, required)
        + name: callabike (string, required) - Name of the operator
        + userId: `3349` (string, required)
        + password: `41b40ce13a2eb2901fe0e31a528bbd62` (string, required) - Login key
    + userId: `callabike_user` (string, required)
    + from: `2002-20-10T22:00:33+02:00` (string, optional) - start time of booking as dateTime
    + to: `2002-20-10T22:00:53+02:00` (string, optional) - end time of booking as dateTime

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book any Bike at a Station)

## Book a Bike at a Station [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}/Bikes/{bikeId}/Process?action=book]

+ Attributes (Book any Bike at a Station)

### Book a Bike at a Station [POST]
Book a specific bike at a specific station determined by `bikeId` and `stationId` resp.

@nottestable

+ Parameters
    + stationId (string, `2`, required) ... Station ID of Connect where the bike is to be booked. Can be retrieved through "Bike Sharing Stations with Basic Info".
    + bikeId (string, `1`, required) ... Bike ID of Connect of bike to be booked. Can be retrieved through "Getting bikes for a specific station".

+ Attributes
    + operator (object, required)
        + name: callabike (string, required) - Name of the operator
        + userId: `3349` (string, required)
        + password: `41b40ce13a2eb2901fe0e31a528bbd62` (string, required) - Login key
    + userId: `callabike_user` (string, required)
    + from: `2002-20-10T22:00:33+02:00` (string, optional) - start time of booking as dateTime
    + to: `2002-20-10T22:00:53+02:00` (string, optional) - end time of booking as dateTime

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book a Bike at a Station)

## Rent a Bike at Station [/imp-endpoint/api/V2/Resources/BikeSharing/Stations/{stationId}/Bikes/{bikeId}/Process?action=rent]

+ Attributes
    + actions (array)
        + (object)
            + name: `return` (string)
            + method: `PUT` (string)
            + uri: `Processes/88?action=return` (string)
    + processId: 88
    + confirmation
        + featureType: RENT (string)
        + confirmationId: 7133
        + confirmationData 
            + rentalId: 7133 (string)
            + subResourceId: 29498 (string)
            + lockCode: 9968 (string)
            + resourceId: 29496 (string)
            + startTime: `2015-05-12T13:38:36+02:00` (string)

### Rent a Bike at Station [POST]
Rent a specific bike at a specific station determined by `bikeId` and `stationId` resp.

@nottestable

+ Parameters
    + stationId (string, `2`, required) ... Station ID of Connect where the bike is to be booked. Can be retrieved through "Bike Sharing Stations with Basic Info".
    + bikeId (string, `1`, required) ... Bike ID of Connect of bike to be booked. Can be retrieved through "Getting bikes for a specific station".

+ Attributes
    + operator (object, required)
        + name: nextbikeCologne (string, required) - Name of the operator
        + userId: `1234` (string, required)
        + password: `ABChL0nHxtGvful4` (string, required) - Login key

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Rent a Bike at Station)

## Floating Bikes [/imp-endpoint/api/V2/Resources/BikeSharing/Bikes{?lat}{?lng}{?radius}]    
The response attributes are the same as [Stations and Floating Bikes](#BikeSharing_StationsAndFloatingBikes).

### Get Floating Bikes [GET]
Get a list of all floating bikes contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@nottestable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `1000`) ... Radius of bounding circle in meter.
    
+ Response 200 (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "callabike",
                        "webUiUrl": "https://www.callabike-interaktiv.de/kundenbuchung/process.php?proc=bikesuche",
                        "lastUpdateTime": "2014-09-08T13:44:09+05:30",
                        "messages": []
                    },
                    {
                        "serviceAlias": "nextbike",
                        "webUiUrl": "http://www.nextbike.de/de/standorte/",
                        "lastUpdateTime": "2014-09-08T13:40:38+05:30",
                        "messages": []
                    }
                ],
                "resources": []
            }

## Floating Bike with Details [/imp-endpoint/api/V2/Resources/BikeSharing/Bikes/{bikeId}]
The response attributes are the same as [Stations and Floating Bikes](#BikeSharing_StationsAndFloatingBikes).

### Get Floating Bike with Details [GET] 
Get details of a specific floating bike determined by a `bikeId`.

@nottestable

+ Parameters
    + bikeId (string, `18644`, required) ... Bike ID of Connect. Can be retrieved through "Get Floating Bikes".

+ Response 200 (application/json)
    
    + Body

            {
                "actions": [
                    {
                        "name": "book",
                        "method": "POST",
                        "uri": "Resources/BikeSharing/Bikes/18644/Process?action=book"
                    }
                ],
                "id": 18644,
                "description": "S+U-Bhf. FriedrichstraÃe",
                "type": "BikeSharingBikeDetails",
                "uri": "Resources/BikeSharing/Bikes/18644/",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.385995864868164,
                        52.519676208496094
                    ]
                },
                "provider": "callabike",
                "availability": 100,
                "operator": "CallABike",
                "unitId": "9423"
            }

## Book a Floating Bike [/imp-endpoint/api/V2/Resources/BikeSharing/Bikes/{bikeId}/Process?action=book]

+ Attributes (Book any Bike at a Station)

### Book a Floating Bike [POST]
Book a specific floating bike determined by `bikeId`.

@nottestable

+ Parameters
    + bikeId (string, `1`, required) ... Bike ID of Connect. Can be retrieved through "Get Floating Bikes".

+ Attributes
    + operator (object, required)
        + name: callabike (string, required) - Name of the operator
        + userId: `3349` (string, required)
        + password: `41b40ce13a2eb2901fe0e31a528bbd62` (string, required) - Login key
    + userId: `callabike_user` (string, required)
    + from: `2002-20-10T22:00:33+02:00` (string, optional) - start time of booking as dateTime
    + to: `2002-20-10T22:00:53+02:00` (string, optional) - end time of booking as dateTime

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book a Floating Bike)

## Return a Bike [/imp-endpoint/api/V2/Processes/{processId}?action=return]    

+ Attributes
    + process 
        + actions (array)
        + processId: 88
        + confirmation
            + featureType: RETURN (string)
            + confirmationId: 7133
            + confirmationData 
                + rentalId: 7133 (string)
                + subResourceId: 29498 (string)
                + lockCode: 9968 (string)
                + resourceId: 29496 (string)
                + startTime: `2015-05-12T13:38:36+02:00` (string)
                + endTime: `2015-05-12T13:56:06+02:00`(string)
                + endPlaceId: 31
                + rentCharge: 700
                + serviceCharge: 400
                + currency: Eurocent

### Return a Bike [PUT]
Return a bike and end rental process determined by `processId`. If returning is not possible, the response body explains why.

@nottestable

+ Parameters
    + processId (string, `9347`, required) ... ID of BPMN process in Connect.

+ Attributes
    + operator (object, required)
        + name: nextbikeCologne (string, required) - Name of the operator
        + userId: `1234` (string, required)
        + password: `ABChL0nHxtGvful4` (string, required) - Login key
    + location (GeoJsonPoint, required) - Drop-off point
    
+ Request (application/json)

    + Headers
  
            userToken: {someUserToken} 

+ Response 200 (application/json)
    + Attributes (Return a Bike)

# Group Car Sharing

## Stations and Floating Cars [/imp-endpoint/api/V2/Resources/CarSharing/All{?lat}{?lng}{?radius}{?f_cars}] 

+ Attributes 
    + metaData(array)
        + (Car Sharing Floating Meta Data)
        + (Car Sharing Station Meta Data)
    + resources (array[Car Sharing Base])

### Get Stations and Floating Cars [GET]
Get a list of all car sharing stations and floating cars contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `100`) ... Radius of bounding circle in meter.
    + f_cars (optional, array, `[{"provider":"driveNow"}]`) ... Filter to retrieve cars of a specific `fuelType`, `provider`, or `operator`.

+ Response 200 (application/json)
    + Attributes (Stations and Floating Cars)

## Car Sharing Stations [/imp-endpoint/api/V2/Resources/CarSharing/Stations{?lat}{?lng}{?radius}{?f_cars}]

+ Attributes 
    + metaData(array[Car Sharing Station Meta Data])
    + resources (array[Car Sharing Station])

### Get Stations [GET] 
Get a list of all car sharing stations contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `100`) ... Radius of bounding circle in meter.
    + f_cars (optional, array, `[{"provider":"flinkster"}]`) ... Filter to retrieve cars of a specific `fuelType`, `provider`, or `operator`.
    
+ Response 200 (application/json)
    + Attributes (Car Sharing Stations)

## Car Sharing Station with Details [/imp-endpoint/api/V2/Resources/CarSharing/Stations/{stationId}]

+ Attributes (Car Sharing Station)
    + type: CarSharingStationDetails (string, required)
    + notes: `Der Stellplatz befindet sich im Ã¶ffentlichen StraÃenland gleich am Ausgang der U-Bahn 2,  gegenÃ¼ber Kollwitzstr. 4, und ist als Carsharingstellplatz gekennzeichnet.`(string)
    + services: null
    + availableCars: 1 (number)

### Get Station with Details [GET] 
Get details of a specific car sharing station determined by `stationId`. 

@nottestable

+ Parameters
    + stationId (string, `203869`, required) ... Station ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Stations with Basic Info".
        
+ Response 200 (application/json)
    + Attributes (Car Sharing Station with Details)

## Cars at a Station [/imp-endpoint/api/V2/Resources/CarSharing/Stations/{stationId}/Cars]

+ Attributes
    + metaData(array[Car Sharing Station Meta Data])
    + resources (array)
        + (object)
            + actions (array)- To initiate transactional steps like booking, reservation, and cancellation
                + (object)
                    + name: `book` (string)
                    + method: `POST` (string)
                    + uri: `Resources/CarSharing/Stations/4516/Cars/1131139/Process?action=book` (string)
            + id: 33188 (number) - ID of Connect
            + description: `F-R 8743` (string) - Usually the license ID, approximate location, or name of car
            + type: CarSharingStationCarDetails (string, required)
            + uri: `Resources/CarSharing/Stations/1080/Cars/33188` (string) - URI to request details
            + location (GeoJsonPoint, required)
            + provider: flinkster (string) - Alias of service provider
            + availability: 100 (number) - Current availability in percentage. "=0" or "=100" in case of floating car
            + externalId: `402673` (string) - Identification number of service provider
            + operator: `FlinksterDB` (string) - Company operating the car fleet. Commonly same as provider
            + model: `CitroÃ«n DS3 1,6 Diesel 68kW NAVI`(string) 
            + address (Address)
            + licenseId: `F-R 8743`(string) - License plate number
            + category: `null`(string)
            + fuelType: DIESEL(enum)
                + PETROL
                + ELECTRICITY
                + LPG
                + HYDROGEN
                + HYBRID
                + UNKNOWN
            + fuelLevel: `null`(string)
            + imageLink: `www.flinkster.de/common/gethashdata.php?uniquebid=73406c9a68b4cc8286e53d12e326e1ab`(string)

### Get Cars at a Station [GET]
Get a list of cars at a specific station determined by `stationId`.

@nottestable

+ Parameters
    + stationId (string, `203869`, required) ... Station ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Stations with Basic Info".
    
+ Response 200 (application/json)
    + Attributes (Cars at a Station)

## Cars at a Station available in future [/imp-endpoint/api/V2/Resources/CarSharing/Stations/{stationId}/Cars{?from}{?to}]

+ Attributes (Cars at a Station)

### Get Cars at a Station available in future [GET]
Get a list of available cars in future at a specific car sharing station.

@nottestable

+ Parameters
    + stationId (string, `203869`, required) ... Station ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Stations with Basic Info".
    + from (string, `2015-04-14T13:00:00%2B02:00`) ... From date 
    + to (string, `2015-04-19T16:00:00%2B02:00`) ... To date

+ Response 200 (application/json)
    + Attributes (Cars at a Station available in future)

## Book any Car at a Station [/imp-endpoint/api/V2/Resources/CarSharing/Stations/{stationId}/Process?action=book]

+ Attributes
    + confirmationId: 1012020020 (string)
    + comments: Comments (string)

### Book any Car at a Station [POST]
Book any available car at a specifc station determined by `stationId`.

@nottestable

+ Parameters
    + stationId (string, `1`, required) ... Station ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Stations with Basic Info".

+ Attributes
    + operator: flinkster (string, required) - Name of the operator
    + userId: `4711/10` (string, required)- ID of user
    + from: `2002-20-10T22:00:33+02:00` (string, optional) - start time of booking as dateTime
        + Default: current server time
    + to: `2002-20-10T22:00:53+02:00` (string, optional) - end time of booking as dateTime

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book any Car at a Station)

## Book a Car at a Station [/imp-endpoint/api/V2/Resources/CarSharing/Stations/{stationId}/Cars/{carId}/Process?action=book]

+ Attributes (Book any Car at a Station)

### Book a Car at a Station [POST]
Book a specific car at a specifc station determined by `carId` and `stationId` resp.
@nottestable

+ Parameters
    + stationId (string, `1`, required) ... Station ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Stations with Basic Info".
    + carId (string, `2`, required) ... Car ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Floating Cars".

+ Attributes
    + operator: flinkster (string, required) - Name of the operator
    + userId: `4711/10` (string, required)- ID of user
    + from: `2002-20-10T22:00:33+02:00` (string, optional) - start time of booking as dateTime
        + Default: current server time
    + to: `2002-20-10T22:00:53+02:00` (string, optional) - end time of booking as dateTime

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book a Car at a Station)

## Floating Cars [/imp-endpoint/api/V2/Resources/CarSharing/Cars{?lat}{?lng}{?radius}{?f_cars}] 

+ Attributes 
    + metaData(array[Car Sharing Floating Meta Data])
    + resources (array[Car Sharing Car])

### Get Floating Cars [GET] 
Get a list of all available floating cars contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `100`) ... Radius of bounding circle in meter.
    + f_cars (optional, array, `[{"provider":"driveNow"}]`) ... Filter to retrieve cars of a specific `fuelType`, `provider`, or `operator`.

+ Response 200 (application/json)
    + Attributes (Floating Cars)

## Floating Car with Details [/imp-endpoint/api/V2/Resources/CarSharing/Cars/{carId}]

+ Attributes (Car Sharing Car)
    + type: CarSharingCarDetails
    + name - Car name. Commonly same as `model`
    + power
    + seatCount (number) - Number of seats
    + doorCount (number) - Number of doors
    + colour - Car colour
    + properties (array, fixed)
        + (enum)
            + Airbags
            + ABS
            + AllSeasonTires
            + ServoSteering
            + AirConditioningSystem
            + Automatic
            + FogLight
            + Radio_CD
            + NavigationSystem
            + FineParticlesBadge_green
            + AUX
            + WinterTires
            + ParticulateFilter
            + SeatHeating
            + ChildSafetySeatAnchorage    
    + locationNote
    + operatorURI - Operator URI
    + tariffs (array)
        + (object)
            + amount (object)
                + unit: Eurocent (Unit)
                + value: 31
            + basis (object)
                + unit: minute (Unit)
                + value: 1

### Get Floating Car with Details [GET] 
Get details of a specific floating car determined by `carId`. 

@nottestable

+ Parameters
    + carId (string, `365659`, required) ... Car ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Floating Cars".

+ Response 200 (application/json)
    + Attributes (Floating Car with Details)

## Book a Floating Car [/imp-endpoint/api/V2/Resources/CarSharing/Cars/{carId}/Process?action=book]

+ Attributes
    + actions (array)- To cancel the booking
        + (object)
            + name: `cancel` (string)
            + method: `PUT` (string)
            + uri: `Processes/967620?action=cancel` (string)
    + processId: 967620
    + confirmation
        + featureType: BOOKING
        + confirmationId    : `res_24009`
        + confirmationData
            + resource
                + type: CarSharingCarDetails
                + location (GeoJsonPoint, required)
                + licenseId: `M-DX5721`
            + interval
                + from: `2015-06-24T17:05:24+05:30`
                + to: `2015-06-24T17:20:24+05:30`

### Book a Floating Car [POST]
Book a specific floating car determined by `carId`.

@nottestable

+ Parameters
    + carId (string, `2`, required) ... Car ID of Connect. Can be retrieved through "Car Sharing Locations with Basic Info" or "Floating Cars".

+ Attributes
    + operator: `drivenow` (string, required)
    + from (string, optional) - start time of booking as dateTime
        + Default: `current server time`
    + to (string, optional) - end time of booking as dateTime
    + userId: `4711/10` (string, required)

+ Request (application/json)

+ Response 201 (application/json)
    + Attributes (Book a Floating Car)

# Group EV Charging

## EV Charging Stations [/imp-endpoint/api/V2/Resources/EVCharging/Stations{?lat}{?lng}{?radius}]

+ Attributes 
    + metaData(array[EV Charging Meta Data])
    + resources (array[EV Charging Base])

### Get EV Charging Stations [GET]
Get a list of all electric vehicle (EV) charging stations contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `1000`) ... Radius of bounding circle in meter.

+ Response 200 (application/json)
    + Attributes   (EV Charging Stations)

## EV Charging Station with Details [/imp-endpoint/api/V2/Resources/EVCharging/Stations/{stationId}]

+ Attributes (EV Charging Base)
    + chargingStationType: null (string)
    + managedChargeable (boolean)
    + owner: null (string)
    + voltage (number)
    + properties (object)
    + numberOfUnits (number)
    + availableUnits (number)
    + unit (array)
        + (object)
            + description: `+49*809*010*150109`
            + state: `IN_USE` (enum)
              - `FREE`
              - `IN_USE`
              - `UNKNOWN`
              - `DEFECTIVE`
              - `CLOSED`
            + plugType: `Type2Outlet`(EV Plug Type)

### Get EV Charging Station with Details  [GET] 
Get details of a specific charging station determined by `stationId`. 

@nottestable

+ Parameters
    + stationId (string, `203869`, required) ... Station ID of Connect. Can be retrieved through "List of EV Charing Stations with Basic Info".

+ Response 200 (application/json)
    + Attributes (EV Charging Station with Details)

# Group Ticketing
This is a group of all public transport ticketing related rest resources.

Usually, a ticket is bought in three steps: First, the available tickets for a defined service will be requested. Then the selected ticket will be bought and finally the receipt of the ticket has to be confirmed.
    
## Available Tickets [/imp-endpoint/api/V2/Resources/Ticketing/Tickets?action=book]    
Get a list of available products (tickets) for specified origin and destination. Both are public transport stations and are identified by `{pointId}`. 
PointId can be retrieved using `GET /imp-endpoint/api/V2/Resources/PublicTransport/Stations`

The data structure of the request:

attribute | json data type | comments
--- | --- | ---
origin | Object | Point id and/or address string (depending on Service HandyTicket requires address while ZPS/Nova does not need it.).To be specified for way-based request.
destination | Object | Point id and address string.To be specified for way-based request.
viaPoints | Object | List of stations IDs as well as geo locations the route should pass (Optional)
numberOfTickets | Object | Number of tickets (Depending on service-to-be-used).
ticketingCategory | String | Code for category defined by the operator, e.g. service class and specified zone. Range of values for Berlin: B0, B1, B2, B3.Range of values for Switzerland:2361,125,4092.Optional for way-based/connection-based request.Mandatory for product-based request.
outwardProposalId | String |Trip id for outward trip.To be specified for connection-based request.
returnProposalId | String |Trip id for return trip.To be specified for connection-based request.
medium | Object | Media of ticket. (Optional)
classes | Object | Classes of ticket for eg. 1st Class/2nd Class. (Optional)
type | Object | Type of trip for ticket for eg. Single-Trip Ticket/Return-Trip Ticket.
travellers | Object | List of  traveller information (Optional)
time | Object | Time of departure for way based trip
returnTime | Object| Time of departure for return journey(if specified).

Based on the ticketing-service to-be-used , certain attributes have been provided and shall be used in the request accordingly.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | List of available actions on this resource (buy/confirm)
id | Number | Resource id
description | String | 
type | String | 
uri | URI | URI to request more details (where available)
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
operator | String | Name of Ticket Operator
tariffText | String | Contains Zone and Validity information
tariffInformation | String | Conditions applied for ticket
price | double | Price of ticket
currency | String | Currency

HTTP Headers:
- Accept-Language: This header specifies the language to be used for the attributes obtained in the respone, which is the list of tickets obtained. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.
    
### Getting available tickets [POST]
@nottestable
    
+ Request (application/json)

    + Body
    
            { 
             "origin": { 
             "id": "130", 
             "address": "Dresden Hauptbahnhof"
             },
             "destination": { 
             "id": "130", 
             "address": "Dresden Postplatz" 
             },
             "numberOfTickets": "1",
             "ticketingCategory": "B0",
             "viaPoints": []
            }

+ Response 200 (application/json)

    + Body
    
            {
                [
                    {
                        "actions": [
                            {
                                "name": "buy",
                                "method": "POST",
                                "uri": "Resources/Ticketing/Tickets/{resourceId}/Process?action=buy"
                            }
                        ],
                        "id": {resourceId},
                        "description": null,
                        "type": null,
                        "uri": "Resources/Ticketing/Tickets/157",
                        "location": null,
                        "provider": null,
                        "operator": "handyticket",
                        "tariffText": "DVB VVO-Einzelfahrt normal Preisstufe 1 fÃ¼r Zone Dresden gÃ¼ltig 18.11.13 12:21 Uhr bis 13:21 Uhr.",
                        "tariffInformation": "Gilt in der angegebenen Tarifzone; max. 1 Std.",
                        "price": 
                        {
                            "unit": "Chf",
                            "value": 2.8
                        }

                    }
                ]
            }

## Buy a Ticket [/imp-endpoint/api/V2/Resources/Ticketing/Tickets/{id}/Process?action=buy]    
The response contains details of a bought ticket, identified by {ticketIds} and {ticketContent} 

The data structure of the request body:

attribute | json data type | comments
--- | --- | ---
operator | OperatorCredentials | operator credentails details
userName | String | application user name who wants to buy the ticket
validityPeriodStartTime | String | Validity period start time for selected ticket 

The data structure of OperatorCredentials contains the following attributes:

attribute | json data type | comments
--- | --- | ---
name | String | Name of Ticket Operator (handyticket or zpsnova depending on service)
userId | String | Traveler Id ( Depends on the ticketing-serivce to be used.)
password | String | Password for buying ticket ( Depends on the ticketing-serivce to be used.)

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | List of available actions on this resource (confirm)
processId | Number | BPMN process id
confirmation | Object | Buy ticket response data


confirmation contains following fields:

attribute | json data type | comments
--- | --- | ---
requestId | String | Resource id received while initiating the booking
ticketIds | Array | Array of ticket ids 
ticketContent | Base64Binary | Content of Ticket
price | Object | Price of ticket with currency and value specified. 
ticketType | String | Type of ticket
productionDateTime | Calendar | Timestamp of production of ticket. 
ticketingCategory | String | Category of ticket
tariffInfo | String | Information about tariff zones
validFromDay |Calendar| Ticket valid from date 
validFromTime | Calendar| Ticket valid from time
validToDay | Calendar| Ticket valid to day
validToTime | Calendar | Ticket valid to time
discountCard | String | Discount card used
discountCardCode | String | Discount card code
travelClass | String | Travel Class (i.e 1st or 2nd Class)
medium | String | Type of Ticket (E-Ticket or Ticket on paper)
tripType | String |  Type of trip ( One-way or return)
validityPeriod | Object | validity Period of ticket
originId | String| Station ID of origin 
originAddress | String | Address of origin 
destinationId | String| Station ID of destination
destinationAddress | String | Address of destination
vias | String | Segments in travel route
traveller | Object | Containts information about the traveller
fqCode | String | Maps to the fqCode provided by the ticketing service provider
ticketingDescription | String | Type of ticket (One-way or return ticket)
tariffInformation | String | Concatenated information about tariff 
tariffText | String | Concatenated information about tariff 
securityCode | String | maps to the SecurityCode provided by the ticketing service provider
customerSegmentName | String |  Customer segment (e.g. Half-Fare travelcard).  
usageConditons | String | Conditions under which ticket can be used
serviceConditions | String | Special conditions for general usage
referenceNo | String | maps to the referenceNo provided by the ticketing service provider
travelClassText | String | Travel class mentioned in ticket
ticketOriginLabel | String | "From:" (Translated based on language header specified)
ticketDestinationLabel | String | "To:" (Translated based on language header specified)
includingVatLabel | String | "Incl."  (Translated based on language header specified)
vatLabel | String | "VAT"  (Translated based on language header specified)
mediumDesc | String | Special information for the type of this ticket (e.g. online ticket has special conditions). 
vat | Integer | Amount of value added tax


HTTP Headers:
- userToken: Token in the response received to {{host}}/imp-endpoint/api/{{version}}/Partners/User/Process?action=register
- Accept-Language: This header specifies the language of the attribues in the buy request to be sent. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.

### Buying a ticket [POST]
@nottestable

+ Parameters
    + id (string, `9347`, required) ... Ticket ID of Connect.
    
+ Request (application/json)

    + Headers
        
            userToken: {someUserToken} 

    + Body
    
            {
                "operator": {
                    "name": "handyticket",
                    "userId": "01805006013",
                    "password": "7555"
                },
                "validityPeriodStartTime": "15:41:00.000"
            }
   
+ Response 201 (application/json)

    + Body
    
            {
                "actions": [
                    {
                        "name": "confirm",
                        "method": "PUT",
                        "uri": "Processes/{processId}?action=confirm"
                    }
                ],
                "processId": {processId},
                "confirmation": {
                    "featureType": "BUY",
                    "confirmationId": null,
                    "confirmationData": {
                        "requestId": "{resourceid}"
                        "ticketIds": [
                            "274946704480125"
                        ],
                        "ticketContent": "UEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0TkNqeDBhV15yWlhSRmNuZGxjbUp6VUhKdmVtVnpjMUpsYzNCdmJuTmxQZzBLSUNBOGNISmxhWE0rTWl3eU1Ed3ZjSEpsYVhNK0RRb2dJRHgzWVdWb2NuVnVaejVGVlZJOEwzZGhaV2h5ZFc1blBnMEtJQ0E4WVdkVVpYaDBQakY0SUVSV1FpQldWazh0UldsdWVtVnNabUZvY25RZ2JtOXliV0ZzSUZCeVpXbHpjM1IxWm1VZ01TQm13N3h5SUZwdmJtVWdSSEpsYzJSbGJpQm53N3hzZEdsbklERXpMakV4TGpFeklEQTFPalV6SUZWb2NpQmlhWE1nTURZNk5UTWdWV2h5TGp3dllXZFVaWGgwUGcwS0lDQThiV1Z6YzJGblpTQjBlWEJsUFNKM1lYSnVhVzVuSWo0OEwyMWxjM05oWjJVK0RRb2dJRHh1ZFhSNlpYSWdMejROQ2lBZ1BHSmxjbVZqYUhScFozVnVaMlZ1UGcwS0lDQWdJRHhpWlhKbFkyaDBhV2QxYm1jK0RRb2dJQ0FnSUNBOGMzUmhkSFZ6UGpBOEwzTjBZWFIxY3o0TkNpQWdJQ0FnSUR4MGVYQStNVHd2ZEhsd1BnMEtJQ0FnSUNBZ1BIQjJQall3TmpBOEwzQjJQZzBLSUNBZ0lDQWdQSEJ5YVcxaFpYSkxkbkErTmpBeE16d3ZjSEpwYldGbGNrdDJjRDROQ2lBZ0lDQWdJRHh6Wld0MWJtUmhaWEpMZG5BK05qQXhNend2YzJWcmRXNWtZV1Z5UzNad1BnMEtJQ0FnSUNBZ1BIQnliMlIxYTNSRGIyUmxQakU4TDNCeWIyUjFhM1JEYjJSbFBnMEtJQ0FnSUNBZ1BHZGxZbWxsZEhOSGRXVnNkR2xuYTJWcGRENHdQQzluWldKcFpYUnpSM1ZsYkhScFoydGxhWFErRFFvZ0lDQWdJQ0E4ZW1WcGRFZDFaV3gwYVdkclpXbDBQakE4TDNwbGFYUkhkV1ZzZEdsbmEyVnBkRDROQ2lBZ0lDQWdJRHh1ZFhSNlpYSlVlWEErTUR3dmJuVjBlbVZ5Vkhsd1BnMEtJQ0FnSUNBZ1BITjBZWEowV205dVpUNHhNRHd2YzNSaGNuUmFiMjVsUGcwS0lDQWdJQ0FnUEd0dmJXWnZjblErTVR3dmEyOXRabTl5ZEQ0TkNpQWdJQ0FnSUR4eGRXRnNhWFJoWlhRK01Ud3ZjWFZoYkdsMFlXVjBQZzBLSUNBZ0lDQWdQR0psYzJOb2NtVnBZblZ1Wno1RVZrSWdWbFpQTFVWcGJucGxiR1poYUhKMElHNXZjbTFoYkNCUWNtVnBjM04wZFdabElERWdac084Y2lCYWIyNWxJRVJ5WlhOa1pXNGdaOE84YkhScFp5QXhNeTR4TVM0eE15QXdOVG8xTXlCVmFISWdZbWx6SURBMk9qVXpJRlZvY2k0OEwySmxjMk5vY21WcFluVnVaejROQ2lBZ0lDQWdJRHgwWVhKcFptbHVabTgrUjJsc2RDQnBiaUJrWlhJZ1lXNW5aV2RsWW1WdVpXNGdWR0Z5YVdaNmIyNWxPeUJ0WVhndUlERWdVM1JrTGp3dmRHRnlhV1pwYm1adlBnMEtJQ0FnSUNBZ1BITnBZMmhsY21obGFYUnpUV1Z5YTIxaGJENUZUakV0TVRBdE1UTXhNVEExTlRNS1VDb3FNekV5TXpFeU16aDJDazF2ZEdsMklEUXhPVFV6TlRNM05qY0tMUzFVUlZOVUxTMVVTVU5MUlZRdExRbzhMM05wWTJobGNtaGxhWFJ6VFdWeWEyMWhiRDROQ2lBZ0lDQWdJRHhpWVhKamIyUmxQbWxXUWs5U2R6QkxSMmR2UVVGQlFVNVRWV2hGVldkQlFVRkpORUZCUVVOUFEwRk5RVUZCUkZGSk9FRTJRVUZCUVVKc1FrMVdSVmd2THk4NFFVRkJRbFozZEU0clFVRkJSVFZGYkVWUlZsSTBNblV5WXpJeU4ycE5RWGhGYkdZdkx6WlhNVkppUXpKU05UbEVjR3NyWTJoQ1ZHSlpTa3haT0hScGFHVm9jVTl6TVRsbVppdDJjamRtYmpJNVpuUTFaSEk1WkRNdk1TdDJZaXQyYmpWNlpsZ3laR051SzNodU4wVmtkSEpKU25nclkyOVdNRzV1ZDA1MlRVODBMMjR2WlVsMEwwRmtaSHA0UlU5TVoyNUJSREozWlhWcVVFZEhZMFV4Y1ZBeU1pdHZNM1EwS3pkbWRUUmxXRVJQVGpBdkwzazBUbnB0ZEhveFlWQnphMVpaVFRoR2VrbGlUbkJzZFZCaVMwMUdkMlZ1VERkMGRYTkxZM2hVYTNReWJGWkljbTFQZHpaT0szVktaMnhQV0U5VWJFZFhjbnB1UWxOeFVXVnpSbnBuV0daSVowMU5PVVJMWlRaeGRUWTRkWFYxY1VRM2MySTNORXg0T1M5UGNTc3ZkVVpHWjI1SVJqTnhaR3RQY21rMk4zUjFkMDlsU1RsV2IyNTNSRkUwWm1GR1YxTkNXVzByV2t0Vk1FWlZiME0yVUVJM0wwOUtaM3BOV2pKbGVua3JjMDkyTkdGWEt6RnJWM2xZZW5OT1JHaHRabmd2YldWVWRtNVJkRXBVU2tsSk5tSkViMDU2YkdsNE0yZFpRMHRHU1djMGNsSlRjVlJ5UWs4eWFrWlBSVXA0TlhOMWVsVmhVbTR6VFVaRlpGSllNRWxTTlVGSmFFMVFiWGd4VUdjM016STJOa1pOVFVsdFJuZGxhMHBsUm5sUFZubEVlRnB1V0hsM1prczRVMFY0ZFhkTlJHaEZha1pEY1RsV04yZGFSbEJzT0UxdVJtUkNiMk50Tmt0bGRVNVBVVkpKZHpSM1kxTnRXRVpNWlV0RWFXTkJSbEZFY0VaVGFUQjZRbXN2YmpBMU9VOUxlREZQWjNoalJEYzRhbk5RY0RSWk1sTkxVM0E0VDBsRmQzQjZaVlo2ZEhWWldWaERTVzVxV25FeGMzUXJUV3MxTWtOV1RsRkZjbUk0WTFScGRHUkdPRk16YWtKRk9XdFRjVXB0TlVjeFIwRmFTR2RsYm14cFVtTjNiRmhwYmpST2NGUXlhM0JuUVhsQ1MxRnZUM1EwWlZsdmNYcEZTRVJsU25sRFNIZFRUREJ6VTBsT1ZFb3lhRXRKWlc1NmVWbFlNakZKTTBwWE4wTmxSMFJvT1c5bVpWVnhObHBWU0ZSNlJGcEljVUY1VVZBeFQzY3ZRMWxZUzFKcGJERjVRMGd5YVhKaWJsZFJlbGR0ZUZkR2R6VnJVMEpEY0djclMxWTBVVGxqYkhWaVQwRkRNbmR0UW5kNVduQmtTMWR1TkVaUGVtbEtjM1JzVG1scmQyRkZWMVZETDJKb1FuZFRTM05XWTNkclFsQTVkRVpETkVWNlEwSnVXbTR2VW5scVkzRXlWWEJDY3k5U1EwVm9ZMDFwY0dOWlNrWTBTbmhsYjAxWVRVeG9UMU55ZVVFME0wWjZNSFJJVW1oVk5EWkxTVFphTmtvNFpWTkNiMlJHUTI0d05VODNia2xXVEN0V1VUbDNWMkZJTkRWRFRUWklNek5HSzNnNWVqZHNUVFUzVnpKcFpXTkhiMEpHTmtabFJrcDRaUzl1ZFhvemJWWTBabE5zWW5jMWMwUk9jMU56UTBScVZWaHdOVVp1WWpNMWN6QlVkakJvWmpaWGNsQlJTbWM0VDJ4NlRqTnhWMmRRUVdwU2FHc3dTVWxUSzJ0M1QwSTBWMDlVYm5kcFpreHJNVWRXTjNjeVVrZDNTbTFUY1RSdGRXMHdjMkp0ZUZseGFWVjBlVWRuWmtoRFQyVTNZWEJ4YjJKck9HZHhSR2RYTUZWTldVaEhkRFJ0VTNsTGIyOHlZazlOYkhCWFZIRmhRMWxsYTB3MVlrVnpOamwzVFhOdVJHaExjSGhaSzBGM1EyUkJXRXMxYldkdFZGbG1kMk5GWVhCalJYaGpUSEo0YzI5NVlXRmFXa3BEYlRKRlJFMXJRbE53UTBsblkwNTViVXhWYlhOd1lrVnBWVlJ1YlRoVVVGcFhNWEJqUzJkb05YUkpjbTkzV2xsM1IyVkhNRVpRWmxKU1JUSkJRVFJZT0hrMU4xaFdiM0Y2YlZJMFRqSnphSEkyVEdkMVJXcExUbTlMVWl0SGIyMWxlV1pwY1d4M2NFUk5Oa2d6TTJ4dVpuaGhXSFZ3TWxGek5WbDBNRGM1VnpocVFURnNkM0pJVWtkTmEyVkhTR0ZyYjJkRFNUaFhPWE5hUVVob01YVnNURWhhTWtOYVJWaFJWVGQyV1hKdlYwSlpaRVphWWpaU1ltdHZVV1ZQZGtKMFIxY3hRbHByZDA5SFUzbHlaMmxpYUZJMVZEQnFWMHg2YkhOMVIwRlFTRlZ6Y0ZvNVIwSmljQ3MyVEZGaFdWbFJVREJXUVVsak0wRlZOME5QYmk5ek5WQjRaRXBKUTBOdGVrRTBka1ZJVTFKYU5WUkJOVXB2Uldwa2RHRllhRWgzWlVoNWFFUmpNR1ZWZGtGcmVFWnhTMWhEUTJWMFFrNU5XRU5KYlcxWFFqUlRVMFI0YlROallYaEpURWs0WjNkUFExbG5TWGh1YlV4TGVUVXlNRUl4YkRZMlFqVjJVbmhQUlhoQk9HdFpaak5wUW05UU1IWnBlbFY0TWtWeWJIZG1SbEJWZGtremNHNWxPVGsyYTBOclNHZGlTSFExY1N0MU5tMVJURzVYTTFWa2NHOXBSRkUwYkhCUGVFOUllbUZXTUVkMWEwRjZXSEZXTjJOR0wyOXZia0VyTHpoNFpqbEVkRTlLVEd4emQwMXpObVJMT0hSRmREazVkV2x2VEdwTVZtNHZjVkpKYW5sTGJEaG1iR05YWlRGQlIxVllRalJoTjJFeGFqbGhZWEJKTW5weVNIZFRiRGhpUWl0UlpXcFVRMWx3Vm1aMlEwZFJRVUZCUVVKS1VsVTFSWEpyU21kblp6MDlQQzlpWVhKamIyUmxQZzBLSUNBZ0lDQWdQR0psY21WamFIUnBaM1Z1WjNORVlYUmxQakl3TVRNdE1URXRNVE5VTURVNk5UTTZNakVyTURFd01Ed3ZZbVZ5WldOb2RHbG5kVzVuYzBSaGRHVStEUW9nSUNBZ0lDQThaM1ZsYkhScFoydGxhWFJ6UW1WbmFXNXVQakl3TVRNdE1URXRNVE5VTURVNk5UTTZNakFyTURFd01Ed3ZaM1ZsYkhScFoydGxhWFJ6UW1WbmFXNXVQZzBLSUNBZ0lDQWdQR2QxWld4MGFXZHJaV2wwYzBWdVpHVStNakF4TXkweE1TMHhNMVF3TmpvMU16b3lNQ3N3TVRBd1BDOW5kV1ZzZEdsbmEyVnBkSE5GYm1SbFBnMEtJQ0FnSUNBZ1BHWnZjbTFoZEhSbFpGQnlaV2x6UGpJc01qQWdSVlZTUEM5bWIzSnRZWFIwWldSUWNtVnBjejROQ2lBZ0lDQWdJRHgzWVdWb2NuVnVaejR1UEM5M1lXVm9jblZ1Wno0TkNpQWdJQ0FnSUR4cmIyNTBjbTlzYkdWMWNuTkRiMlJsUGtWT01TMHhNQzB4TXpFeE1EVTFNend2YTI5dWRISnZiR3hsZFhKelEyOWtaVDROQ2lBZ0lDQWdJRHhyYjI1MGNtOXNiRzFsWkdsMWJUNVFLaW96TVRJek1USXpPSFk4TDJ0dmJuUnliMnhzYldWa2FYVnRQZzBLSUNBZ0lDQWdQSFJoWjJWelEyOWtaVDVOYjNScGRqd3ZkR0ZuWlhORGIyUmxQZzBLSUNBZ0lDQWdQSFJwWTJ0bGRFbEVQakkzTkRrME5qY3dORFE0TURFeU5Ud3ZkR2xqYTJWMFNVUStEUW9nSUNBZ0lDQThjMmxuYm1GMGRYSmxQaTB0VkVWVFZDMHRWRWxEUzBWVUxTMDhMM05wWjI1aGRIVnlaVDROQ2lBZ0lDQThMMkpsY21WamFIUnBaM1Z1Wno0TkNpQWdQQzlpWlhKbFkyaDBhV2QxYm1kbGJqNE5Dand2ZEdsamEyVjBSWEozWlhKaWMxQnliM3BsYzNOU1pYTndiMjV6WlQ0TkNnMEs=",
                        "price": 
                        {
                            "unit": "Euro",
                            "value": 1.6
                        }
                        
                    }
                }
            }

## Confirm ticket delivery [/imp-endpoint/api/V2/Processes/{processId}?action=confirm]    
The response contains details of a bought ticket, identified by {ticketIds} and {ticketContent} 

The data structure of the request body:

attribute | json data type | comments
--- | --- | ---
requestId | String | Resource id
ticketIds | String | Tickets ids for confirmation
operator | String | Name of Ticket Operator

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | List of available actions on this resource (confirm)
processId | Number | BPMN process id
confirmation | Object | Confirm ticket response data


confirmation contains following fields:

attribute | json data type | comments
--- | --- | ---
featureType | String | Feature type
confirmationId | String | (Dependig on the service to-be-used)
confirmationData | Object | Response of confirm ticket request

confirmationData contains following fields:

attribute | json data type | comments
--- | --- | ---
confirmed | Boolean | Value indicating success/failure
messages | Array | (Depending on the ticket-service to be used.)    
HTTP Headers:
- userToken: Token in the response received to {{host}}/imp-endpoint/api/{{version}}/Partners/User/Process?action=register
- Accept-Language: This header specifies the language of the relevant messages for the ticket. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.

### Confirming a ticket delivery [PUT]
@nottestable

+ Parameters
    + processId (string, `9347`, required) ... ID of BMPN process in Connect.
    
+ Request (application/json)

    + Headers
        
            userToken: {someUserToken} 

    + Body
    
            {
              "requestId": "{resourceId}",
              "ticketIds": [
                            "274946704480125"
                           ],
               "operator": {
                    "name": "handyticket"        
                }
            }

+ Response 200 (application/json)

    + Body
    
            {
                "process": {
                    "actions": [],
                    "processId": "{processId}",
                    "confirmation": {
                        "featureType": "CONFIRM",
                        "confirmationId": null,
                        "confirmationData": {
                            "confirmed": true,
                            "ticketContent": "iVBORw0KGgoAAAANSUhEUgAAAK8AAACvAQMAAACxXBw2AAAAB3RJTUUH2woPDAQmGYX3JgAAAAlwSFlzAAAK8AAACvABQqw0mAAAAAZQTFRFAAAA////pdmf3QAAAShJREFUeNrtl0EOhCAMRcvKJTeCmw16M7xRl6xgfkGNmllOITPRpEGfCwv/tyCVT1emB/8TToTLEdloC8t90Me+RiaMHGqoY0cmeXZ2BXqRGY1LxJqsnTGE6IarDJi8KH9Xpy+uHkRyEndr6uCttjyTaH8tQCWcTBKzYfp4dZq8Ihbtp1JWPDg7Q/8yDGM9kiRHCDhwT1ATxylPWb6PWPhQXhPXWmMDARxdZeiN4yTJwfZkMOZdBk0smTS9nc10WRMtDJuJ2WB8U2a78ECcWo810mTsvK+JJm6NRfraVQY9XJupr1OXnSSc+7cWboeFuGVyNNMBWLZRuG/bR177BqOPAWF6w92wr+Xt4e95IBYZcFRAclL7XXA7LADDg4ED6+Ov/CA8+NfwG147q3gE6HAPAAAAAElFTkSuQmCC"
                        }
                    }
                }
            }

## Cancelation of ticket [/imp-endpoint/api/V2/Processes/{processId}?action=cancel] 
The data structure of the request body:

attribute | json data type | comments
--- | --- | ---
requestId | String | Resource id
ticketIds | String | Tickets ids for cancelation
operator | String | Name of Ticket Operator

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
processId | Number | BPMN process id
confirmation | Object | Cancel ticket response data


confirmation contains following fields:

attribute | json data type | comments
--- | --- | ---
featureType | String | Feature type
confirmationId | String | (Dependig on the service to-be-used)
confirmationData | Object | Response of cancel ticket request

confirmationData contains following fields:

attribute | json data type | comments
--- | --- | ---
status | Boolean | Value indicating success/failure
data | Array | (Depending on the ticket-service to be used.)    
HTTP Headers:
- userToken: Token in the response received to {{host}}/imp-endpoint/api/{{version}}/Partners/User/Process?action=register
- Accept-Language: This header specifies the language of the relevant messages for the ticket. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.

### Canceling a ticket [PUT]
@nottestable

+ Parameters
    + processId (string, `192636`, required) ... ID of BMPN process in Connect.
    
+ Request (application/json)

    + Headers
        
            userToken: {someUserToken} 

    + Body
    
            {
              "requestId": "{resourceId}",
              "ticketIds": [
                            "15900040459226"
                           ],
               "operator": {
                    "name": "zpsnova"        
                }
            }
 
+ Response 200 (application/json)

    + Body
    
            {
                "process": {
                    "actions": [],
                    "processId": "192636",
                    "confirmation": {
                        "featureType": "CANCELATION",
                        "confirmationId": null,
                        "confirmationData": {
                            "status": "CANCELED",
                            "data": [
                               "15900040459226 TECHNISCH_ANNULLIERT" 
                        }
                    }
                }
            }

## Refund Ticket Offers [/imp-endpoint/api/V2/Resources/Ticketing/Refunds?action=offer]    
Get a list of available ticket refund offers for specified ticket.

The data structure of the request:

attribute | json data type | comments
--- | --- | ---
deductible | Object | Value unit pair optional object to be set for deducting amount from refund.
refunds | Array of Object | Ticket id and refund reason string. To be specified for refund request with reason being optional.

Based on the ticketing-service to-be-used , certain attributes have been provided and shall be used in the request accordingly.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | List of available actions on this resource (buy/confirm)
id | Number | Resource id
description | String | 
type | String | 
uri | URI | URI to request more details (where available)
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
operator | String | Name of Ticket Operator
tariffText | String | Contains Zone and Validity information
tariffInformation | String | Conditions applied for ticket
price | Object | Value unit pair of object giving total amount of ticket
deductible | Object | Value unit pair of object which gives deduction details for ticket
minDeductible | Object | Value unit pair of object which gives minimum amount that will be deducted for ticket
maxDeductible | Object | Value unit pair of object which gives maximum amount that will be deducted for ticket

HTTP Headers:
- Accept-Language: This header specifies the language to be used for the attributes obtained in the respone, which is the list of tickets obtained. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.

### Getting available tickets [POST]
@nottestable
    
+ Request (application/json)

    + Body
    
            { 
                "deductible": { 
                    "value": 10.0, 
                    "unit": "Chf"
                },
                "refunds": [{ 
                    "ticketId": "26304090015304", 
                    "refundReason": "BETR_STOERUNG" 
                }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                [
                    {
                        "actions": [
                            {
                                "name": "refund",
                                "method": "POST",
                                "uri": "Resources/Ticketing/Refunds/{resourceId}/Process?action=refund"
                            }
                        ],
                        "id": {resourceId},
                        "description": null,
                        "type": null,
                        "uri": "Resources/Ticketing/Refunds/157",
                        "location": null,
                        "provider": null,
                        "operator": "zpsnovaRefund",
                        "tariffText": "DVB VVO-Einzelfahrt normal Preisstufe 1 fÃ¼r Zone Dresden gÃ¼ltig 18.11.13 12:21 Uhr bis 13:21 Uhr.",
                        "tariffInformation": "Gilt in der angegebenen Tarifzone; max. 1 Std.",
                        "price": 
                        {
                            "unit": "Chf",
                            "value": -73.0
                        },
                        "deductible": 
                        {
                            "unit": "Chf",
                            "value": 10.0
                        },
                        "minDeductible": 
                        {
                            "unit": "Chf",
                            "value": 5.0
                        },
                        "maxDeductible": 
                        {
                            "unit": "Chf",
                            "value": 15.0
                        }
                    }
                ]
            }

## Refund a Ticket [/imp-endpoint/api/V2/Resources/Ticketing/Refund/{id}/Process?action=refund]    
The response contains details of a ticket that is refunded, identified by {ticketIds} and {ticketContent} 

The data structure of the request body:

attribute | json data type | comments
--- | --- | ---
operator | OperatorCredentials | operator credentails details
userName | String | application user name who wants to refund the ticket

The data structure of OperatorCredentials contains the following attributes:

attribute | json data type | comments
--- | --- | ---
name | String | Name of Ticket Operator (zpsnovaRefund)
userId | String | Traveler Id ( Depends on the ticketing-serivce to be used.)
password | String | Password for refunding ticket ( Depends on the ticketing-serivce to be used.)

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
actions | Array | List of available actions on this resource (confirm)
processId | Number | BPMN process id
confirmation | Object | Refund ticket response data


confirmation contains following fields:

attribute | json data type | comments
--- | --- | ---
requestId | String | Resource id received while initiating the refund process
ticketIds | Array | Array of ticket ids 
ticketContent | Base64Binary | Content of Refund Ticket
price | Object | Amount of refund for ticket with currency and value specified.    
HTTP Headers:
- userToken: Token in the response received to {{host}}/imp-endpoint/api/{{version}}/Partners/User/Process?action=register
- Accept-Language: This header specifies the language of the attribues in the buy request to be sent. Examples: de, en, fr, it. The supported languages depend on the individual services. Not all information may be translated from the default language of the service.

### Refund a ticket [POST]
@nottestable

+ Parameters
    + id (string, `9347`, required) ... Ticket ID of Connect.
    
+ Request (application/json)

    + Headers
        
            userToken: {someUserToken} 

    + Body
    
            {
                "operator": {
                    "name": "zpsnovaRefund"
                },
                "userName": "dmpUser"
            }

+ Response 201 (application/json)

    + Body
    
            {
                "actions": [
                    {
                        "name": "confirm",
                        "method": "PUT",
                        "uri": "Processes/{processId}?action=confirm"
                    }
                ],
                "processId": {processId},
                "confirmation": {
                    "featureType": "REFUND",
                    "confirmationId": null,
                    "confirmationData": {
                        "requestId": "{resourceid}"
                        "ticketIds": [
                            "274946704480125"
                        ],
                        "ticketContent": "UEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0TkNqeDBhV15yWlhSRmNuZGxjbUp6VUhKdmVtVnpjMUpsYzNCdmJuTmxQZzBLSUNBOGNISmxhWE0rTWl3eU1Ed3ZjSEpsYVhNK0RRb2dJRHgzWVdWb2NuVnVaejVGVlZJOEwzZGhaV2h5ZFc1blBnMEtJQ0E4WVdkVVpYaDBQakY0SUVSV1FpQldWazh0UldsdWVtVnNabUZvY25RZ2JtOXliV0ZzSUZCeVpXbHpjM1IxWm1VZ01TQm13N3h5SUZwdmJtVWdSSEpsYzJSbGJpQm53N3hzZEdsbklERXpMakV4TGpFeklEQTFPalV6SUZWb2NpQmlhWE1nTURZNk5UTWdWV2h5TGp3dllXZFVaWGgwUGcwS0lDQThiV1Z6YzJGblpTQjBlWEJsUFNKM1lYSnVhVzVuSWo0OEwyMWxjM05oWjJVK0RRb2dJRHh1ZFhSNlpYSWdMejROQ2lBZ1BHSmxjbVZqYUhScFozVnVaMlZ1UGcwS0lDQWdJRHhpWlhKbFkyaDBhV2QxYm1jK0RRb2dJQ0FnSUNBOGMzUmhkSFZ6UGpBOEwzTjBZWFIxY3o0TkNpQWdJQ0FnSUR4MGVYQStNVHd2ZEhsd1BnMEtJQ0FnSUNBZ1BIQjJQall3TmpBOEwzQjJQZzBLSUNBZ0lDQWdQSEJ5YVcxaFpYSkxkbkErTmpBeE16d3ZjSEpwYldGbGNrdDJjRDROQ2lBZ0lDQWdJRHh6Wld0MWJtUmhaWEpMZG5BK05qQXhNend2YzJWcmRXNWtZV1Z5UzNad1BnMEtJQ0FnSUNBZ1BIQnliMlIxYTNSRGIyUmxQakU4TDNCeWIyUjFhM1JEYjJSbFBnMEtJQ0FnSUNBZ1BHZGxZbWxsZEhOSGRXVnNkR2xuYTJWcGRENHdQQzluWldKcFpYUnpSM1ZsYkhScFoydGxhWFErRFFvZ0lDQWdJQ0E4ZW1WcGRFZDFaV3gwYVdkclpXbDBQakE4TDNwbGFYUkhkV1ZzZEdsbmEyVnBkRDROQ2lBZ0lDQWdJRHh1ZFhSNlpYSlVlWEErTUR3dmJuVjBlbVZ5Vkhsd1BnMEtJQ0FnSUNBZ1BITjBZWEowV205dVpUNHhNRHd2YzNSaGNuUmFiMjVsUGcwS0lDQWdJQ0FnUEd0dmJXWnZjblErTVR3dmEyOXRabTl5ZEQ0TkNpQWdJQ0FnSUR4eGRXRnNhWFJoWlhRK01Ud3ZjWFZoYkdsMFlXVjBQZzBLSUNBZ0lDQWdQR0psYzJOb2NtVnBZblZ1Wno1RVZrSWdWbFpQTFVWcGJucGxiR1poYUhKMElHNXZjbTFoYkNCUWNtVnBjM04wZFdabElERWdac084Y2lCYWIyNWxJRVJ5WlhOa1pXNGdaOE84YkhScFp5QXhNeTR4TVM0eE15QXdOVG8xTXlCVmFISWdZbWx6SURBMk9qVXpJRlZvY2k0OEwySmxjMk5vY21WcFluVnVaejROQ2lBZ0lDQWdJRHgwWVhKcFptbHVabTgrUjJsc2RDQnBiaUJrWlhJZ1lXNW5aV2RsWW1WdVpXNGdWR0Z5YVdaNmIyNWxPeUJ0WVhndUlERWdVM1JrTGp3dmRHRnlhV1pwYm1adlBnMEtJQ0FnSUNBZ1BITnBZMmhsY21obGFYUnpUV1Z5YTIxaGJENUZUakV0TVRBdE1UTXhNVEExTlRNS1VDb3FNekV5TXpFeU16aDJDazF2ZEdsMklEUXhPVFV6TlRNM05qY0tMUzFVUlZOVUxTMVVTVU5MUlZRdExRbzhMM05wWTJobGNtaGxhWFJ6VFdWeWEyMWhiRDROQ2lBZ0lDQWdJRHhpWVhKamIyUmxQbWxXUWs5U2R6QkxSMmR2UVVGQlFVNVRWV2hGVldkQlFVRkpORUZCUVVOUFEwRk5RVUZCUkZGSk9FRTJRVUZCUVVKc1FrMVdSVmd2THk4NFFVRkJRbFozZEU0clFVRkJSVFZGYkVWUlZsSTBNblV5WXpJeU4ycE5RWGhGYkdZdkx6WlhNVkppUXpKU05UbEVjR3NyWTJoQ1ZHSlpTa3haT0hScGFHVm9jVTl6TVRsbVppdDJjamRtYmpJNVpuUTFaSEk1WkRNdk1TdDJZaXQyYmpWNlpsZ3laR051SzNodU4wVmtkSEpKU25nclkyOVdNRzV1ZDA1MlRVODBMMjR2WlVsMEwwRmtaSHA0UlU5TVoyNUJSREozWlhWcVVFZEhZMFV4Y1ZBeU1pdHZNM1EwS3pkbWRUUmxXRVJQVGpBdkwzazBUbnB0ZEhveFlWQnphMVpaVFRoR2VrbGlUbkJzZFZCaVMwMUdkMlZ1VERkMGRYTkxZM2hVYTNReWJGWkljbTFQZHpaT0szVktaMnhQV0U5VWJFZFhjbnB1UWxOeFVXVnpSbnBuV0daSVowMU5PVVJMWlRaeGRUWTRkWFYxY1VRM2MySTNORXg0T1M5UGNTc3ZkVVpHWjI1SVJqTnhaR3RQY21rMk4zUjFkMDlsU1RsV2IyNTNSRkUwWm1GR1YxTkNXVzByV2t0Vk1FWlZiME0yVUVJM0wwOUtaM3BOV2pKbGVua3JjMDkyTkdGWEt6RnJWM2xZZW5OT1JHaHRabmd2YldWVWRtNVJkRXBVU2tsSk5tSkViMDU2YkdsNE0yZFpRMHRHU1djMGNsSlRjVlJ5UWs4eWFrWlBSVXA0TlhOMWVsVmhVbTR6VFVaRlpGSllNRWxTTlVGSmFFMVFiWGd4VUdjM016STJOa1pOVFVsdFJuZGxhMHBsUm5sUFZubEVlRnB1V0hsM1prczRVMFY0ZFhkTlJHaEZha1pEY1RsV04yZGFSbEJzT0UxdVJtUkNiMk50Tmt0bGRVNVBVVkpKZHpSM1kxTnRXRVpNWlV0RWFXTkJSbEZFY0VaVGFUQjZRbXN2YmpBMU9VOUxlREZQWjNoalJEYzRhbk5RY0RSWk1sTkxVM0E0VDBsRmQzQjZaVlo2ZEhWWldWaERTVzVxV25FeGMzUXJUV3MxTWtOV1RsRkZjbUk0WTFScGRHUkdPRk16YWtKRk9XdFRjVXB0TlVjeFIwRmFTR2RsYm14cFVtTjNiRmhwYmpST2NGUXlhM0JuUVhsQ1MxRnZUM1EwWlZsdmNYcEZTRVJsU25sRFNIZFRUREJ6VTBsT1ZFb3lhRXRKWlc1NmVWbFlNakZKTTBwWE4wTmxSMFJvT1c5bVpWVnhObHBWU0ZSNlJGcEljVUY1VVZBeFQzY3ZRMWxZUzFKcGJERjVRMGd5YVhKaWJsZFJlbGR0ZUZkR2R6VnJVMEpEY0djclMxWTBVVGxqYkhWaVQwRkRNbmR0UW5kNVduQmtTMWR1TkVaUGVtbEtjM1JzVG1scmQyRkZWMVZETDJKb1FuZFRTM05XWTNkclFsQTVkRVpETkVWNlEwSnVXbTR2VW5scVkzRXlWWEJDY3k5U1EwVm9ZMDFwY0dOWlNrWTBTbmhsYjAxWVRVeG9UMU55ZVVFME0wWjZNSFJJVW1oVk5EWkxTVFphTmtvNFpWTkNiMlJHUTI0d05VODNia2xXVEN0V1VUbDNWMkZJTkRWRFRUWklNek5HSzNnNWVqZHNUVFUzVnpKcFpXTkhiMEpHTmtabFJrcDRaUzl1ZFhvemJWWTBabE5zWW5jMWMwUk9jMU56UTBScVZWaHdOVVp1WWpNMWN6QlVkakJvWmpaWGNsQlJTbWM0VDJ4NlRqTnhWMmRRUVdwU2FHc3dTVWxUSzJ0M1QwSTBWMDlVYm5kcFpreHJNVWRXTjNjeVVrZDNTbTFUY1RSdGRXMHdjMkp0ZUZseGFWVjBlVWRuWmtoRFQyVTNZWEJ4YjJKck9HZHhSR2RYTUZWTldVaEhkRFJ0VTNsTGIyOHlZazlOYkhCWFZIRmhRMWxsYTB3MVlrVnpOamwzVFhOdVJHaExjSGhaSzBGM1EyUkJXRXMxYldkdFZGbG1kMk5GWVhCalJYaGpUSEo0YzI5NVlXRmFXa3BEYlRKRlJFMXJRbE53UTBsblkwNTViVXhWYlhOd1lrVnBWVlJ1YlRoVVVGcFhNWEJqUzJkb05YUkpjbTkzV2xsM1IyVkhNRVpRWmxKU1JUSkJRVFJZT0hrMU4xaFdiM0Y2YlZJMFRqSnphSEkyVEdkMVJXcExUbTlMVWl0SGIyMWxlV1pwY1d4M2NFUk5Oa2d6TTJ4dVpuaGhXSFZ3TWxGek5WbDBNRGM1VnpocVFURnNkM0pJVWtkTmEyVkhTR0ZyYjJkRFNUaFhPWE5hUVVob01YVnNURWhhTWtOYVJWaFJWVGQyV1hKdlYwSlpaRVphWWpaU1ltdHZVV1ZQZGtKMFIxY3hRbHByZDA5SFUzbHlaMmxpYUZJMVZEQnFWMHg2YkhOMVIwRlFTRlZ6Y0ZvNVIwSmljQ3MyVEZGaFdWbFJVREJXUVVsak0wRlZOME5QYmk5ek5WQjRaRXBKUTBOdGVrRTBka1ZJVTFKYU5WUkJOVXB2Uldwa2RHRllhRWgzWlVoNWFFUmpNR1ZWZGtGcmVFWnhTMWhEUTJWMFFrNU5XRU5KYlcxWFFqUlRVMFI0YlROallYaEpURWs0WjNkUFExbG5TWGh1YlV4TGVUVXlNRUl4YkRZMlFqVjJVbmhQUlhoQk9HdFpaak5wUW05UU1IWnBlbFY0TWtWeWJIZG1SbEJWZGtremNHNWxPVGsyYTBOclNHZGlTSFExY1N0MU5tMVJURzVYTTFWa2NHOXBSRkUwYkhCUGVFOUllbUZXTUVkMWEwRjZXSEZXTjJOR0wyOXZia0VyTHpoNFpqbEVkRTlLVEd4emQwMXpObVJMT0hSRmREazVkV2x2VEdwTVZtNHZjVkpKYW5sTGJEaG1iR05YWlRGQlIxVllRalJoTjJFeGFqbGhZWEJKTW5weVNIZFRiRGhpUWl0UlpXcFVRMWx3Vm1aMlEwZFJRVUZCUVVKS1VsVTFSWEpyU21kblp6MDlQQzlpWVhKamIyUmxQZzBLSUNBZ0lDQWdQR0psY21WamFIUnBaM1Z1WjNORVlYUmxQakl3TVRNdE1URXRNVE5VTURVNk5UTTZNakVyTURFd01Ed3ZZbVZ5WldOb2RHbG5kVzVuYzBSaGRHVStEUW9nSUNBZ0lDQThaM1ZsYkhScFoydGxhWFJ6UW1WbmFXNXVQakl3TVRNdE1URXRNVE5VTURVNk5UTTZNakFyTURFd01Ed3ZaM1ZsYkhScFoydGxhWFJ6UW1WbmFXNXVQZzBLSUNBZ0lDQWdQR2QxWld4MGFXZHJaV2wwYzBWdVpHVStNakF4TXkweE1TMHhNMVF3TmpvMU16b3lNQ3N3TVRBd1BDOW5kV1ZzZEdsbmEyVnBkSE5GYm1SbFBnMEtJQ0FnSUNBZ1BHWnZjbTFoZEhSbFpGQnlaV2x6UGpJc01qQWdSVlZTUEM5bWIzSnRZWFIwWldSUWNtVnBjejROQ2lBZ0lDQWdJRHgzWVdWb2NuVnVaejR1UEM5M1lXVm9jblZ1Wno0TkNpQWdJQ0FnSUR4cmIyNTBjbTlzYkdWMWNuTkRiMlJsUGtWT01TMHhNQzB4TXpFeE1EVTFNend2YTI5dWRISnZiR3hsZFhKelEyOWtaVDROQ2lBZ0lDQWdJRHhyYjI1MGNtOXNiRzFsWkdsMWJUNVFLaW96TVRJek1USXpPSFk4TDJ0dmJuUnliMnhzYldWa2FYVnRQZzBLSUNBZ0lDQWdQSFJoWjJWelEyOWtaVDVOYjNScGRqd3ZkR0ZuWlhORGIyUmxQZzBLSUNBZ0lDQWdQSFJwWTJ0bGRFbEVQakkzTkRrME5qY3dORFE0TURFeU5Ud3ZkR2xqYTJWMFNVUStEUW9nSUNBZ0lDQThjMmxuYm1GMGRYSmxQaTB0VkVWVFZDMHRWRWxEUzBWVUxTMDhMM05wWjI1aGRIVnlaVDROQ2lBZ0lDQThMMkpsY21WamFIUnBaM1Z1Wno0TkNpQWdQQzlpWlhKbFkyaDBhV2QxYm1kbGJqNE5Dand2ZEdsamEyVjBSWEozWlhKaWMxQnliM3BsYzNOU1pYTndiMjV6WlQ0TkNnMEs=",
                        "price": 
                        {
                            "unit": "Euro",
                            "value": -73.0
                        }
                        
                    }
                }
            }

# Group Parking
Parking includes parking garages, park-and-ride facilities, as well as on-street parking spaces.
    
## Parking Garages with Basic Info [/imp-endpoint/api/V2/Resources/Parking/Garages{?lat}{?lng}{?radius}{?f_garages}{?filter}]
Get a list of all parking garages contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of integrated services. See section "Metadata"
--- | --- | ---
resources | Array | Array of parking garages
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | ="ParkingGarage"
uri | URI | URI to request more details (where available)
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parking garage", "Parking zone", "Underground car park", "Parking lot"} 

### Getting parking garages [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `10000`) ... Radius of bounding circle in meter.
    + f_garages (optional, array, `[{"category":["P+R"]}]`) ... Filter to retrieve garages of a specific category.
    + filter (optional, string, `Berlin`) ... Free text filter. Multiple strings are combined by OR.
    
+ Response 200 (application/json)   

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzParking",
                        "webUiUrl": "http://vmz.de/Parking",
                        "lastUpdateTime": "2014-12-16T10:14:46+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "city2eParking",
                        "webUiUrl": "https://www.erneuerbar-mobil.de/",
                        "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "parkUParking",
                        "webUiUrl": "https://parku.ch/",
                        "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [
                            {
                                "name": "consume",
                                "method": "POST",
                                "uri": "Resources/Parking/Garages/50368/Process?action=consume"
                            }
                        ],
                        "id": 50368,
                        "description": "P+R Alt-Mariendorf (U)",
                        "type": "ParkingGarage",
                        "uri": "Resources/Parking/Garages/50368",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.3900337219238,
                                52.439266204834
                            ]
                        },
                        "provider": "vmzParking",
                        "availability": null,
                        "operator": "PR",
                        "totalnumber": {
                            "others": 125,
                            "handicappedOnly": null,
                            "womenOnly": null
                        },
                        "lottype": null
                    },
                    {
                        "actions": [
                            {
                                "name": "consume",
                                "method": "POST",
                                "uri": "Resources/Parking/Garages/50050/Process?action=consume"
                            }
                        ],
                        "id": 50050,
                        "description": "P+R Tempelhof (S + U)",
                        "type": "ParkingGarage",
                        "uri": "Resources/Parking/Garages/50050",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.3851003646851,
                                52.4693984985352
                            ]
                        },
                        "provider": "vmzParking",
                        "availability": null,
                        "operator": "PR",
                        "totalnumber": {
                            "others": 70,
                            "handicappedOnly": null,
                            "womenOnly": null
                        },
                        "lottype": null
                    },
                    {
                        "actions": [
                            {
                                "name": "consume",
                                "method": "POST",
                                "uri": "Resources/Parking/Garages/50399/Process?action=consume"
                            }
                        ],
                        "id": 50399,
                        "description": "P+R Heidelberger Platz (S + U)",
                        "type": "ParkingGarage",
                        "uri": "Resources/Parking/Garages/50399",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.3121109008789,
                                52.4807777404785
                            ]
                        },
                        "provider": "vmzParking",
                        "availability": null,
                        "operator": "PR",
                        "totalnumber": {
                            "others": 140,
                            "handicappedOnly": null,
                            "womenOnly": null
                        },
                        "lottype": null
                    }
                ]
            }

## Parking Garage with Detailed Info [/imp-endpoint/api/V2/Resources/Parking/Garages/{id}]
A single parking garage object with Detailed Information. 
The data structure of the response contains the attributes with the basic information and additionally the following attributes:

attribute | json data type | comments
--- | --- | ---
... | ... | ...
address | Object | Address {"citycode": String, "city": String, "street": String, "houseno": String }
pricing | String | Price structure 
payment | Array | Payment options {COINPAY, BANKNOTEPAY, BANKCARDPAY, CREDICARDPAY, PREPAIDCARDPAY, PAYCARDPAY, DEBITPAY}
category | Enum | P - parking, P+R park and ride, etc. { "P+R","B+R", "P", ... } 
openingHours | String | Opening hours
bookable | Boolean |  
heightLimit | Object | Height limit { "value": Number, "unit": String } 
occupancyRate | Number | Occupancy rate in percent (real time data) 
allowedStay | Object | Allowed stay { "value": Number, "unit": String } 
generalInformations | String |
restrictions | Array | Usage restrictions {"VisitorsOnly","GuestsOnly"}
services | Array | Special services { "WomenParking", "DisabledParking", "Monitored", "ChargingStation", "ParentChild", "MotorCycle", ... } 
securityComment | String |  Security features
entrance | String |

### Getting a specific garage [GET] 
@nottestable

+ Parameters
    + id (string, `878`, required) ... Garage ID of Connect. Can be retrieved through "Parking Garages with Basic Info". 
       
+ Response 200 (application/json)

    + Body
    
            {
                "actions": [
                    {
                        "name": "consume",
                        "method": "POST",
                        "uri": "Resources/Parking/Garages/878/Process?action=consume"
                    }
                ],
                "id": 878,
                "description": "Mitte, An der Friedrichswerderschen Kirche",
                "type": "ParkingGarageDetails",
                "uri": "Resources/Parking/Garages/878",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.39694,
                        52.515930000000004
                    ]
                },
                "provider": "vmzParking",
                "availability": null,
                "operator": "P",
                "totalnumber": {
                    "others": 75,
                    "handicappedOnly": 0,
                    "womenOnly": 0
                },
                "lottype": "Parking lot",
                "address": {
                    "citycode": "10117",
                    "city": "Berlin",
                    "street": "Oberwallstr.",
                    "houseno": null,
                    "district": null,
                    "region": null,
                    "country": null
                },
                "pricing": "EUR 0,25 pro 15 min.<br>Mo-Fr von 19 - 9 Uhr: kostenlos<br>Sa von 14 - 9 Uhr: kostenlos<br>So: kostenlos",
                "payment": [
                    "COINPAY"
                ],
                "category": [
                    "P"
                ],
                "openingHours": null,
                "bookable": false,
                "heightLimit": null,
                "occupancyRate": null,
                "allowedStay": null,
                "generalInformations": null,
                "restrictions": null,
                "services": null,
                "securityComment": null,
                "entrance": null
            }

## OnStreet Parking Spaces [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces{?lat}{?lng}{?radius}{?f_onStreetSpaces}{?filter}]
Get a list of OnStreet parking spaces contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`). 

OnStreet parking spaces can be filtered by the space size (Small, Medium or Large).

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of integrated services. See section "Metadata"
--- | --- | ---
resources | Array | Array of onstreet parking spaces
--- | --- | ---
actions | Array | List of available actions on this resource (currently no actions available)
id | Number | Internal OnStreet parking space identification number
description | String | Approximate location
type | String | ="ParkingOnStreetSpace"
uri | URI | URI to request more details (where available)
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
size | Enum | Size of OnStreet parking space {"Large", "Medium", "Small", "Unknown"} 
accessibility | Enum | Accessibility of OnStreet parking space {"Private","Public","SemiPublic","Unknown"}

### Getting OnStreet parking [GET]
@testable

+ Parameters
    + lat (optional, number, `48.13`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `11.59`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `5000`) ... Radius of bounding circle in meter.
    + f_onStreetSpaces (optional, array, `[{"size":"Medium"}]`) ... Filter to retrieve parkings spaces of a specific size.
    + filter (optional, string, `Medium`) ... Free text filter. Multiple strings are combined by OR.
    
+ Response 200 (application/json)   

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzParking",
                        "webUiUrl": "http://vmz.de/Parking",
                        "lastUpdateTime": "2014-12-02T15:59:01+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "city2eParking",
                        "webUiUrl": "https://www.erneuerbar-mobil.de/",
                        "lastUpdateTime": "2014-12-02T16:27:45+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "parkUParking",
                        "webUiUrl": "https://parku.ch/",
                        "lastUpdateTime": "2014-12-02T16:27:50+01:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 239,
                        "description": "EinemstraÃe",
                        "type": "ParkingOnStreetSpace",
                        "uri": "Resources/Parking/OnStreetSpaces/239",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.352953,
                                52.502795
                            ]
                        },
                        "provider": "parkUParking",
                        "availability": 100,
                        "operator": "ParkU",
                        "size": "Large",
                        "accessibility": null
                    }
                ]
            }

## OnStreet Space with Detailed Info [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces/{id}]
A single OnStreet Space object with Detailed Information. 
The data structure of the response contains the attributes with the basic information and additionally the following attributes:

attribute | json data type | comments
--- | --- | ---
... | ... | ...
address | Object | Address {"citycode": String, "city": String, "street": String, "houseno": String }
barrier | boolean | Entry/exit barrier 
indoor | boolean | covered parking
patio | String | 
barrierFree | boolean | Barrier-free accessible
category | Array | List of enums describing features
usage | String | Description how to enter or use the parking space

### Getting a specific OnStreet Space [GET] 
@nottestable

+ Parameters
    + id (string, `907`, required) ... Parking space ID of Connect. Can be retrieved through "OnStreet Parking Spaces". 
        
+ Response 200 (application/json)

    + Body
    
            {
                "actions": [],
                "id": 907,
                "description": "Kleine Rosenthaler Str.",
                "type": "ParkingOnStreetSpaceDetails",
                "uri": "Resources/Parking/OnStreetSpaces/907",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.403188,
                        52.528512
                    ]
                },
                "provider": "parkUParking",
                "availability": 100,
                "operator": "ParkU",
                "size": "Large",
                "accessibility": null,
                "address": {
                    "citycode": "10119",
                    "city": "Berlin",
                    "street": "Kleine Rosenthaler Str.",
                    "houseno": "12",
                    "district": null,
                    "region": null,
                    "country": "DE"
                },
                "barrier": true,
                "indoor": true,
                "patio": null,
                "barrierFree": true,
                "category": [
                    "attribute/available/true",
                    "attribute/traffic/sharingOperator/ParkU",
                    "point/traffic/parking/p/dynamic"
                ],
                "usage": "Tiefgarage Hotel  AMANO, kameraÃ¼berwacht, freie Platzwahl, Ausfahrt Rosenthaler StraÃe (QR-Code auf Rezeptionsklingel); zum Ãffnen der Tore benÃ¶tigen Sie die parku-App.\r\n\r\n5 Minuten zum Hackeschen Markt oder Rosenthaler Platz."
            }

## Parking Garages or OnStreet parking spaces or both [/imp-endpoint/api/V2/Resources/Parking{?lat}{?lng}{?radius}&{?f_onStreetSpaces}{?f_garages}{?filter}]    
Get a list of all parking garages or OnStreet parking spaces or both contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).
The parking possibilities can be filtered by garage category (viz. P+R or P) or space size (Small, Medium or Large).

The response contains attributes from parking garages or OnStreet parking spaces or both.

### Getting parking garages or OnStreet parking spaces or both with specified size and category [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `1000`) ... Radius of bounding circle in meter.
    + f_onStreetSpaces (optional, array, `[{"size":"Large"}]`) ... Filter to retrieve parking spaces of a specific size.
    + f_garages (optional, array, `[{"category":["P+R"]}]`) ... Filter to retrieve parking spaces of a specific category.
    + filter (optional, string, `Large PR`) ... Free text filter. Multiple strings are combined by OR.

+ Response 200 (application/json)   

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzParking",
                        "webUiUrl": "http://vmz.de/Parking",
                        "lastUpdateTime": "2014-11-20T12:55:14+01:00",
                        "messages": []
                                        },
                    {
                        "serviceAlias": "city2eParking",
                        "webUiUrl": "https://www.erneuerbar-mobil.de/",
                        "lastUpdateTime": "2014-11-20T13:22:50+01:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "parkUParking",
                        "webUiUrl": "https://parku.ch/",
                        "lastUpdateTime": "2014-11-20T13:22:54+01:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 2838,
                        "description": "LohmeyerstraÃe",
                        "type": "OnStreetSpaces",
                        "uri": "Resources/Parking/OnStreetSpaces/2838",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.301087,
                                52.517519
                            ]
                        },
                        "provider": "parkUParking",
                        "availability": 100,
                        "operator": "ParkU"
                    },
                    {
                        "actions": [],
                        "id": 239,
                        "description": "EinemstraÃe",
                        "type": "OnStreetSpaces",
                        "uri": "Resources/Parking/OnStreetSpaces/239",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.352953,
                                52.502795
                            ]
                        },
                        "provider": "parkUParking",
                        "availability": 100,
                        "operator": "ParkU"
                    }
                ]
            }

# Group Public Transport

## Public Transport Stations [/imp-endpoint/api/V2/Resources/PublicTransport/Stations{?lat}{?lng}{?radius}{?f_stations}{?filter}] 

+ Attributes 
    + metaData(array[Public Transport Meta Data])
    + resources (array[Public Transport Station])

### Get Public Transport Stations [GET]
Get a list of all public transport stations contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `600`) ... Radius of bounding circle in meter.
    + f_stations (optional, array, `[{"stationType":"BusTramStation"}]`) ... Filter to retrieve stations of a specific `stationType`.
    + filter (optional, string, `Oranienstr`) ... Free text filter. Multiple strings are combined by OR.

+ Response 200 (application/json)
    + Attributes (Public Transport Stations)

## Time Table of a Station [/imp-endpoint/api/V2/Resources/PublicTransport/Stations/{id}/TimeTables{?time}]

+ Attributes 
    + metaData(array[Public Transport Meta Data])
    + resources (array[Time Table])

### Get a time table [GET] 
Get departure times at a specified station determined by `id`.

@nottestable

+ Parameters
    + id (string, `2532`, required) ... Station ID of Connect. Can be retrieved through "Get Public Transport Stations with Basic Info".
    + time: `2017-06-14T17:31:00+02:00` (string, optional) - Date and time for which the arrivals and departures shall be returned
        + Default: Current server time
        
+ Response 200 (application/json)
    + Attributes (Time Table of a Station)
 
# Group Taxi Service

## List of available Taxis with Basic Info [/imp-endpoint/api/V2/Resources/TaxiService/Taxis{?lat}{?lng}] 
Get a list of taxis in an area of interest a with basic information and a URI to get more details.

parameter | type | comments | required | default | supported by all integrated services
--- | --- | --- | --- | --- | ---
lat, lng, (radius) | Number | Bounding circle to define search area | no | no | no
left_lower_lat, left_lower_lat, right_upper_lat, right_upper_lng | Number | Bounding box to define search area | no | no | no

response attribute | json data type | comments  | supported by all integrated services
--- | --- | --- | ---
metadata | Object | List of integrated services. See section "Metadata" | 
--- | --- | --- | ---
resources | Array | Array of taxis | yes
--- | --- | --- | ---
id | Number | Internal taxi identification number | yes
description | String | Approximate location or car model | no
type | String | (="TaxiServiceTaxi") | yes
uri | URI | URI to request more details (where available) | no
location | Object | GeoJson object of type `Point` in longitude, latitude order | yes
provider | String | Service provider  | yes
availability | Double |  Currently available: "=100". Currently unavailable: "=0"  | yes
externalId | Number | Taxi identification number of service provider | no
operator | String | Taxi dispatcher or taxi company | yes
status | | to be clarified | no
licenceId | String | License plate number | no
properties | |  | no
timetoArrive | number, string | Estimated time to arrive | no

### Get taxi locations [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of center point.
    + lng (optional, number, `13.39`) ... Longitude of center point.

+ Response 200 (application/json)

    + Body
    
            {
                "metaData": [
                    {
                      "serviceAlias": "vmzTaxi",
                      "webUiUrl": "http://www.vmzberlin.com/",
                      "lastUpdateTime": null,
                      "messages": []
                    }
                ],
                  "resources": [
                    {
                      "actions": [],
                      "id": 1488703,
                      "description": "VW Touran",
                      "type": "TaxiServiceTaxi",
                      "uri": null,
                      "location": {
                        "coordinates": [
                          13.3921508789,
                          52.5235514323
                        ],
                        "type": "Point"
                      },
                      "provider": "vmzTaxi",
                      "availability": 100,
                      "externalId": "b512cafe-3cdd-4f16-a34c-1f569ae92b80@TaxiService",
                      "operator": "TZB",
                      "status": null,
                      "licenceId": null,
                      "properties": null,
                      "timeToArrive": {
                        "value": 2,
                        "unit": "minute"
                      },
                      "payments": null
                    }
                ]
            }

## List of available Taxi Ranks with Basic Info [/imp-endpoint/api/V2/Resources/TaxiService/Ranks{?lat}{?lng}{?radius}] 
Get a list of taxi ranks contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

### Get taxi ranks in a specified area [GET]
@testable

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of integrated services. See section "Metadata"
--- | --- | ---
resources | Array | Array of taxi ranks
--- | --- | ---
id | Number | Internal taxi rank identification number
description | String | Approximate location
type | String | Type of taxi rank
uri | URI | URI to request more details (where available)
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider 
availability | Double | Availability in percentage
operator | String | Resource operator 
size | Enum | Size of car 

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `1000`) ... Radius of bounding circle in meter.
    
+ Response 200 (application/json)

    + Body
    
            {
                "metaData": [
                    {
                      "serviceAlias": "osmBerlinTaxi",
                      "webUiUrl": "http://www.overpass-api.de/api/interpreter",
                      "lastUpdateTime": null,
                      "messages": []
                    }
                ],
                 "resources": [
                    {
                         "actions": [],
                         "id": 461,
                         "description": null,
                         "type": "TaxiServiceRank",
                         "uri": "Resources/TaxiService/Ranks/461",
                         "location": {
                         "coordinates": [
                            13.6996987,
                            52.5209164
                        ],
                         "type": "Point"
                    },
                     "provider": "osmBerlinTaxi",
                     "availability": null,
                     "operator": null
                    }
                ]
            }

## Fare for the trip specified by origin and distance [/imp-endpoint/api/V2/Info/TaxiService/Fares{?origin_lat}&{?origin_lng}{?radius}] 
This response contains an estimated fare for trips from origin with distance.

### Get fare information for the trip specified by origin and distance [GET]
@nottestable

attribute | json data type | comments
--- | --- | ---
fareQuality | Double | Degree of quality
startTime | String | Date and time of start
arrivalTime | String | Date and time of arrival
totalTime | Object | Journey time and unit
totalDistance | Object | Distance and unit
costs | Object | Contains total costs, flag fall and distance costs as well as surcharges for additional passengers
services | Object | Set of available services

+ Parameters
    + origin_lat (number, `52.4827`) ... Latitude of origin.
    + origin_lng (number, `13.3154`) ... Longitude of origin.
    + radius (number, `2000`) ... Distance in meter.

+ Response 200 (application/json)

    + Body
        
            {
                "fareQuality": 1.0,
                "startTime": "2013-07-09T08:09:17",
                "arrivalTime": "2013-07-09T08:20:17",
                "totalTime":   { "value": 660, "unit": "sec"},
                "totalDistance": { "value": 5000, "unit": "meter" },
                "costs": { 
                    "flagFall": { "value":300, "currency":"EuroCent"},
                    "total":    { "value":960, "currency":"EuroCent"}, 
                    "distance": { "value":660, "currency":"EuroCent"}, 
                    "other":    { },
                    "passengers": [
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":150, "currency":"EuroCent" },
                       { "value":300, "currency":"EuroCent" },
                       { "value":450, "currency":"EuroCent" },
                       { "value":600, "currency":"EuroCent" }
                    ]
                }
                "services": {
                    "bookingAvailable": true,
                    "paymentAvailable": false,
                    "privateHireVehicleAvailable": true,
                    "taxiSharing": false,
                    "information": "An diesem Flughafen ist keine Taxibuchung mÃ¶glich, bitte nutzen Sie eines der Flughafen Taxis" 
                }      
            }

## Fare for the trip specified by origin and destination [/imp-endpoint/api/V2/Info/TaxiService/Fares{?origin_lat}{?origin_lng}{?dest_lat}{?dest_lng}] 
This response contains estimated fare for trips from origin to destination.

### Get fare information for the trip specified by origin and destination [GET]
@nottestable

+ Parameters
    + origin_lat (number, `52.4827`) ... Latitude of origin.
    + origin_lng (number, `13.3154`) ... Longitude of origin.
    + dest_lat (number, `53.5791`) ... Latitude of destination.
    + dest_lng (number, `13.4060`) ... Longitude of destination.

+ Response 200 (application/json)

    + Body
    
            {
                "fareQuality": 1.0,
                "startTime": "2013-07-09T08:09:17",
                "arrivalTime": "2013-07-09T08:20:17",
                "totalTime":   { "value": 660, "unit": "sec"},
                "totalDistance": { "value": 5000, "unit": "meter" },
                "costs": { 
                    "flagFall": { "value":300, "currency":"EuroCent"},
                    "total":    { "value":960, "currency":"EuroCent"}, 
                    "distance": { "value":660, "currency":"EuroCent"}, 
                    "other":    { },
                    "passengers": [
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":0,   "currency":"EuroCent" },
                       { "value":150, "currency":"EuroCent" },
                       { "value":300, "currency":"EuroCent" },
                       { "value":450, "currency":"EuroCent" },
                       { "value":600, "currency":"EuroCent" }
                    ]
                }
                "services": {
                    "bookingAvailable": true,
                    "paymentAvailable": false,
                    "privateHireVehicleAvailable": true,
                    "taxiSharing": false,
                    "information": "An diesem Flughafen ist keine Taxibuchung mÃ¶glich, bitte nutzen Sie eines der Flughafen Taxis" 
                }      
            }

##Fare for the trip specified by time and distance [/imp-endpoint/api/V2/Info/TaxiService/Fares{?totalDistance}{?totalTime}{?departureTime}{?isVan}{?isAirportPickup}{?isWomen}&{?isBooked}]

This response contains estimated fare for trips based on distance travelled and trip duration along with travel Options specified.

### Get fare information for the trip specified by distance and duration [GET]
@nottestable

+ Parameters
    + totalDistance (number, `500`) ... is in multiplier of 10 meters. 
    + totalTime (number, `15`) ...  Total travel time. Unit is in minutes. 
    + departureTime (DateTime, `2016-09-28T01:29:37+00:00`) ... Start time of the trip. 
    + isVan (boolean, `True`) ... Boolean value to specify type of vehicle. 
    + isAirportPickup (boolean, `True`) ... Boolean value. 
    + isWomen (boolean, `True`) ... Boolean value. 
    + isBooked (boolean, `True`) ... Boolean value. 

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "fareQuality":  null,
                    "totalDistance": null,
                    "startTime": null,
                    "arrivalTime": null,
                    "totalTime": null,
                    "costs": {
                            "flagFall": {  "unit": "Aed", "value": 7.5},
                            "total": { "unit":"Aed" , "value": 29},
                            "distance": null,
                            "luggage": null,
                            "ccard": null,
                            "minFare": null,
                            "passengers": null
                            },
                            "services": null,
                            "provider" : "dtcLimousine"
                }            
            ]                

## Booking a taxi [/imp-endpoint/api/V2/Resources/TaxiService/Taxis/Process?action=Book]
Book a Taxi: The taxi ride is specified by providing the starting point (address and/or geo location) and the destination.
This means that no specific, previously selected taxi is booked.

The data structure of the request:

attribute | json data type | comments
--- | --- | ---
operator | Object | Serivce Provider and authentication information
name  | String | Name of Service Provider
userId | String | Required for authentication
password | String | Required for authentication
origin | Object | Description of origin
destination | Object | Description of destination
location | Co-ordinates | [X,Y] Co-ordinate of location
address | String | Address of city and street
noteToDriver | String | Additional information for eg. pickup details for driver
numOfTravelers | String | Number of travellers
time | TimeStamp | Time of booking (yyyy-MM-dd'T'HH:mm:ssZ)
traveler | Object | traveler information
travellerId | String | Unique ID of Traveller
givenName | String | First name of Traveller
lastName | String | Last name of Traveller
phoneNo | String | Phone No. of Traveller
email | String | Passenger email
travelOptions | Object | Travel Options specified by passenger eg ["Woman","Van"]
Woman | String | If the traveller is(are) a lady(ladies)
Van | String | Choice of vehcile is a van


Further parameters might detail the request by specifying the number of passengers, availability of child seats, extra luggage etc.

The response contains the estimated costs, the taxi's licence id, and a booking id; the latter can be used to cancel the booking.

Please note: 
Since data about the traveler is usually requested by the taxi SP, we assume that the end-user (or the mobility provider) himself is responsible to register at the service provider.
We currently require one operator in the input body.
If booking is not possible, the response body explains the reason why.

### Book a taxi [POST]
@nottestable
    
+ Request (application/json)

    + Headers
    
            userToken: "some token"
        
    + Body
    
            {
                "operator": {
                    "name": "dubaiTaxi",
                    "userId": "MP1_1",
                    "password": "TopSecret!"
                },
                "origin" : {
                    "location": { 
                        "type": "Point",
                        "coordinates": [
                            13.40693,
                            52.51914
                        ]
                    },
                    "address": { "street": "1 Street", "houseno": "28" , "district" : "Al Nahda-1" }
                    
                },
                "destination" : {
                    "address": { "street": "28th Street", "houseno": "27A" , "district" : "Hor Al Anz East" }
                },
                "plannedRoute":{
                      "coordinates": [
                        [
                         56.29339590000003,
                            25.276890400000006
                          ],
                          [
                            56.2886442,
                            25.270915300000006
                          ],
                          [
                            54.4529625,
                            25.157674900000007
                          ]
                      ]
                    },
                "time": "2016-12-09T15:10:00+02:00",
                "numOfTravelers" : "1",
                "noteToDriver" : "ÙÙÙ Ø­Ø±Ù" ,
                "traveler" : {
                    "travellerId" : "1",
                    "type": "PERSON",
                    "givenName" : "Feras_test",
                    "lastName" : "Feras_test",
                    "phoneNo" : "055465833"
                },
                "travelOptions" : [ "Women" , "Van" ]
            }

+ Response 201 (application/json)

    + Headers
    
            Location: /api/V2/Processes/4711

    + Body
    
            {
                "processId" : 123,
                "confirmation" : {
                    "confirmationId" : 456,
                    "featureType": "BOOKING"
                },
                "origin" : {
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.40693,
                            52.51914
                        ]
                    },
                    "address": { "citycode":"10178", "city":"Berlin", "Street":"Spandauer StraÃe","houseno":"9" }, 
                    "time": "2013-05-01 12:00:00" 
                },
                "destination" : {
                    "address": { "citycode":"12109", "city":"Berlin", "Street":"UllsteinstraÃe","houseno":"114" }
                },
                "operatorId": "BetterTaxi",
                "licenceId": "B-OB 007",
                "expectedTime": "2013-05-01T12:05:00",
                "services": {
                    "bookingAvailable": true,
                    "paymentAvailable": false,
                    "privateHireVehicleAvailable": true,
                    "taxiSharing": false,
                    "information": "An diesem Flughafen ist keine Taxibuchung mÃ¶glich, bitte nutzen Sie eines der Flughafen Taxis" 
                },
                "actions": [
                    {
                        "name": "Cancel",
                        "method": "PUT",
                        "uri": "/api/V2/Processes/123?action=Cancel"
                    }
                ]
            }

## Canceling a taxi [/imp-endpoint/api/V2/Processes/123?action=cancel] 
Cancel a booking for a taxi that has been booked before. The booking id (123 in the example below) has to be provided as processID in the request.

Input in request body: 
operator including name, userId and password (for authentication)

The response contains information about the originally planned taxi ride and the cancelation fee.

Please note: 
If canceling is not possible, the response body explains the reason why.

### Cancel a taxi booking [PUT]
@nottestable
    
+ Request (application/json)

    + Headers
    
            userToken: "some token"
        
    + Body
    
            {
                "operator": {
                    "name": "BetterTaxi",
                    "userId": "MP1_1",
                    "password": "TopSecret!"
                }
            }


+ Response 201 (application/json)

    + Headers
    
            Location: /api/V2/Processes/123
            
    + Body
    
            {
                "userId": "MP1_1",
                "ride": { 
                    "origin" : {
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.40693,
                                52.51914
                            ]
                        },
                        "address": { "citycode":"10178", "city":"Berlin", "Street":"Spandauer StraÃe","houseno":"9" }, 
                        "time": "2013-05-01T12:00:00" 
                    },
                    "destination" : {
                        "address": { "citycode":"12109", "city":"Berlin", "Street":"UllsteinstraÃe","houseno":"114" }
                    }
                },
                "confirmation": {
                    "featureType": "CANCELATION",
                    "confirmationId": "17",
                    "fee": { "value": 0, "currency": "EUR" }
                },
                "actions": [ ]
            }

## Modifying a taxi booking[/imp-endpoint/api/V2/Processes/123?action=modify]
Modify a booking for a taxi that has been booked before. The booking id (123 in the example below) has to be provided as processID in the request.

Input in request body: 
operator name

The response contains information about the originally planned taxi ride and confirmation if the modification was successful or no.

Please note: 
If modifying is not possible, the response body explains the reason why.

### modify a taxi booking [PUT]
@nottestable
    
+ Request (application/json)

    + Headers
    
            userToken: "some token"

    + Body
    
            {
                 "operator": {
                 "name": "dtcLimousine"
                 },
                 "origin" : {
                 "location": { "type": "Point", "coordinates": [ 55.5087893, 25.333412 ] }, 
                 "address": {"city":"Sharjah",
                 "street":"Sharjah International Airport"
                 }
                 },
                 "destination" : {
                 "location": { "type": "Point", "coordinates": [ 55.3655, 25.2920 ] }, 
                 "address": {"city":"Al Nahda-1",
                 "street":"28, 1 Street"}
                 },
                 "numOfTravelers":"1",
                 "time": "2016-12-22T15:10:00+02:00",
                 "traveler":{
                 "travellerId":"4",
                 "givenName":"xyz",
                 "lastName":"lmnop",
                 "phoneNo":"7894569966"
                 }
            }

+ Response 201 (application/json)

    + Headers
    
            Location: /api/V2/Processes/123
            
    + Body
    
            {
              "process": {
                "actions": [
                    {
                        "name": "Cancel",
                        "method": "PUT",
                        "uri": "/api/V2/Processes/123?action=Cancel"
                    },{
                        "name": "modify",
                        "method": "PUT",
                        "uri": "/api/V2/Processes/123?action=modify"
                    }
                ],
                "processId": "28323",
                "confirmation": {
                  "featureType": "MODIFICATION"
                }
              }
            }
            
## Rating a taxi booking[/imp-endpoint/api/V2/Processes/123?action=rate]
Rating a booking for a taxi that has been booked before. The booking id (123 in the example below) has to be provided as processID in the request.

Input in request body: 
operator name

The response contains information about confirmation if the rating was successful or no.

Please note: 
If rating is not possible, the response body explains the reason why.

### Rating a taxi booking [PUT]
@nottestable
    
+ Request (application/json)
    
    + Header 
    
            userToken: "some token"

    + Body
    
            {
                "rating" : "5",
                "rating_message" : "Superb service!"
            }

+ Response 201 (application/json)

    + Body
    
            {
              "process": {
                "actions": [],
                "processId": "740372",
                "confirmation": {
                  "featureType": "RATING"
                }
              }
            }

## Get the status of Taxi Service Booking [/imp-endpoint/api/V2/Processes/TaxiService/{processId}]
RESPONSE:
The status response will contains the following attributes:
attribute | json data type | comments
--- | --- | ---
status|String|Order status of the process as received from service provider
expectedTime|Calendar|Estimated arrival time of the taxi
licenceId|String|License id of the taxi
driver->phoneNo|String|Phone number of the taxi driver
driver->pictureUrl|Object|Image of the driver can be a URL
driver->givenName|String|Given name of the driver
driver->lastName|String|Last name of the driver
driver->rating|String|Rating of the driver as received from service provider
location|Object|Last position of taxi as standard GeoJSON with 'Point'
            
Please note:
As a default SiMobility Connect allows status requests of taxi bookings until 24 hours after booked time.

### Show status of Taxi Booking [GET]
@nottestable

+ Response 200(application/json)

    + Body
    
            {
                "statuses": [
                {
                "status": "2",
                "driver": {
                "driverId": null,
                "phoneNo": null,
                "image": {
                "url": null,
                "image": null,
                "type": null
                },
                "givenName": null,
                "lastName": null,
                "rating": null
                },
                "licenceId": "",
                "location": null,
                "expectedTime": null
                }
              ]
            }

## Book a water taxi [/imp-endpoint/api/V2/Resources/WaterTransport/Taxis/Process?action=book] 
Book a Water Taxi: The water taxi ride is specified by providing the starting point (stationId) and the destination (stationId).

The booking request will contains the following attributes:
attribute | json data type | comments
--- | --- | ---
operator->name|String|Operator name 'dubaiWaterTaxi'
time|String|Water taxi booking time in ISO-8601 format
numOfTravelers|String|Number of traveler
travelOptions|String|TravelOptions values will be "4" for 'commuter taxi' and "5" for 'chartering taxi'
duration|Long|Time duration in minutes (Mandatory for travelOption charter)
needTourGuide|Boolean|Optional attribute
origin->stationId|String|Pickup station number
destination->stationId|String|Destination station number

### Book a water taxi [POST]
@nottestable
    
+ Request (application/json)

    + Headers
    
            userToken: "some token"
        
    + Body
    
            {
              "operator": {
                "name": "dubaiWaterTaxi"
              },
              "time": "2017-04-10T12:50:00+04:00",
              "numOfTravelers": "1",
              "travelOptions": [
                "5"
              ],
              "duration": 40,
              "needTourGuide": true,
              "origin": {
                "stationId": "70"
              },
              "destination": {
                "stationId": "76"
              }
            }

+ Response 201 (application/json)
 
    + Body

            {
              "actions": [
                {
                  "name": "confirm",
                  "method": "PUT",
                  "uri": "Processes/162876?action=confirm"
                }
              ],
              "processId": "162876",
              "confirmation": {
                "featureType": "BOOKING",
                "confirmationId": "39217",
                "confirmationData": {
                  "bookingRefNo": 39217,
                  "isBookingAvailable": true,
                  "tripArrivalTime": "2017-04-10T13:40:00+04:00",
                  "nextBookingDate": null,
                  "errorResponse": null
                }
              }
            }

## Confirm water taxi [/imp-endpoint/api/V2/Processes/162876?action=confirm] 
Confirming a water taxi requires a confirmation id obtained from water taxi book response.
Also, processID has to provided in the confirm request which can be obtained from response of 
water taxi booking.

Confirm water taxi request will contain the following attribute: 
attribute | json data type | comments
--- | --- | ---
numOfTravelers|Integer|Number of traveler
confirmationId|String|Confirmation id obtained from book response
notes|String|Customer notes
traveler->givenName|String|Customer name
traveler->lastName|String|Customer last name
traveler->title|String|Title "1" for 'Mr', "2" for 'Mrs' and "3" for 'Ms'
traveler->email|String|Customer Email
traveler->mobileNo|String|Customer mobile number
traveler->countryCode|String|Customer mobile country code

The response contains information about the originally planned taxi ride and confirmation if the modification was successful or no.

### Confirm a water taxi [POST]
@nottestable
    
+ Request (application/json)

    + Headers
    
            userToken: "some token"

    + Body
    
            {
             "numOfTravelers":2,
             "confirmationId":"39217",
             "notes":"nothing",
             "traveler":{
                  "givenName":"mobility",
                  "lastName":"siemens",
                  "title":"1",
                  "email":"mobilitysiemens@gmail.com",
                  "mobileNo":"9876543211",
                  "countryCode":"91"
                }
            }

+ Response 201 (application/json)

    + Body
    
            {
              "process": {
                "actions": [],
                "processId": "162876",
                "confirmation": {
                  "featureType": "CONFIRM",
                  "confirmationData": {
                    "confirmed": true,
                    "messages": [
                      10862,
                      "Success"
                    ]
                  }
                }
              }
            }

# Group Intermodal Routing
This is a group of all intermodal routing (IMR) related REST resources.

## Trip Proposals with Basic Info. Intermodal Routing [/imp-endpoint/api/V2/TripProposals/IMR] 
Get a list of trip proposals with basic information for specified trip search criteria. Results can only be intermodal if an intermodal service is subscribed. Otherwise results are mono- or multimodal. 

<strong>Request:</strong>

request attribute | type | comments | required | default | supported by all integrated services
--- | --- | --- | --- | --- | ---
origin | Object | GeoJson object of type `Point` in longitude, latitude order or `stationID`. The latter prevails. Addresses can be converted to coordinates through "Geo Locations" | yes | - | yes
destination | Object | GeoJson object of type `Point` in longitude, latitude order or `stationID`. The latter prevails. Addresses can be converted to coordinates through "Geo Locations" | yes | - | yes
trafficTypes | Array | Modes of transport to use when calculating trips. Result may not contain all. Range of values are `Public Transit`, `Train`, `RegioTrain`, `CityTrain`, `Metro`, `Tram`, `Bus`, `Ferry`, `Gondola`, `OwnBike`, `BikeSharing`, `OwnCar`, `CarSharing`, and `Walk`. `PublicTransit` subsumes `Train`, `RegioTrain`, `CityTrain`, `Metro`, `Tram`, `Bus`, `Ferry`, and `Gondola` | yes | - | Yes, but supported types depends on service
time | DateTime | Date and time of the trip. Not all integrated services support times in the past  | no | Server time of service provider, otherwise server time of Connect | yes
departureTime | Boolean | `True`: time is used as departure time. `False`: time is used as arrival time | no | true | yes
viaPoints | Array of Objects | List of geolocations or `stationsID` the trip should pass in the given sequence | no | no | no
costFunctions | Array of Objects | Cost factors, i.e. distance, duration, price, and CO2-emission, each with a percentaged weight. Trip proposals are ranked accordingly | no | Set by integrated service, otherwise min duration | no
userId | String | Traveler Id that requests a trip. Currently not supported | no | no | no
routingConstraints | Array of Objects | Constraints to be considered in the search for trip proposals. Min and max values are specified for the trafficTypes `walk`, `car`, and `bike`. | no | Set by integrated service | no
ownVehicles | Array of Objects | List of own vehicles to be considered in calculation of route alternatives. Due to ranking according to `costFunctions`, own vehicles may not be included in trip proposals  | no | no | no
maxRoutingResponses | Number | Number of trip proposals to be returned for each integrated service | no | Set by integrated service  | no
numOfTravelers | Number | Number of travelers | no | no  | no
numOfLuggage | Number | Number of luggage pieces | no | no  | no
useTrafficSituation | Boolean | True: current traffic conditions are considered | no | true  | no
traveler | Array Of Objects | List of traveler details i.e, name, age, travelerType , discountCards, Date of Birth  | no | no  | no
classes | List of Strings | e.g 1st class or 2nd class | no | no | no

Watch metaData for use of unsupported attributes

<strong>Response:</strong>

Each trip proposal in the list of trip propsoals contains the following attributes:

response attribute | json data type | comments | supported by all integrated services
--- | --- | --- | ---
url | URI | URI to request more details | yes
origin | Object | Location, time, and station details if applicable. See below  | yes
destination | Object | Location, time, and station details if applicable. See below | yes
trafficTypes | Array | Modes of transport included in this trip. Range of values are `PublicTransit`, `Train`, `RegioTrain`, `CityTrain`, `Metro`, `Tram`, `Bus`, `Ferry`, `Gondola`, `Car`, `Bike`, `Walk`, `Other` and `Unknown`. `PublicTransit`is a generic value for public transport modes of unknown type. `Bike` subsumes `BikeSharing` and `OwnBike`. `Car` subsumes `CarSharing` and `OwnCar`. Other is used in segments with start/stop procedures for car/bike sharing, car rental, and car parking.  | yes
description | String | Contains a short textual description of this trip | yes
costs | Array | Indicates the costs of this trip including distance, duration, price, and CO2 emmision. The duration may be based on real-time information. | yes

Objects `origin` and `destination` include the following attributes:

response attribute | json data type | comments | supported by all integrated services
--- | --- | --- | ---
location | Object | GeoJson object of type `Point` in longitude, latitude order | yes 
address | String | Address of location or name of public transport station | yes
level | String | Level inside building | no
time | DateTime | Scheduled time of departure or arrival | yes
type | String | `TimedLocation`or `PublicTransportTimedLocation` | yes

In case of `PublicTransportTimedLocation`, additional attributes are included:

response attribute | json data type | comments | supported by all integrated services
--- | --- | --- | ---
stationID | String |Station ID of Connect | yes
direction | String | | no
platform | String | Scheduled platform | no
expectedPlatform | String | Real-time platform | no
expectedTime | DateTime | Real-time arrival or departure time | no


Notes:
- Some integrated services can calculate routes in the past
- Travel times for some `trafficTypes` may contain extra times. Example: 2 minutes set-up time and 1 minute return time for free-floating car sharing and bike sharing; 2 minutes set-up time and 0 minutes return time for station-based car and bike sharing, 5 minutes parking time for free-floating car sharing and own car.

    
+ Model (application/json)

    + Body
    
            {
              "metaData": [
                {
                  "serviceAlias": "vmzImrRouting",
                  "webUiUrl": "http://www.vmzberlin.com/",
                  "lastUpdateTime": "2016-09-27T15:22:41+00:00",
                  "messages": []
                },
                {
                  "serviceAlias": "hvvRouting",
                  "webUiUrl": "http://www.hvv.de/",
                  "lastUpdateTime": null,
                  "messages": [
                    {
                      "code": "service.not.available.in.region",
                      "message": "This service is not available in the requested region",
                      "type": "WARNING"
                    }
                  ]
                }
              ],
              "tripProposals": [
                {
                  "url": "TripProposals/IMR/123737",
                  "origin": {
                    "location": {
                      "coordinates": [
                        13.40956974029541,
                        52.49032974243164
                      ],
                      "type": "Point"
                    },
                    "address": null,
                    "level": null,
                    "time": "2016-09-27T16:10:46+00:00",
                    "type": "TimedLocation"
                  },
                  "destination": {
                    "location": {
                      "coordinates": [
                        13.380080223083496,
                        52.519989013671875
                      ],
                      "type": "Point"
                    },
                    "address": null,
                    "level": null,
                    "time": "2016-09-27T16:24:46+00:00",
                    "type": "TimedLocation"
                  },
                  "trafficTypes": [
                    "OwnCar"
                  ],
                  "description": "@52.48999999999998,13.41:@52.51999999999999,13.38",
                  "costs": {
                    "distance": {
                      "unit": "meter",
                      "value": 5158
                    },
                    "duration": {
                      "unit": "minute",
                      "value": 14.933333333333334
                    },
                    "price": {
                      "unit": "Euro",
                      "value": 2.3211000000000004
                    },
                    "emission": {
                      "unit": "gram",
                      "value": 773.7
                    },
                    "ticketPrice": null
                  }
                },
                {
                  "url": "TripProposals/IMR/123738",
                  "origin": {
                    "location": {
                      "coordinates": [
                        13.40956974029541,
                        52.49032974243164
                      ],
                      "type": "Point"
                    },
                    "address": null,
                    "level": null,
                    "time": "2016-09-28T01:29:37+00:00",
                    "type": "TimedLocation"
                  },
                  "destination": {
                    "location": {
                      "coordinates": [
                        13.3801275,
                        52.5200096
                      ],
                      "type": "Point"
                    },
                    "address": "LuisenstraÃe 31, 10117 Berlin, Deutschland",
                    "level": null,
                    "time": "2016-09-28T01:47:44+00:00",
                    "type": "TimedLocation"
                  },
                  "trafficTypes": [
                    "OwnCar",
                    "Other",
                    "Walk",
                    "Bus"
                  ],
                  "description": null,
                  "costs": {
                    "distance": {
                      "unit": "meter",
                      "value": 5199.414539594361
                    },
                    "duration": {
                      "unit": "minute",
                      "value": 18.1
                    },
                    "price": {
                      "unit": "Euro",
                      "value": 3.4244000000000003
                    },
                    "emission": {
                      "unit": "gram",
                      "value": 540.740726979718
                    },
                    "ticketPrice": {
                      "unit": "Eurocent",
                      "value": 170,
                      "operatorId": "VBB",
                      "ticketId": "00201",
                      "tariffLevel": "B0",
                      "departureZone": "5555",
                      "arrivalZone": "5555"
                    }
                  }
                }
              ]
            }

### Get Trip Proposals by IMR Planner  [POST]
@testable

+ Attributes
    + origin (object, required) - Coordinates or stationID. The latter prevails
        + location (GeoJsonPoint)
    + destination (object, required) - Coordinates or stationID. The latter prevails
        + location (GeoJsonPoint)
    + trafficTypes (array, fixed, required) - Modes of transport to use when calculating trips. Results may not contain all
        + (enum)
            + Public Transit
            + Train
            + RegioTrain
            + CityTrain
            + Metro
            + Tram
            + Bus
            + Ferry
            + Gondola
            + OwnBike
            + BikeSharing
            + OwnCar
            + CarSharing
    + time: `2016-09-27T18:10:00+02:00` (string, optional) - Date and time of the trip. Not all integrated services support times in the past
        + Default: Current server time
    + departureTime: true (boolean, optional) - True: time is used as departure time. False: time is used as arrival time
        + Default: true
    + costFunctions (array) - Trip proposals are ranked accordingly
        + (object)
            + costType: Duration, Distance, Emission, Price (enum)
            + percentage: 100 (number)
                + Default: 0

+ Request (application/json)

+ Response 200

    [Trip Proposals with Basic Info. Intermodal Routing][]


## Trip Proposal with Detailed Info [/imp-endpoint/api/V2/TripProposals/IMR/{proposalId}]
A single trip proposal object with detailed information. A trip proposal consists of one or more segments, each segment has one trafficType. 
Successive segments may have the same trafficType. Each segment has an origin and a destination with corresponding timestamps when to arrive and depart.
A segment can contain a a sequence of wayPoints and guidingPoints.
A wayPoint describes an intermediate geo location useful for displaying a trip course in a map.
A guidingPoint can be an intermediate public transport station or a turn-by-turn instruction. It gives a traveler hints on how to travel, e.g. whenever to change the road at a crossing. GuidingPoints are a subset of wayPoints.

The data structure of the trip proposal with detailed info contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
segments | Array of Objects | List of route segments
--- | --- | ---
segmentId | Number | Index of segment
description | String | Contains a short textual description of the segment
origin | Object | Contains the start location and departure time of this segment, as well as station details in case of a public transport station 
destination | Object | Contains the start location and departure time of this segment, as well as station details in case of a public transport station
trafficType | Enum | Traffic type used in the segment. Range of values are Train, RegioTrain, CityTrain, Metro, Tram, Bus, Ferry, Walk, Car, Bike, Other, Gondola and Unknown. Other is used in segments with start/stop procedures for car/bike sharing, car rental, and car parking. 
line | String | line information for a public transport segment
notes | Array of Objects | note information for a public transport segment
cost | Object | Costs of the segment including distance, duration, price, and CO2 emmision in the provided units.
wayPoints | Object | List of way points to render the segment in a map. This information is not yet available for all services.
guidingPoints | Object | List of guiding points with intermediate public transport stops or turn-by-turn instructions for walking, cycling, and driving. This information is not yet available for all services.

For a car and bike-sharing-segments "operatorId" and "unitId" are provided. For public transport segments "stationId", and "direction" are provided. For Train, RegionTrain, and CityTrain, and Metro-segments "platform" and "expectedPlatform" may be provided.


Note: The trip proposals as returned by *[POST /imp-endpoint/api/V2/TripProposals/IMR]* are internally stored only for a certain time; afterward they expire and details are no longer available. The current expiration time is 10 minutes. Trip proposals can be based on real-time-data and should not be kept longer than necesseary.

### Getting a specific Trip Proposal [GET] 
@nottestable

+ Parameters
    + proposalId (string, `43`, required) ... Prip proposal ID of Connect. Can be retrieved through "Trip Proposals with Basic Info.". 

+ Response 200 (application/json)

    + Body
    
            {
                "url": "TripProposals/IMR/142463/",
                "segments": [
                    {
                        "segmentId": "1",
                        "description": "Walk 1 min",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.201813,
                                    53.466443
                                ],
                                "type": "Point"
                            },
                            "address": "(NÃ¤he) KurfÃ¼rstendeich 2",
                            "level": null,
                            "time": "2016-07-11T15:59:00+00:00",
                            "type": "TimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.201813,
                                    53.466443
                                ],
                                "type": "Point"
                            },
                            "address": "KurfÃ¼rstendeich",
                            "level": null,
                            "time": "2016-07-11T16:00:00+00:00",
                            "type": "TimedLocation"
                        },
                        "trafficType": "Walk",
                        "line": "Footpath",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.201798,
                                    53.466443
                                ],
                                [
                                    10.201798,
                                    53.466434
                                ],
                                [
                                    10.201838,
                                    53.466784
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "2",
                        "description": "Bus 327 towards Bf. Bergedorf",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.201813,
                                    53.466443
                                ],
                                "type": "Point"
                            },
                            "address": "KurfÃ¼rstendeich",
                            "level": null,
                            "time": "2016-07-11T16:00:00+00:00",
                            "stationId": "19363",
                            "direction": "Bf. Bergedorf",
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T16:00:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.205832,
                                    53.489208
                                ],
                                "type": "Point"
                            },
                            "address": "Bf. Bergedorf",
                            "level": null,
                            "time": "2016-07-11T16:09:00+00:00",
                            "stationId": "20460",
                            "direction": null,
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T16:09:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Bus",
                        "line": "Bus 327",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.201813,
                                    53.466443
                                ],
                                [
                                    10.201814,
                                    53.46647
                                ],
                                [
                                    10.201877,
                                    53.46708
                                ],
                                [
                                    10.201948,
                                    53.467466
                                ],
                                [
                                    10.202064,
                                    53.467851
                                ],
                                [
                                    10.202401,
                                    53.468575
                                ],
                                [
                                    10.20338,
                                    53.470713
                                ],
                                [
                                    10.203814,
                                    53.47167
                                ],
                                [
                                    10.204294,
                                    53.472681
                                ],
                                [
                                    10.204568,
                                    53.473307
                                ],
                                [
                                    10.204714,
                                    53.473665
                                ],
                                [
                                    10.204777,
                                    53.47379
                                ],
                                [
                                    10.204777,
                                    53.47379
                                ],
                                [
                                    10.204858,
                                    53.473969
                                ],
                                [
                                    10.20497,
                                    53.47422
                                ],
                                [
                                    10.205083,
                                    53.474461
                                ],
                                [
                                    10.205115,
                                    53.474533
                                ],
                                [
                                    10.205243,
                                    53.474819
                                ],
                                [
                                    10.205355,
                                    53.475051
                                ],
                                [
                                    10.205581,
                                    53.475588
                                ],
                                [
                                    10.205693,
                                    53.475812
                                ],
                                [
                                    10.205921,
                                    53.476393
                                ],
                                [
                                    10.205921,
                                    53.476411
                                ],
                                [
                                    10.206274,
                                    53.477172
                                ],
                                [
                                    10.206676,
                                    53.478048
                                ],
                                [
                                    10.20714,
                                    53.479023
                                ],
                                [
                                    10.207332,
                                    53.479407
                                ],
                                [
                                    10.207543,
                                    53.479962
                                ],
                                [
                                    10.207591,
                                    53.480052
                                ],
                                [
                                    10.207591,
                                    53.480052
                                ],
                                [
                                    10.207751,
                                    53.480374
                                ],
                                [
                                    10.207861,
                                    53.480552
                                ],
                                [
                                    10.207924,
                                    53.48065
                                ],
                                [
                                    10.20802,
                                    53.480838
                                ],
                                [
                                    10.208115,
                                    53.48099
                                ],
                                [
                                    10.208306,
                                    53.481347
                                ],
                                [
                                    10.208322,
                                    53.481392
                                ],
                                [
                                    10.208545,
                                    53.48183
                                ],
                                [
                                    10.208785,
                                    53.482313
                                ],
                                [
                                    10.208914,
                                    53.482599
                                ],
                                [
                                    10.208947,
                                    53.482725
                                ],
                                [
                                    10.209084,
                                    53.48328
                                ],
                                [
                                    10.209279,
                                    53.483791
                                ],
                                [
                                    10.209285,
                                    53.484006
                                ],
                                [
                                    10.209185,
                                    53.484196
                                ],
                                [
                                    10.209084,
                                    53.484341
                                ],
                                [
                                    10.209221,
                                    53.484393
                                ],
                                [
                                    10.209482,
                                    53.484561
                                ],
                                [
                                    10.20962,
                                    53.484659
                                ],
                                [
                                    10.209714,
                                    53.484775
                                ],
                                [
                                    10.209746,
                                    53.484828
                                ],
                                [
                                    10.209794,
                                    53.484945
                                ],
                                [
                                    10.209826,
                                    53.485025
                                ],
                                [
                                    10.209843,
                                    53.485079
                                ],
                                [
                                    10.209843,
                                    53.485079
                                ],
                                [
                                    10.209844,
                                    53.485124
                                ],
                                [
                                    10.20988,
                                    53.48533
                                ],
                                [
                                    10.209933,
                                    53.485608
                                ],
                                [
                                    10.209998,
                                    53.485769
                                ],
                                [
                                    10.210077,
                                    53.485903
                                ],
                                [
                                    10.210288,
                                    53.486413
                                ],
                                [
                                    10.210337,
                                    53.486565
                                ],
                                [
                                    10.21055,
                                    53.487138
                                ],
                                [
                                    10.210566,
                                    53.487183
                                ],
                                [
                                    10.210647,
                                    53.487371
                                ],
                                [
                                    10.210438,
                                    53.487463
                                ],
                                [
                                    10.209902,
                                    53.487684
                                ],
                                [
                                    10.209827,
                                    53.487703
                                ],
                                [
                                    10.20899,
                                    53.487909
                                ],
                                [
                                    10.208555,
                                    53.488003
                                ],
                                [
                                    10.208061,
                                    53.488107
                                ],
                                [
                                    10.207867,
                                    53.488154
                                ],
                                [
                                    10.207702,
                                    53.488183
                                ],
                                [
                                    10.207476,
                                    53.488203
                                ],
                                [
                                    10.207476,
                                    53.488203
                                ],
                                [
                                    10.207296,
                                    53.488214
                                ],
                                [
                                    10.206498,
                                    53.488231
                                ],
                                [
                                    10.206136,
                                    53.488243
                                ],
                                [
                                    10.206061,
                                    53.488244
                                ],
                                [
                                    10.205594,
                                    53.488249
                                ],
                                [
                                    10.205097,
                                    53.488245
                                ],
                                [
                                    10.204886,
                                    53.488256
                                ],
                                [
                                    10.204721,
                                    53.488285
                                ],
                                [
                                    10.204662,
                                    53.488303
                                ],
                                [
                                    10.204602,
                                    53.488322
                                ],
                                [
                                    10.204509,
                                    53.488224
                                ],
                                [
                                    10.203731,
                                    53.487908
                                ],
                                [
                                    10.203488,
                                    53.487812
                                ],
                                [
                                    10.203384,
                                    53.487894
                                ],
                                [
                                    10.20334,
                                    53.48793
                                ],
                                [
                                    10.203311,
                                    53.487948
                                ],
                                [
                                    10.203266,
                                    53.487976
                                ],
                                [
                                    10.203237,
                                    53.488012
                                ],
                                [
                                    10.203208,
                                    53.488048
                                ],
                                [
                                    10.203194,
                                    53.488093
                                ],
                                [
                                    10.203195,
                                    53.488129
                                ],
                                [
                                    10.203212,
                                    53.488174
                                ],
                                [
                                    10.203258,
                                    53.488218
                                ],
                                [
                                    10.203486,
                                    53.488297
                                ],
                                [
                                    10.203959,
                                    53.488481
                                ],
                                [
                                    10.20405,
                                    53.488516
                                ],
                                [
                                    10.204309,
                                    53.48863
                                ],
                                [
                                    10.204355,
                                    53.488648
                                ],
                                [
                                    10.2044,
                                    53.488656
                                ],
                                [
                                    10.204446,
                                    53.488665
                                ],
                                [
                                    10.204476,
                                    53.488664
                                ],
                                [
                                    10.204536,
                                    53.488664
                                ],
                                [
                                    10.204642,
                                    53.488663
                                ],
                                [
                                    10.204687,
                                    53.488653
                                ],
                                [
                                    10.204747,
                                    53.488653
                                ],
                                [
                                    10.204731,
                                    53.488617
                                ],
                                [
                                    10.204745,
                                    53.48859
                                ],
                                [
                                    10.204759,
                                    53.488554
                                ],
                                [
                                    10.204804,
                                    53.488526
                                ],
                                [
                                    10.204863,
                                    53.488508
                                ],
                                [
                                    10.204938,
                                    53.488498
                                ],
                                [
                                    10.204999,
                                    53.488515
                                ],
                                [
                                    10.205457,
                                    53.488735
                                ],
                                [
                                    10.205916,
                                    53.488964
                                ],
                                [
                                    10.206114,
                                    53.489052
                                ],
                                [
                                    10.206389,
                                    53.489193
                                ],
                                [
                                    10.206756,
                                    53.489369
                                ],
                                [
                                    10.207062,
                                    53.489519
                                ],
                                [
                                    10.207092,
                                    53.489546
                                ],
                                [
                                    10.207109,
                                    53.489581
                                ],
                                [
                                    10.207109,
                                    53.489608
                                ],
                                [
                                    10.207095,
                                    53.489635
                                ],
                                [
                                    10.207066,
                                    53.489663
                                ],
                                [
                                    10.207036,
                                    53.48969
                                ],
                                [
                                    10.207098,
                                    53.489725
                                ],
                                [
                                    10.207665,
                                    53.490088
                                ],
                                [
                                    10.208033,
                                    53.490309
                                ],
                                [
                                    10.208355,
                                    53.490512
                                ],
                                [
                                    10.2084,
                                    53.490485
                                ],
                                [
                                    10.208355,
                                    53.490512
                                ],
                                [
                                    10.208033,
                                    53.490309
                                ],
                                [
                                    10.207665,
                                    53.490088
                                ],
                                [
                                    10.207098,
                                    53.489725
                                ],
                                [
                                    10.207036,
                                    53.48969
                                ],
                                [
                                    10.207066,
                                    53.489663
                                ],
                                [
                                    10.207095,
                                    53.489635
                                ],
                                [
                                    10.207109,
                                    53.489608
                                ],
                                [
                                    10.207109,
                                    53.489581
                                ],
                                [
                                    10.207092,
                                    53.489546
                                ],
                                [
                                    10.207062,
                                    53.489519
                                ],
                                [
                                    10.206756,
                                    53.489369
                                ],
                                [
                                    10.206588,
                                    53.48929
                                ],
                                [
                                    10.206389,
                                    53.489193
                                ],
                                [
                                    10.205916,
                                    53.488964
                                ],
                                [
                                    10.205457,
                                    53.488735
                                ],
                                [
                                    10.204999,
                                    53.488515
                                ],
                                [
                                    10.204938,
                                    53.488498
                                ],
                                [
                                    10.204863,
                                    53.488508
                                ],
                                [
                                    10.204804,
                                    53.488526
                                ],
                                [
                                    10.204759,
                                    53.488554
                                ],
                                [
                                    10.204745,
                                    53.48859
                                ],
                                [
                                    10.204731,
                                    53.488617
                                ],
                                [
                                    10.204747,
                                    53.488653
                                ],
                                [
                                    10.204762,
                                    53.488662
                                ],
                                [
                                    10.204793,
                                    53.488679
                                ],
                                [
                                    10.205374,
                                    53.488979
                                ],
                                [
                                    10.205527,
                                    53.489049
                                ],
                                [
                                    10.205832,
                                    53.489199
                                ],
                                [
                                    10.205832,
                                    53.489208
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "3",
                        "description": "RE1 towards Rostock Hbf",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.205971,
                                    53.489844
                                ],
                                "type": "Point"
                            },
                            "address": "Bergedorf",
                            "level": null,
                            "time": "2016-07-11T16:24:00+00:00",
                            "stationId": "22717",
                            "direction": "Rostock Hbf",
                            "platform": "Gleis 1",
                            "expectedPlatform": "Gleis 1",
                            "expectedTime": "2016-07-11T16:24:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.620914,
                                    53.476604
                                ],
                                "type": "Point"
                            },
                            "address": "BÃ¼chen",
                            "level": null,
                            "time": "2016-07-11T16:44:00+00:00",
                            "stationId": "22553",
                            "direction": null,
                            "platform": "Gleis 1",
                            "expectedPlatform": "Gleis 1",
                            "expectedTime": "2016-07-11T16:44:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Train",
                        "line": "RE1",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.205869,
                                    53.489423
                                ],
                                [
                                    10.206113,
                                    53.489555
                                ],
                                [
                                    10.207305,
                                    53.490145
                                ],
                                [
                                    10.208024,
                                    53.490525
                                ],
                                [
                                    10.208437,
                                    53.490727
                                ],
                                [
                                    10.210028,
                                    53.491556
                                ],
                                [
                                    10.21157,
                                    53.492295
                                ],
                                [
                                    10.213097,
                                    53.492989
                                ],
                                [
                                    10.213631,
                                    53.493235
                                ],
                                [
                                    10.213952,
                                    53.493376
                                ],
                                [
                                    10.214912,
                                    53.493761
                                ],
                                [
                                    10.215262,
                                    53.493884
                                ],
                                [
                                    10.21648,
                                    53.494312
                                ],
                                [
                                    10.21759,
                                    53.494651
                                ],
                                [
                                    10.218547,
                                    53.494928
                                ],
                                [
                                    10.219625,
                                    53.495196
                                ],
                                [
                                    10.220656,
                                    53.495419
                                ],
                                [
                                    10.22164,
                                    53.495589
                                ],
                                [
                                    10.221791,
                                    53.495614
                                ],
                                [
                                    10.223592,
                                    53.495856
                                ],
                                [
                                    10.224604,
                                    53.495963
                                ],
                                [
                                    10.224952,
                                    53.495995
                                ],
                                [
                                    10.226569,
                                    53.496167
                                ],
                                [
                                    10.227522,
                                    53.496283
                                ],
                                [
                                    10.228551,
                                    53.496443
                                ],
                                [
                                    10.229232,
                                    53.496553
                                ],
                                [
                                    10.229884,
                                    53.496672
                                ],
                                [
                                    10.230642,
                                    53.496835
                                ],
                                [
                                    10.231401,
                                    53.497007
                                ],
                                [
                                    10.232266,
                                    53.497223
                                ],
                                [
                                    10.232965,
                                    53.497422
                                ],
                                [
                                    10.233786,
                                    53.497683
                                ],
                                [
                                    10.234532,
                                    53.497945
                                ],
                                [
                                    10.235218,
                                    53.498199
                                ],
                                [
                                    10.23595,
                                    53.498497
                                ],
                                [
                                    10.236851,
                                    53.498919
                                ],
                                [
                                    10.237753,
                                    53.499359
                                ],
                                [
                                    10.238319,
                                    53.49964
                                ],
                                [
                                    10.238855,
                                    53.499949
                                ],
                                [
                                    10.239684,
                                    53.500444
                                ],
                                [
                                    10.239991,
                                    53.500665
                                ],
                                [
                                    10.240253,
                                    53.500851
                                ],
                                [
                                    10.240607,
                                    53.501108
                                ],
                                [
                                    10.240669,
                                    53.501143
                                ],
                                [
                                    10.241394,
                                    53.501738
                                ],
                                [
                                    10.24223,
                                    53.502493
                                ],
                                [
                                    10.242463,
                                    53.502724
                                ],
                                [
                                    10.243113,
                                    53.503293
                                ],
                                [
                                    10.24373,
                                    53.50378
                                ],
                                [
                                    10.244792,
                                    53.504551
                                ],
                                [
                                    10.245391,
                                    53.504931
                                ],
                                [
                                    10.245913,
                                    53.505249
                                ],
                                [
                                    10.246342,
                                    53.505496
                                ],
                                [
                                    10.246772,
                                    53.505743
                                ],
                                [
                                    10.247506,
                                    53.506113
                                ],
                                [
                                    10.248118,
                                    53.50643
                                ],
                                [
                                    10.248699,
                                    53.506712
                                ],
                                [
                                    10.249584,
                                    53.507071
                                ],
                                [
                                    10.250453,
                                    53.507394
                                ],
                                [
                                    10.251245,
                                    53.507674
                                ],
                                [
                                    10.251793,
                                    53.507847
                                ],
                                [
                                    10.252856,
                                    53.508124
                                ],
                                [
                                    10.253752,
                                    53.508366
                                ],
                                [
                                    10.255043,
                                    53.508676
                                ],
                                [
                                    10.25609,
                                    53.508908
                                ],
                                [
                                    10.256893,
                                    53.50907
                                ],
                                [
                                    10.259213,
                                    53.509522
                                ],
                                [
                                    10.260457,
                                    53.509778
                                ],
                                [
                                    10.261489,
                                    53.510028
                                ],
                                [
                                    10.262158,
                                    53.510201
                                ],
                                [
                                    10.263481,
                                    53.510591
                                ],
                                [
                                    10.264607,
                                    53.510947
                                ],
                                [
                                    10.265231,
                                    53.511165
                                ],
                                [
                                    10.265841,
                                    53.511393
                                ],
                                [
                                    10.266467,
                                    53.511647
                                ],
                                [
                                    10.267032,
                                    53.511901
                                ],
                                [
                                    10.267781,
                                    53.512253
                                ],
                                [
                                    10.268378,
                                    53.512552
                                ],
                                [
                                    10.268991,
                                    53.512869
                                ],
                                [
                                    10.269558,
                                    53.513186
                                ],
                                [
                                    10.270203,
                                    53.513575
                                ],
                                [
                                    10.270479,
                                    53.513743
                                ],
                                [
                                    10.270971,
                                    53.51407
                                ],
                                [
                                    10.271727,
                                    53.514637
                                ],
                                [
                                    10.272653,
                                    53.515364
                                ],
                                [
                                    10.273025,
                                    53.515701
                                ],
                                [
                                    10.27332,
                                    53.515977
                                ],
                                [
                                    10.273632,
                                    53.516324
                                ],
                                [
                                    10.274098,
                                    53.516768
                                ],
                                [
                                    10.275327,
                                    53.518049
                                ],
                                [
                                    10.275731,
                                    53.51844
                                ],
                                [
                                    10.276118,
                                    53.518795
                                ],
                                [
                                    10.277296,
                                    53.519852
                                ],
                                [
                                    10.278145,
                                    53.520499
                                ],
                                [
                                    10.278838,
                                    53.520968
                                ],
                                [
                                    10.27976,
                                    53.521542
                                ],
                                [
                                    10.280328,
                                    53.521877
                                ],
                                [
                                    10.280895,
                                    53.522186
                                ],
                                [
                                    10.2814,
                                    53.52245
                                ],
                                [
                                    10.28192,
                                    53.522696
                                ],
                                [
                                    10.282302,
                                    53.522862
                                ],
                                [
                                    10.283814,
                                    53.523493
                                ],
                                [
                                    10.284745,
                                    53.523861
                                ],
                                [
                                    10.285644,
                                    53.524156
                                ],
                                [
                                    10.286238,
                                    53.524348
                                ],
                                [
                                    10.287135,
                                    53.524599
                                ],
                                [
                                    10.288047,
                                    53.524831
                                ],
                                [
                                    10.29262,
                                    53.525968
                                ],
                                [
                                    10.294216,
                                    53.526355
                                ],
                                [
                                    10.296343,
                                    53.52688
                                ],
                                [
                                    10.298121,
                                    53.527319
                                ],
                                [
                                    10.298652,
                                    53.527448
                                ],
                                [
                                    10.299062,
                                    53.527543
                                ],
                                [
                                    10.300536,
                                    53.527895
                                ],
                                [
                                    10.301326,
                                    53.528066
                                ],
                                [
                                    10.302692,
                                    53.528366
                                ],
                                [
                                    10.303526,
                                    53.528527
                                ],
                                [
                                    10.304345,
                                    53.528671
                                ],
                                [
                                    10.305391,
                                    53.528839
                                ],
                                [
                                    10.307194,
                                    53.529116
                                ],
                                [
                                    10.308405,
                                    53.529265
                                ],
                                [
                                    10.309344,
                                    53.52938
                                ],
                                [
                                    10.310448,
                                    53.529503
                                ],
                                [
                                    10.311401,
                                    53.529591
                                ],
                                [
                                    10.31252,
                                    53.529678
                                ],
                                [
                                    10.313744,
                                    53.529763
                                ],
                                [
                                    10.314212,
                                    53.529785
                                ],
                                [
                                    10.314741,
                                    53.529815
                                ],
                                [
                                    10.316281,
                                    53.529879
                                ],
                                [
                                    10.317806,
                                    53.529925
                                ],
                                [
                                    10.318591,
                                    53.529944
                                ],
                                [
                                    10.319119,
                                    53.529947
                                ],
                                [
                                    10.32013,
                                    53.529963
                                ],
                                [
                                    10.320567,
                                    53.529967
                                ],
                                [
                                    10.321201,
                                    53.529978
                                ],
                                [
                                    10.322362,
                                    53.529974
                                ],
                                [
                                    10.323929,
                                    53.529938
                                ],
                                [
                                    10.324653,
                                    53.529912
                                ],
                                [
                                    10.326053,
                                    53.529843
                                ],
                                [
                                    10.327378,
                                    53.529765
                                ],
                                [
                                    10.328325,
                                    53.529683
                                ],
                                [
                                    10.33016,
                                    53.529519
                                ],
                                [
                                    10.331242,
                                    53.529399
                                ],
                                [
                                    10.332324,
                                    53.529288
                                ],
                                [
                                    10.333226,
                                    53.529179
                                ],
                                [
                                    10.334787,
                                    53.528955
                                ],
                                [
                                    10.336302,
                                    53.528704
                                ],
                                [
                                    10.338252,
                                    53.528359
                                ],
                                [
                                    10.340127,
                                    53.528033
                                ],
                                [
                                    10.343141,
                                    53.527496
                                ],
                                [
                                    10.344011,
                                    53.527333
                                ],
                                [
                                    10.3447,
                                    53.527199
                                ],
                                [
                                    10.345493,
                                    53.527011
                                ],
                                [
                                    10.346406,
                                    53.526785
                                ],
                                [
                                    10.347198,
                                    53.526551
                                ],
                                [
                                    10.348616,
                                    53.526104
                                ],
                                [
                                    10.349898,
                                    53.525613
                                ],
                                [
                                    10.350493,
                                    53.525364
                                ],
                                [
                                    10.35366,
                                    53.523971
                                ],
                                [
                                    10.354523,
                                    53.523602
                                ],
                                [
                                    10.355446,
                                    53.523223
                                ],
                                [
                                    10.356936,
                                    53.522667
                                ],
                                [
                                    10.358429,
                                    53.52221
                                ],
                                [
                                    10.359491,
                                    53.521919
                                ],
                                [
                                    10.360868,
                                    53.521625
                                ],
                                [
                                    10.361722,
                                    53.521453
                                ],
                                [
                                    10.362862,
                                    53.521261
                                ],
                                [
                                    10.364198,
                                    53.521066
                                ],
                                [
                                    10.36552,
                                    53.520916
                                ],
                                [
                                    10.366935,
                                    53.520855
                                ],
                                [
                                    10.367959,
                                    53.520816
                                ],
                                [
                                    10.36918,
                                    53.520802
                                ],
                                [
                                    10.370855,
                                    53.520837
                                ],
                                [
                                    10.372622,
                                    53.520915
                                ],
                                [
                                    10.379104,
                                    53.521326
                                ],
                                [
                                    10.389801,
                                    53.522011
                                ],
                                [
                                    10.403852,
                                    53.522835
                                ],
                                [
                                    10.406935,
                                    53.523059
                                ],
                                [
                                    10.409066,
                                    53.523187
                                ],
                                [
                                    10.410379,
                                    53.523243
                                ],
                                [
                                    10.410576,
                                    53.523259
                                ],
                                [
                                    10.410772,
                                    53.523266
                                ],
                                [
                                    10.413683,
                                    53.523294
                                ],
                                [
                                    10.415927,
                                    53.523187
                                ],
                                [
                                    10.41728,
                                    53.523072
                                ],
                                [
                                    10.419697,
                                    53.522765
                                ],
                                [
                                    10.421077,
                                    53.522532
                                ],
                                [
                                    10.422515,
                                    53.522237
                                ],
                                [
                                    10.423382,
                                    53.522038
                                ],
                                [
                                    10.424204,
                                    53.521821
                                ],
                                [
                                    10.425011,
                                    53.521587
                                ],
                                [
                                    10.426532,
                                    53.521075
                                ],
                                [
                                    10.427575,
                                    53.520703
                                ],
                                [
                                    10.428467,
                                    53.520342
                                ],
                                [
                                    10.429565,
                                    53.519798
                                ],
                                [
                                    10.43047,
                                    53.519365
                                ],
                                [
                                    10.431331,
                                    53.518968
                                ],
                                [
                                    10.432223,
                                    53.518607
                                ],
                                [
                                    10.434261,
                                    53.517783
                                ],
                                [
                                    10.43609,
                                    53.517015
                                ],
                                [
                                    10.438021,
                                    53.516174
                                ],
                                [
                                    10.443651,
                                    53.513689
                                ],
                                [
                                    10.448341,
                                    53.511548
                                ],
                                [
                                    10.450257,
                                    53.510707
                                ],
                                [
                                    10.451758,
                                    53.510051
                                ],
                                [
                                    10.454044,
                                    53.509025
                                ],
                                [
                                    10.455484,
                                    53.508397
                                ],
                                [
                                    10.456763,
                                    53.507878
                                ],
                                [
                                    10.457985,
                                    53.507459
                                ],
                                [
                                    10.459535,
                                    53.506964
                                ],
                                [
                                    10.460536,
                                    53.5067
                                ],
                                [
                                    10.461733,
                                    53.506425
                                ],
                                [
                                    10.463858,
                                    53.505985
                                ],
                                [
                                    10.465282,
                                    53.50577
                                ],
                                [
                                    10.467384,
                                    53.50552
                                ],
                                [
                                    10.468451,
                                    53.505444
                                ],
                                [
                                    10.469203,
                                    53.505389
                                ],
                                [
                                    10.472467,
                                    53.505196
                                ],
                                [
                                    10.477415,
                                    53.504866
                                ],
                                [
                                    10.477956,
                                    53.504823
                                ],
                                [
                                    10.478722,
                                    53.50476
                                ],
                                [
                                    10.479953,
                                    53.504619
                                ],
                                [
                                    10.481423,
                                    53.504403
                                ],
                                [
                                    10.482577,
                                    53.504218
                                ],
                                [
                                    10.482996,
                                    53.504141
                                ],
                                [
                                    10.48343,
                                    53.504027
                                ],
                                [
                                    10.484043,
                                    53.503903
                                ],
                                [
                                    10.484746,
                                    53.50375
                                ],
                                [
                                    10.484746,
                                    53.50375
                                ],
                                [
                                    10.485478,
                                    53.503562
                                ],
                                [
                                    10.487318,
                                    53.50317
                                ],
                                [
                                    10.489577,
                                    53.502684
                                ],
                                [
                                    10.490086,
                                    53.50257
                                ],
                                [
                                    10.490445,
                                    53.502493
                                ],
                                [
                                    10.491746,
                                    53.502217
                                ],
                                [
                                    10.49227,
                                    53.50212
                                ],
                                [
                                    10.493243,
                                    53.501919
                                ],
                                [
                                    10.494502,
                                    53.501715
                                ],
                                [
                                    10.495343,
                                    53.501623
                                ],
                                [
                                    10.49611,
                                    53.501578
                                ],
                                [
                                    10.497387,
                                    53.501481
                                ],
                                [
                                    10.497778,
                                    53.501458
                                ],
                                [
                                    10.499191,
                                    53.501342
                                ],
                                [
                                    10.500952,
                                    53.501283
                                ],
                                [
                                    10.502594,
                                    53.501263
                                ],
                                [
                                    10.504254,
                                    53.501323
                                ],
                                [
                                    10.505614,
                                    53.501405
                                ],
                                [
                                    10.505795,
                                    53.50142
                                ],
                                [
                                    10.506566,
                                    53.501491
                                ],
                                [
                                    10.50702,
                                    53.501531
                                ],
                                [
                                    10.508353,
                                    53.501729
                                ],
                                [
                                    10.509369,
                                    53.501905
                                ],
                                [
                                    10.509869,
                                    53.501989
                                ],
                                [
                                    10.5099,
                                    53.501997
                                ],
                                [
                                    10.5116,
                                    53.502335
                                ],
                                [
                                    10.513547,
                                    53.502823
                                ],
                                [
                                    10.515769,
                                    53.503451
                                ],
                                [
                                    10.516744,
                                    53.503726
                                ],
                                [
                                    10.519333,
                                    53.504466
                                ],
                                [
                                    10.521053,
                                    53.504947
                                ],
                                [
                                    10.522543,
                                    53.505306
                                ],
                                [
                                    10.523956,
                                    53.505602
                                ],
                                [
                                    10.524986,
                                    53.505769
                                ],
                                [
                                    10.526078,
                                    53.505934
                                ],
                                [
                                    10.526941,
                                    53.506049
                                ],
                                [
                                    10.52794,
                                    53.506153
                                ],
                                [
                                    10.528862,
                                    53.506231
                                ],
                                [
                                    10.530191,
                                    53.506295
                                ],
                                [
                                    10.531549,
                                    53.506332
                                ],
                                [
                                    10.532815,
                                    53.506342
                                ],
                                [
                                    10.534532,
                                    53.506311
                                ],
                                [
                                    10.536456,
                                    53.506143
                                ],
                                [
                                    10.537837,
                                    53.506008
                                ],
                                [
                                    10.539262,
                                    53.50581
                                ],
                                [
                                    10.540461,
                                    53.505606
                                ],
                                [
                                    10.542361,
                                    53.505222
                                ],
                                [
                                    10.543645,
                                    53.504891
                                ],
                                [
                                    10.543944,
                                    53.504806
                                ],
                                [
                                    10.550621,
                                    53.502743
                                ],
                                [
                                    10.560574,
                                    53.499612
                                ],
                                [
                                    10.560574,
                                    53.499612
                                ],
                                [
                                    10.561274,
                                    53.499387
                                ],
                                [
                                    10.584855,
                                    53.491978
                                ],
                                [
                                    10.585213,
                                    53.491874
                                ],
                                [
                                    10.586746,
                                    53.491377
                                ],
                                [
                                    10.587252,
                                    53.491218
                                ],
                                [
                                    10.597989,
                                    53.48784
                                ],
                                [
                                    10.599002,
                                    53.487521
                                ],
                                [
                                    10.600206,
                                    53.4871
                                ],
                                [
                                    10.601694,
                                    53.486586
                                ],
                                [
                                    10.602852,
                                    53.48613
                                ],
                                [
                                    10.603964,
                                    53.485666
                                ],
                                [
                                    10.605121,
                                    53.485174
                                ],
                                [
                                    10.605713,
                                    53.484905
                                ],
                                [
                                    10.606276,
                                    53.484646
                                ],
                                [
                                    10.608139,
                                    53.483723
                                ],
                                [
                                    10.615798,
                                    53.479513
                                ],
                                [
                                    10.616182,
                                    53.479301
                                ],
                                [
                                    10.61714,
                                    53.478749
                                ],
                                [
                                    10.619675,
                                    53.477294
                                ],
                                [
                                    10.620914,
                                    53.476604
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "4",
                        "description": "RE83 towards LÃ¼neburg",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.620914,
                                    53.476604
                                ],
                                "type": "Point"
                            },
                            "address": "BÃ¼chen",
                            "level": null,
                            "time": "2016-07-11T17:07:00+00:00",
                            "stationId": "22553",
                            "direction": "LÃ¼neburg",
                            "platform": "Gleis 140",
                            "expectedPlatform": "Gleis 140",
                            "expectedTime": "2016-07-11T17:07:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.419978,
                                    53.249955
                                ],
                                "type": "Point"
                            },
                            "address": "LÃ¼neburg",
                            "level": null,
                            "time": "2016-07-11T17:30:00+00:00",
                            "stationId": "17325",
                            "direction": null,
                            "platform": "Gleis 5",
                            "expectedPlatform": "Gleis 5",
                            "expectedTime": "2016-07-11T17:30:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Train",
                        "line": "RE83",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.620914,
                                    53.476604
                                ],
                                [
                                    10.620959,
                                    53.476576
                                ],
                                [
                                    10.621445,
                                    53.476309
                                ],
                                [
                                    10.622016,
                                    53.475861
                                ],
                                [
                                    10.622348,
                                    53.475488
                                ],
                                [
                                    10.623042,
                                    53.474733
                                ],
                                [
                                    10.623302,
                                    53.474432
                                ],
                                [
                                    10.623728,
                                    53.473771
                                ],
                                [
                                    10.623991,
                                    53.473165
                                ],
                                [
                                    10.624137,
                                    53.472633
                                ],
                                [
                                    10.624182,
                                    53.472228
                                ],
                                [
                                    10.624209,
                                    53.47176
                                ],
                                [
                                    10.624189,
                                    53.471248
                                ],
                                [
                                    10.62412,
                                    53.470234
                                ],
                                [
                                    10.6241,
                                    53.470081
                                ],
                                [
                                    10.624109,
                                    53.469542
                                ],
                                [
                                    10.624103,
                                    53.469389
                                ],
                                [
                                    10.624055,
                                    53.466541
                                ],
                                [
                                    10.623938,
                                    53.461906
                                ],
                                [
                                    10.623752,
                                    53.456643
                                ],
                                [
                                    10.622988,
                                    53.453589
                                ],
                                [
                                    10.622256,
                                    53.452161
                                ],
                                [
                                    10.620887,
                                    53.44943
                                ],
                                [
                                    10.620823,
                                    53.449314
                                ],
                                [
                                    10.613257,
                                    53.434374
                                ],
                                [
                                    10.61208,
                                    53.431918
                                ],
                                [
                                    10.611588,
                                    53.430847
                                ],
                                [
                                    10.607183,
                                    53.422171
                                ],
                                [
                                    10.606727,
                                    53.421243
                                ],
                                [
                                    10.605652,
                                    53.419083
                                ],
                                [
                                    10.601059,
                                    53.409727
                                ],
                                [
                                    10.597292,
                                    53.40231
                                ],
                                [
                                    10.594057,
                                    53.395829
                                ],
                                [
                                    10.592043,
                                    53.391821
                                ],
                                [
                                    10.590515,
                                    53.388732
                                ],
                                [
                                    10.587263,
                                    53.382153
                                ],
                                [
                                    10.585347,
                                    53.378305
                                ],
                                [
                                    10.58491,
                                    53.377457
                                ],
                                [
                                    10.584413,
                                    53.376628
                                ],
                                [
                                    10.583517,
                                    53.375562
                                ],
                                [
                                    10.583049,
                                    53.375101
                                ],
                                [
                                    10.582332,
                                    53.374409
                                ],
                                [
                                    10.581148,
                                    53.37367
                                ],
                                [
                                    10.579648,
                                    53.372944
                                ],
                                [
                                    10.577546,
                                    53.372181
                                ],
                                [
                                    10.576408,
                                    53.371882
                                ],
                                [
                                    10.573662,
                                    53.371172
                                ],
                                [
                                    10.570538,
                                    53.370378
                                ],
                                [
                                    10.569096,
                                    53.369992
                                ],
                                [
                                    10.568216,
                                    53.369752
                                ],
                                [
                                    10.568216,
                                    53.369752
                                ],
                                [
                                    10.567333,
                                    53.369449
                                ],
                                [
                                    10.565647,
                                    53.368546
                                ],
                                [
                                    10.558272,
                                    53.364886
                                ],
                                [
                                    10.557445,
                                    53.364448
                                ],
                                [
                                    10.556213,
                                    53.363637
                                ],
                                [
                                    10.555156,
                                    53.362662
                                ],
                                [
                                    10.55503,
                                    53.362493
                                ],
                                [
                                    10.554452,
                                    53.36189
                                ],
                                [
                                    10.553971,
                                    53.360647
                                ],
                                [
                                    10.553787,
                                    53.35931
                                ],
                                [
                                    10.553752,
                                    53.355042
                                ],
                                [
                                    10.553789,
                                    53.349452
                                ],
                                [
                                    10.553417,
                                    53.348298
                                ],
                                [
                                    10.552458,
                                    53.346711
                                ],
                                [
                                    10.551004,
                                    53.345553
                                ],
                                [
                                    10.550527,
                                    53.345244
                                ],
                                [
                                    10.550297,
                                    53.345095
                                ],
                                [
                                    10.540052,
                                    53.338739
                                ],
                                [
                                    10.537921,
                                    53.337518
                                ],
                                [
                                    10.537921,
                                    53.337518
                                ],
                                [
                                    10.537137,
                                    53.337025
                                ],
                                [
                                    10.536505,
                                    53.336566
                                ],
                                [
                                    10.532636,
                                    53.33418
                                ],
                                [
                                    10.52545,
                                    53.329698
                                ],
                                [
                                    10.524882,
                                    53.329337
                                ],
                                [
                                    10.512746,
                                    53.321907
                                ],
                                [
                                    10.506716,
                                    53.318174
                                ],
                                [
                                    10.50667,
                                    53.318147
                                ],
                                [
                                    10.505642,
                                    53.317513
                                ],
                                [
                                    10.499168,
                                    53.313497
                                ],
                                [
                                    10.497251,
                                    53.312299
                                ],
                                [
                                    10.495932,
                                    53.311489
                                ],
                                [
                                    10.49159,
                                    53.308731
                                ],
                                [
                                    10.49136,
                                    53.30859
                                ],
                                [
                                    10.489934,
                                    53.307718
                                ],
                                [
                                    10.486025,
                                    53.305313
                                ],
                                [
                                    10.485029,
                                    53.304715
                                ],
                                [
                                    10.476524,
                                    53.299545
                                ],
                                [
                                    10.471857,
                                    53.296431
                                ],
                                [
                                    10.471719,
                                    53.296352
                                ],
                                [
                                    10.469355,
                                    53.294782
                                ],
                                [
                                    10.46511,
                                    53.291257
                                ],
                                [
                                    10.463845,
                                    53.29023
                                ],
                                [
                                    10.457998,
                                    53.285441
                                ],
                                [
                                    10.457228,
                                    53.284839
                                ],
                                [
                                    10.451753,
                                    53.280377
                                ],
                                [
                                    10.451105,
                                    53.279818
                                ],
                                [
                                    10.448869,
                                    53.277995
                                ],
                                [
                                    10.441036,
                                    53.271575
                                ],
                                [
                                    10.437028,
                                    53.26828
                                ],
                                [
                                    10.436182,
                                    53.267625
                                ],
                                [
                                    10.431514,
                                    53.263853
                                ],
                                [
                                    10.428382,
                                    53.26115
                                ],
                                [
                                    10.424194,
                                    53.257803
                                ],
                                [
                                    10.423219,
                                    53.256872
                                ],
                                [
                                    10.422612,
                                    53.256205
                                ],
                                [
                                    10.422238,
                                    53.255751
                                ],
                                [
                                    10.420933,
                                    53.253924
                                ],
                                [
                                    10.420728,
                                    53.253594
                                ],
                                [
                                    10.420505,
                                    53.253202
                                ],
                                [
                                    10.420277,
                                    53.252647
                                ],
                                [
                                    10.420078,
                                    53.252074
                                ],
                                [
                                    10.420077,
                                    53.252048
                                ],
                                [
                                    10.420057,
                                    53.251895
                                ],
                                [
                                    10.420034,
                                    53.251653
                                ],
                                [
                                    10.419997,
                                    53.251428
                                ],
                                [
                                    10.419983,
                                    53.251033
                                ],
                                [
                                    10.419978,
                                    53.249955
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "5",
                        "description": "Bus 5100 towards Bleckede, Bahnhof",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.419097,
                                    53.248689
                                ],
                                "type": "Point"
                            },
                            "address": "Bf. LÃ¼neburg (ZOB)",
                            "level": null,
                            "time": "2016-07-11T17:45:00+00:00",
                            "stationId": "123394",
                            "direction": "Bleckede, Bahnhof",
                            "platform": "LÃ¼neburg ZOB Hst.13",
                            "expectedPlatform": "LÃ¼neburg ZOB Hst.13",
                            "expectedTime": "2016-07-11T17:45:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.728011,
                                    53.291474
                                ],
                                "type": "Point"
                            },
                            "address": "Bleckede, Bahnhof",
                            "level": null,
                            "time": "2016-07-11T18:15:00+00:00",
                            "stationId": "123991",
                            "direction": null,
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T18:15:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Bus",
                        "line": "Bus 5100",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.419097,
                                    53.248689
                                ],
                                [
                                    10.419086,
                                    53.248824
                                ],
                                [
                                    10.419091,
                                    53.248977
                                ],
                                [
                                    10.419097,
                                    53.249139
                                ],
                                [
                                    10.419086,
                                    53.249283
                                ],
                                [
                                    10.419074,
                                    53.249346
                                ],
                                [
                                    10.419075,
                                    53.249382
                                ],
                                [
                                    10.41897,
                                    53.249374
                                ],
                                [
                                    10.41891,
                                    53.249375
                                ],
                                [
                                    10.418805,
                                    53.249376
                                ],
                                [
                                    10.418743,
                                    53.249314
                                ],
                                [
                                    10.418769,
                                    53.249188
                                ],
                                [
                                    10.41878,
                                    53.249071
                                ],
                                [
                                    10.418761,
                                    53.248954
                                ],
                                [
                                    10.418709,
                                    53.248739
                                ],
                                [
                                    10.418618,
                                    53.248264
                                ],
                                [
                                    10.418585,
                                    53.248174
                                ],
                                [
                                    10.418736,
                                    53.24819
                                ],
                                [
                                    10.418826,
                                    53.248207
                                ],
                                [
                                    10.419262,
                                    53.248247
                                ],
                                [
                                    10.419623,
                                    53.248279
                                ],
                                [
                                    10.419863,
                                    53.248303
                                ],
                                [
                                    10.420343,
                                    53.248306
                                ],
                                [
                                    10.420703,
                                    53.24832
                                ],
                                [
                                    10.420928,
                                    53.248344
                                ],
                                [
                                    10.421321,
                                    53.248438
                                ],
                                [
                                    10.421728,
                                    53.248514
                                ],
                                [
                                    10.421894,
                                    53.248539
                                ],
                                [
                                    10.422496,
                                    53.248622
                                ],
                                [
                                    10.422706,
                                    53.248646
                                ],
                                [
                                    10.423277,
                                    53.248693
                                ],
                                [
                                    10.423667,
                                    53.248698
                                ],
                                [
                                    10.4244,
                                    53.248671
                                ],
                                [
                                    10.424669,
                                    53.248641
                                ],
                                [
                                    10.425579,
                                    53.248531
                                ],
                                [
                                    10.425833,
                                    53.248501
                                ],
                                [
                                    10.426579,
                                    53.248411
                                ],
                                [
                                    10.426668,
                                    53.248401
                                ],
                                [
                                    10.42725,
                                    53.248331
                                ],
                                [
                                    10.42734,
                                    53.248321
                                ],
                                [
                                    10.427907,
                                    53.248252
                                ],
                                [
                                    10.42816,
                                    53.248213
                                ],
                                [
                                    10.428264,
                                    53.248193
                                ],
                                [
                                    10.428562,
                                    53.248145
                                ],
                                [
                                    10.428682,
                                    53.248126
                                ],
                                [
                                    10.42886,
                                    53.248096
                                ],
                                [
                                    10.429233,
                                    53.248047
                                ],
                                [
                                    10.429517,
                                    53.248008
                                ],
                                [
                                    10.429517,
                                    53.248008
                                ],
                                [
                                    10.429516,
                                    53.247999
                                ],
                                [
                                    10.429755,
                                    53.247969
                                ],
                                [
                                    10.429994,
                                    53.24793
                                ],
                                [
                                    10.430113,
                                    53.247911
                                ],
                                [
                                    10.430709,
                                    53.247832
                                ],
                                [
                                    10.430739,
                                    53.247822
                                ],
                                [
                                    10.430873,
                                    53.247803
                                ],
                                [
                                    10.431335,
                                    53.247734
                                ],
                                [
                                    10.431902,
                                    53.247656
                                ],
                                [
                                    10.431947,
                                    53.247646
                                ],
                                [
                                    10.432051,
                                    53.247627
                                ],
                                [
                                    10.432096,
                                    53.247626
                                ],
                                [
                                    10.432156,
                                    53.247617
                                ],
                                [
                                    10.43226,
                                    53.247597
                                ],
                                [
                                    10.432319,
                                    53.247588
                                ],
                                [
                                    10.432424,
                                    53.247577
                                ],
                                [
                                    10.432469,
                                    53.247568
                                ],
                                [
                                    10.432811,
                                    53.247519
                                ],
                                [
                                    10.434136,
                                    53.247242
                                ],
                                [
                                    10.434953,
                                    53.247044
                                ],
                                [
                                    10.435384,
                                    53.24694
                                ],
                                [
                                    10.435978,
                                    53.246798
                                ],
                                [
                                    10.436647,
                                    53.246637
                                ],
                                [
                                    10.437569,
                                    53.246419
                                ],
                                [
                                    10.437806,
                                    53.246353
                                ],
                                [
                                    10.43797,
                                    53.246324
                                ],
                                [
                                    10.438089,
                                    53.246287
                                ],
                                [
                                    10.438237,
                                    53.246249
                                ],
                                [
                                    10.438802,
                                    53.246117
                                ],
                                [
                                    10.439441,
                                    53.245956
                                ],
                                [
                                    10.44011,
                                    53.245795
                                ],
                                [
                                    10.441061,
                                    53.245559
                                ],
                                [
                                    10.441997,
                                    53.245332
                                ],
                                [
                                    10.442353,
                                    53.245247
                                ],
                                [
                                    10.442517,
                                    53.245209
                                ],
                                [
                                    10.44265,
                                    53.245171
                                ],
                                [
                                    10.44265,
                                    53.245171
                                ],
                                [
                                    10.442859,
                                    53.245124
                                ],
                                [
                                    10.443096,
                                    53.245067
                                ],
                                [
                                    10.443156,
                                    53.245049
                                ],
                                [
                                    10.443735,
                                    53.244907
                                ],
                                [
                                    10.444612,
                                    53.244689
                                ],
                                [
                                    10.445355,
                                    53.24451
                                ],
                                [
                                    10.445459,
                                    53.244481
                                ],
                                [
                                    10.445979,
                                    53.244358
                                ],
                                [
                                    10.446083,
                                    53.24433
                                ],
                                [
                                    10.446915,
                                    53.244122
                                ],
                                [
                                    10.447494,
                                    53.24398
                                ],
                                [
                                    10.447747,
                                    53.243923
                                ],
                                [
                                    10.447821,
                                    53.243905
                                ],
                                [
                                    10.447821,
                                    53.243905
                                ],
                                [
                                    10.447836,
                                    53.243895
                                ],
                                [
                                    10.44794,
                                    53.243867
                                ],
                                [
                                    10.448207,
                                    53.24381
                                ],
                                [
                                    10.448935,
                                    53.24363
                                ],
                                [
                                    10.449218,
                                    53.243555
                                ],
                                [
                                    10.45051,
                                    53.243234
                                ],
                                [
                                    10.451892,
                                    53.242893
                                ],
                                [
                                    10.452352,
                                    53.24278
                                ],
                                [
                                    10.452471,
                                    53.242752
                                ],
                                [
                                    10.452917,
                                    53.242647
                                ],
                                [
                                    10.453348,
                                    53.242543
                                ],
                                [
                                    10.453942,
                                    53.242401
                                ],
                                [
                                    10.454016,
                                    53.242382
                                ],
                                [
                                    10.454106,
                                    53.242363
                                ],
                                [
                                    10.454492,
                                    53.242269
                                ],
                                [
                                    10.454537,
                                    53.242259
                                ],
                                [
                                    10.455354,
                                    53.242078
                                ],
                                [
                                    10.455503,
                                    53.24205
                                ],
                                [
                                    10.456366,
                                    53.241886
                                ],
                                [
                                    10.456664,
                                    53.241829
                                ],
                                [
                                    10.457126,
                                    53.241742
                                ],
                                [
                                    10.457723,
                                    53.241681
                                ],
                                [
                                    10.459256,
                                    53.241393
                                ],
                                [
                                    10.459866,
                                    53.241277
                                ],
                                [
                                    10.460938,
                                    53.241076
                                ],
                                [
                                    10.461148,
                                    53.241091
                                ],
                                [
                                    10.461268,
                                    53.241107
                                ],
                                [
                                    10.461407,
                                    53.241214
                                ],
                                [
                                    10.461516,
                                    53.241329
                                ],
                                [
                                    10.461628,
                                    53.241552
                                ],
                                [
                                    10.461633,
                                    53.241687
                                ],
                                [
                                    10.461577,
                                    53.241823
                                ],
                                [
                                    10.461476,
                                    53.241932
                                ],
                                [
                                    10.461255,
                                    53.242042
                                ],
                                [
                                    10.461077,
                                    53.242098
                                ],
                                [
                                    10.460644,
                                    53.242139
                                ],
                                [
                                    10.460165,
                                    53.242136
                                ],
                                [
                                    10.459791,
                                    53.242141
                                ],
                                [
                                    10.459746,
                                    53.242142
                                ],
                                [
                                    10.459656,
                                    53.242143
                                ],
                                [
                                    10.459677,
                                    53.242313
                                ],
                                [
                                    10.459732,
                                    53.242627
                                ],
                                [
                                    10.459814,
                                    53.243273
                                ],
                                [
                                    10.459925,
                                    53.243883
                                ],
                                [
                                    10.459998,
                                    53.244277
                                ],
                                [
                                    10.460105,
                                    53.24477
                                ],
                                [
                                    10.460167,
                                    53.244841
                                ],
                                [
                                    10.460363,
                                    53.244884
                                ],
                                [
                                    10.460648,
                                    53.244871
                                ],
                                [
                                    10.461021,
                                    53.244849
                                ],
                                [
                                    10.461873,
                                    53.244775
                                ],
                                [
                                    10.461962,
                                    53.244765
                                ],
                                [
                                    10.462037,
                                    53.244755
                                ],
                                [
                                    10.462268,
                                    53.244932
                                ],
                                [
                                    10.462533,
                                    53.245675
                                ],
                                [
                                    10.462581,
                                    53.245782
                                ],
                                [
                                    10.462648,
                                    53.245979
                                ],
                                [
                                    10.462665,
                                    53.246033
                                ],
                                [
                                    10.462684,
                                    53.246158
                                ],
                                [
                                    10.462721,
                                    53.246356
                                ],
                                [
                                    10.462892,
                                    53.246991
                                ],
                                [
                                    10.462988,
                                    53.247592
                                ],
                                [
                                    10.463027,
                                    53.24787
                                ],
                                [
                                    10.463047,
                                    53.248023
                                ],
                                [
                                    10.463082,
                                    53.248148
                                ],
                                [
                                    10.463516,
                                    53.248134
                                ],
                                [
                                    10.464114,
                                    53.248118
                                ],
                                [
                                    10.465207,
                                    53.248086
                                ],
                                [
                                    10.465521,
                                    53.248082
                                ],
                                [
                                    10.465822,
                                    53.248106
                                ],
                                [
                                    10.466123,
                                    53.248147
                                ],
                                [
                                    10.466409,
                                    53.248197
                                ],
                                [
                                    10.466681,
                                    53.248266
                                ],
                                [
                                    10.466939,
                                    53.248353
                                ],
                                [
                                    10.467412,
                                    53.248589
                                ],
                                [
                                    10.467853,
                                    53.2488
                                ],
                                [
                                    10.468339,
                                    53.248991
                                ],
                                [
                                    10.468886,
                                    53.2492
                                ],
                                [
                                    10.469294,
                                    53.249303
                                ],
                                [
                                    10.46949,
                                    53.249346
                                ],
                                [
                                    10.470063,
                                    53.249455
                                ],
                                [
                                    10.47068,
                                    53.249529
                                ],
                                [
                                    10.471235,
                                    53.249549
                                ],
                                [
                                    10.471775,
                                    53.24956
                                ],
                                [
                                    10.472328,
                                    53.249526
                                ],
                                [
                                    10.472642,
                                    53.249495
                                ],
                                [
                                    10.473178,
                                    53.249408
                                ],
                                [
                                    10.473654,
                                    53.249321
                                ],
                                [
                                    10.474218,
                                    53.249161
                                ],
                                [
                                    10.474885,
                                    53.248937
                                ],
                                [
                                    10.474948,
                                    53.249026
                                ],
                                [
                                    10.475115,
                                    53.249105
                                ],
                                [
                                    10.475282,
                                    53.249148
                                ],
                                [
                                    10.47557,
                                    53.24927
                                ],
                                [
                                    10.475646,
                                    53.249296
                                ],
                                [
                                    10.475888,
                                    53.249356
                                ],
                                [
                                    10.476115,
                                    53.249416
                                ],
                                [
                                    10.476476,
                                    53.249466
                                ],
                                [
                                    10.476671,
                                    53.249472
                                ],
                                [
                                    10.476836,
                                    53.24947
                                ],
                                [
                                    10.47697,
                                    53.249442
                                ],
                                [
                                    10.477089,
                                    53.249422
                                ],
                                [
                                    10.477208,
                                    53.249394
                                ],
                                [
                                    10.477577,
                                    53.249245
                                ],
                                [
                                    10.477889,
                                    53.249152
                                ],
                                [
                                    10.478022,
                                    53.249114
                                ],
                                [
                                    10.478156,
                                    53.249095
                                ],
                                [
                                    10.478291,
                                    53.249084
                                ],
                                [
                                    10.478441,
                                    53.249082
                                ],
                                [
                                    10.478936,
                                    53.249103
                                ],
                                [
                                    10.479433,
                                    53.249195
                                ],
                                [
                                    10.479975,
                                    53.24927
                                ],
                                [
                                    10.480893,
                                    53.249375
                                ],
                                [
                                    10.481854,
                                    53.249444
                                ],
                                [
                                    10.484273,
                                    53.249639
                                ],
                                [
                                    10.485174,
                                    53.249699
                                ],
                                [
                                    10.486691,
                                    53.249815
                                ],
                                [
                                    10.490102,
                                    53.250078
                                ],
                                [
                                    10.49186,
                                    53.250218
                                ],
                                [
                                    10.493408,
                                    53.25036
                                ],
                                [
                                    10.494957,
                                    53.250529
                                ],
                                [
                                    10.496567,
                                    53.250716
                                ],
                                [
                                    10.497769,
                                    53.250827
                                ],
                                [
                                    10.498641,
                                    53.250896
                                ],
                                [
                                    10.499392,
                                    53.25095
                                ],
                                [
                                    10.500022,
                                    53.250978
                                ],
                                [
                                    10.502303,
                                    53.251084
                                ],
                                [
                                    10.503353,
                                    53.251107
                                ],
                                [
                                    10.504177,
                                    53.251114
                                ],
                                [
                                    10.504492,
                                    53.251119
                                ],
                                [
                                    10.505991,
                                    53.251127
                                ],
                                [
                                    10.506726,
                                    53.251154
                                ],
                                [
                                    10.507026,
                                    53.251168
                                ],
                                [
                                    10.507673,
                                    53.251259
                                ],
                                [
                                    10.509525,
                                    53.251505
                                ],
                                [
                                    10.509766,
                                    53.251538
                                ],
                                [
                                    10.511031,
                                    53.251719
                                ],
                                [
                                    10.512371,
                                    53.251909
                                ],
                                [
                                    10.512868,
                                    53.251975
                                ],
                                [
                                    10.513229,
                                    53.252015
                                ],
                                [
                                    10.513229,
                                    53.252015
                                ],
                                [
                                    10.514208,
                                    53.252146
                                ],
                                [
                                    10.514283,
                                    53.252154
                                ],
                                [
                                    10.514885,
                                    53.252237
                                ],
                                [
                                    10.516451,
                                    53.25245
                                ],
                                [
                                    10.517204,
                                    53.252558
                                ],
                                [
                                    10.520156,
                                    53.252978
                                ],
                                [
                                    10.523106,
                                    53.253363
                                ],
                                [
                                    10.524782,
                                    53.25371
                                ],
                                [
                                    10.526676,
                                    53.254306
                                ],
                                [
                                    10.526664,
                                    53.254378
                                ],
                                [
                                    10.526711,
                                    53.25444
                                ],
                                [
                                    10.526803,
                                    53.254493
                                ],
                                [
                                    10.526923,
                                    53.2545
                                ],
                                [
                                    10.527055,
                                    53.254436
                                ],
                                [
                                    10.527192,
                                    53.254488
                                ],
                                [
                                    10.527466,
                                    53.254601
                                ],
                                [
                                    10.5295,
                                    53.255339
                                ],
                                [
                                    10.531366,
                                    53.255989
                                ],
                                [
                                    10.533293,
                                    53.256656
                                ],
                                [
                                    10.535583,
                                    53.257417
                                ],
                                [
                                    10.536827,
                                    53.257833
                                ],
                                [
                                    10.537889,
                                    53.258178
                                ],
                                [
                                    10.538995,
                                    53.258533
                                ],
                                [
                                    10.539981,
                                    53.258852
                                ],
                                [
                                    10.540952,
                                    53.259199
                                ],
                                [
                                    10.541953,
                                    53.259528
                                ],
                                [
                                    10.542954,
                                    53.259856
                                ],
                                [
                                    10.544821,
                                    53.260497
                                ],
                                [
                                    10.545761,
                                    53.260817
                                ],
                                [
                                    10.547644,
                                    53.261494
                                ],
                                [
                                    10.548614,
                                    53.261787
                                ],
                                [
                                    10.550526,
                                    53.262436
                                ],
                                [
                                    10.551511,
                                    53.262747
                                ],
                                [
                                    10.551998,
                                    53.262929
                                ],
                                [
                                    10.552408,
                                    53.263085
                                ],
                                [
                                    10.553303,
                                    53.263388
                                ],
                                [
                                    10.554289,
                                    53.263708
                                ],
                                [
                                    10.555927,
                                    53.264235
                                ],
                                [
                                    10.556777,
                                    53.264529
                                ],
                                [
                                    10.558083,
                                    53.265015
                                ],
                                [
                                    10.55872,
                                    53.265205
                                ],
                                [
                                    10.559414,
                                    53.265339
                                ],
                                [
                                    10.559865,
                                    53.265369
                                ],
                                [
                                    10.560136,
                                    53.265393
                                ],
                                [
                                    10.560975,
                                    53.265382
                                ],
                                [
                                    10.561274,
                                    53.265378
                                ],
                                [
                                    10.562647,
                                    53.265216
                                ],
                                [
                                    10.563617,
                                    53.265105
                                ],
                                [
                                    10.563617,
                                    53.265105
                                ],
                                [
                                    10.565975,
                                    53.264822
                                ],
                                [
                                    10.566184,
                                    53.264801
                                ],
                                [
                                    10.580368,
                                    53.263311
                                ],
                                [
                                    10.582966,
                                    53.263034
                                ],
                                [
                                    10.585819,
                                    53.26278
                                ],
                                [
                                    10.586764,
                                    53.262795
                                ],
                                [
                                    10.5885,
                                    53.26314
                                ],
                                [
                                    10.590539,
                                    53.263544
                                ],
                                [
                                    10.594736,
                                    53.26436
                                ],
                                [
                                    10.595821,
                                    53.264534
                                ],
                                [
                                    10.596757,
                                    53.264701
                                ],
                                [
                                    10.597944,
                                    53.264793
                                ],
                                [
                                    10.609597,
                                    53.264987
                                ],
                                [
                                    10.610302,
                                    53.265004
                                ],
                                [
                                    10.612628,
                                    53.265062
                                ],
                                [
                                    10.613153,
                                    53.265082
                                ],
                                [
                                    10.614803,
                                    53.265105
                                ],
                                [
                                    10.614788,
                                    53.265105
                                ],
                                [
                                    10.614788,
                                    53.265105
                                ],
                                [
                                    10.616168,
                                    53.265131
                                ],
                                [
                                    10.617786,
                                    53.265109
                                ],
                                [
                                    10.618657,
                                    53.265151
                                ],
                                [
                                    10.618776,
                                    53.26515
                                ],
                                [
                                    10.618987,
                                    53.265156
                                ],
                                [
                                    10.619406,
                                    53.265159
                                ],
                                [
                                    10.619661,
                                    53.265165
                                ],
                                [
                                    10.619782,
                                    53.265172
                                ],
                                [
                                    10.620532,
                                    53.265207
                                ],
                                [
                                    10.620847,
                                    53.265211
                                ],
                                [
                                    10.620982,
                                    53.26521
                                ],
                                [
                                    10.621521,
                                    53.265184
                                ],
                                [
                                    10.6217,
                                    53.265173
                                ],
                                [
                                    10.622358,
                                    53.265137
                                ],
                                [
                                    10.622463,
                                    53.265136
                                ],
                                [
                                    10.623166,
                                    53.26509
                                ],
                                [
                                    10.623572,
                                    53.265138
                                ],
                                [
                                    10.623648,
                                    53.265155
                                ],
                                [
                                    10.623783,
                                    53.265171
                                ],
                                [
                                    10.623995,
                                    53.265222
                                ],
                                [
                                    10.624268,
                                    53.265291
                                ],
                                [
                                    10.624374,
                                    53.265325
                                ],
                                [
                                    10.624449,
                                    53.265333
                                ],
                                [
                                    10.624839,
                                    53.265346
                                ],
                                [
                                    10.625154,
                                    53.265341
                                ],
                                [
                                    10.625154,
                                    53.265341
                                ],
                                [
                                    10.625378,
                                    53.265329
                                ],
                                [
                                    10.625887,
                                    53.265314
                                ],
                                [
                                    10.626503,
                                    53.265359
                                ],
                                [
                                    10.626958,
                                    53.265488
                                ],
                                [
                                    10.627248,
                                    53.265627
                                ],
                                [
                                    10.62801,
                                    53.265959
                                ],
                                [
                                    10.629001,
                                    53.266394
                                ],
                                [
                                    10.629471,
                                    53.266541
                                ],
                                [
                                    10.629593,
                                    53.266593
                                ],
                                [
                                    10.629987,
                                    53.266704
                                ],
                                [
                                    10.632019,
                                    53.266928
                                ],
                                [
                                    10.63238,
                                    53.266959
                                ],
                                [
                                    10.635745,
                                    53.267165
                                ],
                                [
                                    10.641668,
                                    53.266832
                                ],
                                [
                                    10.643134,
                                    53.266748
                                ],
                                [
                                    10.643627,
                                    53.266697
                                ],
                                [
                                    10.647391,
                                    53.266366
                                ],
                                [
                                    10.650081,
                                    53.266149
                                ],
                                [
                                    10.652341,
                                    53.266064
                                ],
                                [
                                    10.65255,
                                    53.266052
                                ],
                                [
                                    10.652955,
                                    53.266055
                                ],
                                [
                                    10.653466,
                                    53.266075
                                ],
                                [
                                    10.657008,
                                    53.266601
                                ],
                                [
                                    10.659393,
                                    53.267035
                                ],
                                [
                                    10.661477,
                                    53.26742
                                ],
                                [
                                    10.662293,
                                    53.267597
                                ],
                                [
                                    10.663938,
                                    53.267889
                                ],
                                [
                                    10.6646,
                                    53.267933
                                ],
                                [
                                    10.666415,
                                    53.26798
                                ],
                                [
                                    10.667272,
                                    53.268031
                                ],
                                [
                                    10.668388,
                                    53.268222
                                ],
                                [
                                    10.670788,
                                    53.269015
                                ],
                                [
                                    10.6739,
                                    53.270014
                                ],
                                [
                                    10.677072,
                                    53.27102
                                ],
                                [
                                    10.680062,
                                    53.271967
                                ],
                                [
                                    10.680077,
                                    53.271967
                                ],
                                [
                                    10.680092,
                                    53.271966
                                ],
                                [
                                    10.680092,
                                    53.271966
                                ],
                                [
                                    10.680077,
                                    53.271967
                                ],
                                [
                                    10.68428,
                                    53.273237
                                ],
                                [
                                    10.684674,
                                    53.273358
                                ],
                                [
                                    10.686249,
                                    53.273749
                                ],
                                [
                                    10.687247,
                                    53.273968
                                ],
                                [
                                    10.688093,
                                    53.274136
                                ],
                                [
                                    10.689003,
                                    53.274402
                                ],
                                [
                                    10.690892,
                                    53.275157
                                ],
                                [
                                    10.693204,
                                    53.275995
                                ],
                                [
                                    10.694574,
                                    53.276515
                                ],
                                [
                                    10.695807,
                                    53.277001
                                ],
                                [
                                    10.697711,
                                    53.277747
                                ],
                                [
                                    10.699217,
                                    53.278291
                                ],
                                [
                                    10.70243,
                                    53.27954
                                ],
                                [
                                    10.703542,
                                    53.279973
                                ],
                                [
                                    10.707196,
                                    53.281367
                                ],
                                [
                                    10.708688,
                                    53.281921
                                ],
                                [
                                    10.709874,
                                    53.282336
                                ],
                                [
                                    10.711238,
                                    53.282693
                                ],
                                [
                                    10.712586,
                                    53.283034
                                ],
                                [
                                    10.713646,
                                    53.283297
                                ],
                                [
                                    10.714479,
                                    53.283501
                                ],
                                [
                                    10.716569,
                                    53.28401
                                ],
                                [
                                    10.717099,
                                    53.284146
                                ],
                                [
                                    10.721158,
                                    53.285148
                                ],
                                [
                                    10.722036,
                                    53.28536
                                ],
                                [
                                    10.722778,
                                    53.285538
                                ],
                                [
                                    10.722778,
                                    53.285538
                                ],
                                [
                                    10.72299,
                                    53.285597
                                ],
                                [
                                    10.724065,
                                    53.285852
                                ],
                                [
                                    10.724628,
                                    53.28605
                                ],
                                [
                                    10.724887,
                                    53.286145
                                ],
                                [
                                    10.725315,
                                    53.286337
                                ],
                                [
                                    10.726342,
                                    53.286906
                                ],
                                [
                                    10.727814,
                                    53.287693
                                ],
                                [
                                    10.728813,
                                    53.28829
                                ],
                                [
                                    10.72892,
                                    53.288351
                                ],
                                [
                                    10.72892,
                                    53.288351
                                ],
                                [
                                    10.729366,
                                    53.288614
                                ],
                                [
                                    10.730305,
                                    53.289212
                                ],
                                [
                                    10.730351,
                                    53.289247
                                ],
                                [
                                    10.730987,
                                    53.289759
                                ],
                                [
                                    10.731454,
                                    53.290202
                                ],
                                [
                                    10.730311,
                                    53.290479
                                ],
                                [
                                    10.729999,
                                    53.290555
                                ],
                                [
                                    10.729481,
                                    53.290725
                                ],
                                [
                                    10.728948,
                                    53.290894
                                ],
                                [
                                    10.728462,
                                    53.291126
                                ],
                                [
                                    10.728272,
                                    53.291236
                                ],
                                [
                                    10.727996,
                                    53.291465
                                ],
                                [
                                    10.728011,
                                    53.291474
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "6",
                        "description": "Bus 5101 towards Barskamp, Markt",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.728011,
                                    53.291474
                                ],
                                "type": "Point"
                            },
                            "address": "Bleckede, Bahnhof",
                            "level": null,
                            "time": "2016-07-11T18:16:00+00:00",
                            "stationId": "123991",
                            "direction": "Barskamp, Markt",
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T18:16:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.755084,
                                    53.281633
                                ],
                                "type": "Point"
                            },
                            "address": "Bleckede, Brennbusch",
                            "level": null,
                            "time": "2016-07-11T18:22:00+00:00",
                            "stationId": "124100",
                            "direction": null,
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T18:22:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Bus",
                        "line": "Bus 5101",
                        "notes": null,
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.728011,
                                    53.291474
                                ],
                                [
                                    10.728272,
                                    53.291236
                                ],
                                [
                                    10.728462,
                                    53.291126
                                ],
                                [
                                    10.728948,
                                    53.290894
                                ],
                                [
                                    10.729481,
                                    53.290725
                                ],
                                [
                                    10.729999,
                                    53.290555
                                ],
                                [
                                    10.730311,
                                    53.290479
                                ],
                                [
                                    10.731454,
                                    53.290202
                                ],
                                [
                                    10.731579,
                                    53.290326
                                ],
                                [
                                    10.731766,
                                    53.290494
                                ],
                                [
                                    10.732126,
                                    53.290866
                                ],
                                [
                                    10.732126,
                                    53.290866
                                ],
                                [
                                    10.732314,
                                    53.291052
                                ],
                                [
                                    10.732471,
                                    53.29122
                                ],
                                [
                                    10.732596,
                                    53.291362
                                ],
                                [
                                    10.732714,
                                    53.291316
                                ],
                                [
                                    10.732965,
                                    53.291213
                                ],
                                [
                                    10.733718,
                                    53.290924
                                ],
                                [
                                    10.734448,
                                    53.290428
                                ],
                                [
                                    10.735179,
                                    53.289968
                                ],
                                [
                                    10.735969,
                                    53.289471
                                ],
                                [
                                    10.736655,
                                    53.289003
                                ],
                                [
                                    10.736684,
                                    53.288984
                                ],
                                [
                                    10.736684,
                                    53.288984
                                ],
                                [
                                    10.737707,
                                    53.288313
                                ],
                                [
                                    10.738335,
                                    53.2879
                                ],
                                [
                                    10.738568,
                                    53.287726
                                ],
                                [
                                    10.738726,
                                    53.287562
                                ],
                                [
                                    10.738839,
                                    53.28738
                                ],
                                [
                                    10.739117,
                                    53.286487
                                ],
                                [
                                    10.739471,
                                    53.285601
                                ],
                                [
                                    10.739657,
                                    53.285382
                                ],
                                [
                                    10.739759,
                                    53.2853
                                ],
                                [
                                    10.739846,
                                    53.285236
                                ],
                                [
                                    10.74011,
                                    53.285097
                                ],
                                [
                                    10.74011,
                                    53.285097
                                ],
                                [
                                    10.740242,
                                    53.285014
                                ],
                                [
                                    10.74049,
                                    53.28484
                                ],
                                [
                                    10.740677,
                                    53.28464
                                ],
                                [
                                    10.741504,
                                    53.284699
                                ],
                                [
                                    10.746407,
                                    53.285068
                                ],
                                [
                                    10.746603,
                                    53.285083
                                ],
                                [
                                    10.748059,
                                    53.285116
                                ],
                                [
                                    10.749891,
                                    53.28517
                                ],
                                [
                                    10.750145,
                                    53.285157
                                ],
                                [
                                    10.750623,
                                    53.285123
                                ],
                                [
                                    10.751025,
                                    53.285036
                                ],
                                [
                                    10.751349,
                                    53.284888
                                ],
                                [
                                    10.751668,
                                    53.28464
                                ],
                                [
                                    10.751796,
                                    53.284459
                                ],
                                [
                                    10.75188,
                                    53.284314
                                ],
                                [
                                    10.75188,
                                    53.284314
                                ],
                                [
                                    10.751992,
                                    53.284114
                                ],
                                [
                                    10.752208,
                                    53.283904
                                ],
                                [
                                    10.753048,
                                    53.283542
                                ],
                                [
                                    10.753355,
                                    53.283348
                                ],
                                [
                                    10.754693,
                                    53.281972
                                ],
                                [
                                    10.754966,
                                    53.281689
                                ],
                                [
                                    10.755084,
                                    53.281633
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    },
                    {
                        "segmentId": "7",
                        "description": "Walk 7 min",
                        "origin": {
                            "location": {
                                "coordinates": [
                                    10.755084,
                                    53.281633
                                ],
                                "type": "Point"
                            },
                            "address": "Bleckede, Brennbusch",
                            "level": null,
                            "time": "2016-07-11T18:22:00+00:00",
                            "stationId": "124100",
                            "direction": null,
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T18:22:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "destination": {
                            "location": {
                                "coordinates": [
                                    10.762259,
                                    53.282919
                                ],
                                "type": "Point"
                            },
                            "address": null,
                            "level": null,
                            "time": "2016-07-11T18:29:00+00:00",
                            "stationId": null,
                            "direction": null,
                            "platform": null,
                            "expectedPlatform": null,
                            "expectedTime": "2016-07-11T18:29:00+00:00",
                            "type": "PublicTransportTimedLocation"
                        },
                        "trafficType": "Walk",
                        "line": "Footpath",
                        "notes": [
                            {
                                "extCode": "WR",
                                "description": "Restaurant"
                            }
                        ],
                        "cost": null,
                        "wayPoints": {
                            "coordinates": [
                                [
                                    10.7562,
                                    53.281051
                                ],
                                [
                                    10.7562,
                                    53.281051
                                ],
                                [
                                    10.756347,
                                    53.280977
                                ],
                                [
                                    10.75714,
                                    53.280588
                                ],
                                [
                                    10.758425,
                                    53.281207
                                ],
                                [
                                    10.758744,
                                    53.281301
                                ],
                                [
                                    10.759075,
                                    53.281323
                                ],
                                [
                                    10.759987,
                                    53.281265
                                ],
                                [
                                    10.761108,
                                    53.281185
                                ]
                            ],
                            "type": "LineString"
                        },
                        "guidingPoints": null,
                        "externalOperatorId": null
                    }
                ]
            }

# Group Car Routing
This is a group of all Car Routing related REST resources.
            
## List of Trip Proposals with Basic Info. Car Routing [/imp-endpoint/api/V2/TripProposals/CarRouter] 
Get trip proposals with basic information for specified trip criteria.
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of this trip
destination | Object | Endpoint of this trip
trafficTypes | Array | List of traffic types used in this trip. Here only: OwnCar
description | String | 
costs | Array | List of costs for this trip
    
A single trip proposal object with Detailed Information is requested similar as for IMR.

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzCarRouting",
                        "webUiUrl": "http://vmz.de/CarRouter",
                        "lastUpdateTime": "2014-12-23T12:35:43+00:00",
                        "messages": []
                    }
                ],
                "tripProposals": [
                    {
                        "url": "TripProposals/CarRouter/80844",
                        "origin": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.07367992401123,
                                    52.39419937133789
                                ]
                            },
                            "address": null,
                            "time": "2014-03-27T13:04:40+01:00"
                        },
                        "destination": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.319065,
                                    52.563589
                                ]
                            },
                            "address": null,
                            "time": "2014-03-27T14:48:09+01:00"
                        },
                        "trafficTypes": [
                            "OwnCar"
                        ],
                        "description": null,
                        "costs": {
                            "distance": null,
                            "duration": {
                                "unit": "second",
                                "value": 5947.563361271776
                            },
                            "price": null,
                            "emission": null,
                            "ticketPrice": null
                        }
                    }
                ]
            }

### Getting Trip Proposals by Car Routing [POST]
@testable

Selection criteria is specified in the request body as described in the sample request:

attribute | json data type | comments
--- | --- | ---
origin | Object | Start point specified by a geo location (addresses can be converted into geo locations by means of "GET /Resources/GeoLocations")
destination | Object | Start point specified by a geo location. Either orgin or destination might specify a time.
time | String | Date and time of the trip. If no time is specified, the current time is used as departure time.
departureTime | Boolean | True: time is used as departure time. False: time is used as arrival time. Default value is true.
viaPoints | Array of Objects | List of stations IDs as well as geo locations that the route should pass in the given sequence
costFunctions | Array of Objects | List of cost factors (such as Distance, Duration, Price, Emission), each with a percentual weight 
routingConstraints | Array of Objects | List of constraints to be taken into account for various traffic types, specified by min/max values
userId | String | Traveler id that requests a trip. For this request it is currently not used and can be any string.

- HTTP Headers:

Accept-Language: The Accept-Language header is information about the user's language preferences for trip reponse, e.g. de-DE, en-US.
This is an optional header. The default language is "English" if header is not set. The language setting of this request is also used to answer the trip proposal details request, because the system caches the data for this purpose.

+ Request (application/json)

    + Headers
    
            Accept: application/json

    + Body
        
            {
                "origin": {
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.072690999999963,
                            52.3941887
                        ]
                    }
                },
                "destination": {
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.319420000000036,
                            52.56347100000001
                        ]
                    }
                },
                "time": "2014-03-27T12:04:02+02:00",
                "departureTime":"true",
                "viaPoints": [],
                "costFunctions": [],
                "userId": "4711/10",
                "routingConstraints": []
            }

+ Response 200 

    [List of Trip Proposals with Basic Info. Car Routing][]    
    
# Group Bike Routing
This is a group of all Bike Routing related REST resources.
            
## List of Trip Proposals with Basic Info. Bike Routing [/imp-endpoint/api/V2/TripProposals/BikeRouter] 
Get trip proposals with basic information for specified trip criteria.
The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of this trip
destination | Object | Endpoint of this trip
trafficTypes | Array | List of traffic types used in this trip. Here only: OwnBike
description | String | 
costs | Array | List of costs for this trip
    
A single trip proposal object with Detailed Information is requested similar as for IMR.

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                {
                    "serviceAlias": "vmzBikeRouting",
                    "webUiUrl": "http://vmz.de/BikeRouter",
                    "lastUpdateTime": "2015-10-20T08:54:39+00:00",
                    "messages": []
                }
                ],
                "tripProposals": [
                {
                    "url": "TripProposals/BikeRouter/52745",
                    "origin": {
                        "location": {
                            "coordinates": [
                                13.371430357216871,
                                52.53922982995011
                            ],
                            "type": "Point"
                        },
                        "address": null,
                        "time": "2015-10-14T13:10:00+00:00",
                        "type": "TimedLocation"
                    },
                    "destination": {
                        "location": {
                            "coordinates": [
                                13.423440421396725,
                                52.52469677199724
                            ],
                            "type": "Point"
                        },
                        "address": null,
                        "time": "2015-10-14T13:29:27+00:00",
                        "type": "TimedLocation"
                    },
                    "trafficTypes": [
                        "OwnBike"
                    ],
                    "description": null,
                    "costs": {
                        "distance": {
                            "unit": "meter",
                            "value": 5189.351168191728
                        },
                        "duration": {
                            "unit": "minute",
                            "value": 19.460066880718983
                        },
                        "price": {
                            "unit": "Euro",
                            "value": 0
                        },
                        "emission": {
                            "unit": "gram",
                            "value": 0
                        },
                        "ticketPrice": null
                    }
                }
                ]
            }

### Getting Trip Proposals by Bike Routing [POST]
@testable

Selection criteria is specified in the request body as described in the sample request:

attribute | json data type | comments
--- | --- | ---
origin | Object | Start point specified by a geo location (addresses can be converted into geo locations by means of "GET /Resources/GeoLocations").
destination | Object | Start point specified by a geo location. Either orgin or destination might specify a time.
time | String | Date and time of the trip. If no time is specified, the current time is used as departure time.
departureTime | Boolean | Specifies whether the given time is used as departure or arrival time. If not provided then it will get as departure time by default.
viaPoints | Array of Objects | List of stations IDs as well as geo locations that the route should pass in the given sequence.
costFunctions | Array of Objects | Lst of cost factors (such as Distance, Duration, Price, Emission), each with a percentual weight. This bike router uses the traffic safety as optimization criterion. The other cost functions will be ignored. 
routingConstraints | Array of Objects | List of constraints to be taken into account for various traffic types, specified by min/max values
userId | String | Traveler id that requests a trip. For this request it is currently not used and can be any string.

- HTTP Headers:

Accept-Language: The Accept-Language header is information about the user's language preferences for trip reponse, e.g. de-DE, en-US.
This is an optional header. The default language is "English" if header is not set. The language setting of this request is also used to answer the trip proposal details request, because the system caches the data for this purpose.

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Accept-Language: de-DE

    + Body
        
            { 
                "origin": { 
                    "location": {"type": "Point", "coordinates": [ 13.37143, 52.53923 ]}
                },
                "destination": { 
                    "location": {"type": "Point", "coordinates": [ 13.42338, 52.52471 ]}
                },
                "time": "2015-10-14T15:10:00+02:00",
                "departureTime":"true",
                "costFunctions": [],
                "routingConstraints": [],
                "userId": "4711/10" ,
                "maxRoutingResponses": 4,
                "useTrafficSituation" : true
            }

+ Response 200 

    [List of Trip Proposals with Basic Info. Bike Routing][]   


# Group Incidents / Traffic Info
This is a group of all incidents related REST resources.

## List of Incidents [/imp-endpoint/api/V2/Info/Incidents{?lat}{?lng}{?radius}] 
Get a list of recent general incidents (incidents that affect public AND individual transport) contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
category | Enum | {"Roadworks", "Blockade", "Indefinition"} are the categories for the incidents with type "IncidentIndividualTransport", {"ConstructionProject", "Imbalance", "Diversion", "RailReplacement", "ShuttleService"} are the categories for incidents with type "IncidentPublicTransport"
message | String | 
timePeriod | Object | Time period of the incident
reason | String | Full description of reason
reasonShort | String | Short description of reason
consequence | String | Full description of consequence
consequenceShort | String | Short description of consequence
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
source | String | {= "PT", "INKO", etc.}
affectedTrips | Array | List of affected trips
net | NetType  | 
description | String | Description of an incident information
type | String | There are 2 types of incidents: Incidents with the type "IncidentIndividualTransport" affect individual transport (car, bicycle), incidents with the type "IncidentPublicTransport" affect public transport (bus, tram, etc.).
uri | URI | URI
provider | String | Service provider
operator | Enum | {"News", etc.}
externalResourceId | String | ID in external provider system

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `2000`) ... Radius of bounding circle in meter.
    
+ Model (application/json)

    + Body
    
            [
                {
                    "category": "Blockade",
                    "message": "Closed Road",
                    "timePeriod": {
                        "from": "2012-11-09T12:00:00+01:00",
                        "to": "2014-08-31T17:00:59+02:00"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.319420000000036,
                            52.51774
                        ]
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks carriageway reduced from 2 to 1 lane traffic, congestion has to be expected road closed direction closed",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113388"
                },
                {
                    "category": "Roadworks",
                    "message": "Road Work",
                    "timePeriod": {
                        "from": "2012-04-11T09:00:00+02:00",
                        "to": "2016-05-15T17:00:59+02:00"
                    },
                    "reason": null,
                    "reasonShort": null,
                    "consequence": null,
                    "consequenceShort": null,
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.39682,
                            52.51753
                        ]
                    },
                    "source": "INKO",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Roadworks, new road layout, carriageway reduced to one lane",
                    "type": "IndividualTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "INKO_113041"
                }
            ]


### Getting all incidents [GET]
@testable

+ Response 200

    [List of Incidents][]
    
## List of individual transport Incidents [/imp-endpoint/api/V2/Info/Incidents/IndividualTransport{?lat}{?lng}{?radius}] 
Get list of recent incidents that affect individual transport only contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

The data structure contains the attributes as in *[/imp-endpoint/api/V2/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally the roadName attribute.

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `2000`) ... Radius of bounding circle in meter.
    
+ Model

        [
            {
                "category": "Blockade",
                "message": "Closed Road",
                "timePeriod": {
                    "from": "2014-01-06T11:03:00+01:00",
                    "to": "2014-12-31T23:59:00+01:00"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.385821218640254,
                        52.51680860970485
                    ]
                },
                "source": "Concert",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, direction closed",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "2147338066",
                "roadName": "Unter den Linden (Mitte)"
            },
            {
                "category": "Roadworks",
                "message": "Road Work",
                "timePeriod": {
                    "from": "2012-04-11T09:00:00+02:00",
                    "to": "2016-05-15T17:00:59+02:00"
                },
                "reason": null,
                "reasonShort": null,
                "consequence": null,
                "consequenceShort": null,
                "location": {
                    "type": "Point",
                    "coordinates": [
                        13.39682,
                        52.51753
                    ]
                },
                "source": "INKO",
                "affectedTrips": null,
                "net": [],
                "description": "Roadworks, new road layout, carriageway reduced to one lane",
                "type": "IndividualTransport",
                "uri": null,
                "provider": "vmz_trafficinfo",
                "operator": "News",
                "externalResourceId": "INKO_113041",
                "roadName": "Unter den Linden (Mitte)"
            }
        ]

### Getting recent general incidents that affect individual transport only in a specific area. [GET]
@testable

+ Response 200

    [List of individual transport Incidents][]


## List of public transport Incidents [/imp-endpoint/api/V2/Info/Incidents/PublicTransport{?lat}{?lng}{?radius}] 
Get a list of recent incidents that affect public transport only contained within a specified area. This area can be either a circle (`lat`, `lng`, `radius`) or rectangle (`left_lower_lat`, `left_lower_lng`, `right_upper_lat`, `right_upper_lng`).

The data structure contains the attributes as in *[/imp-endpoint/api/V2/Info/Incidents?lat={lat}&lng={lng}&radius={radius]* and additionally information about line name, first and last stop and line direction.

+ Parameters
    + lat (optional, number, `52.52`) ... Latitude of bounding circle`s center point.
    + lng (optional, number, `13.39`) ... Longitude of bounding circle`s center point.
    + radius (optional, number, `2000`) ... Radius of bounding circle in meter.

+ Model (application/json)

    + Body
    
            [
                {
                    "category": "ConstructionProject",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2013-08-26T01:00:00+02:00",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten der BVG",
                    "reasonShort": "Sperrung wegen Bauarbeiten der BVG",
                    "consequence": "Die Linie verkehrt nur zwischen Riesaer Str. und S Hackescher Markt. Die Haltestellen zwischen S Hackescher Markt und U Schwartzkopffstr. werden nicht bedient. Ein Ersatzverkehr mit Bussen ist nicht eingerichtet. Fahrempfehlung: FahrgÃ¤ste in Richtung U Schwartzkopffstr. nutzen zur Weiterfahrt bitte die Linien M1 bzw. 12 von der Haltestelle S Hackescher Markt in der Rosenthaler Str. bis U Oranienburger Tor bzw. die S-Bahn bis S+U Friedrichstr. und von dort die U6 in Richtung Alt-Tegel.",
                    "consequenceShort": "Bauarbeiten, Sperrung Streckenabschnitt lnvalidenstr./Chausseestr. &lt;&gt; U Schwartzkopffstr.",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.40267888888889,
                            52.52165861111111
                        ]
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "BaumaÃnahme",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG50554",
                    "direction": "Beide",
                    "firstStop": "S Hackescher Markt",
                    "lastStop": "S Hackescher Markt",
                    "lineName": {
                        "name": "M6",
                        "trafficType": "Tram"
                    }
                },
                {
                    "category": "Diversion",
                    "message": "Disruption",
                    "timePeriod": {
                        "from": "2014-07-02T04:00:00+02:00",
                        "to": null
                    },
                    "reason": "Sperrung wegen Bauarbeiten",
                    "reasonShort": "Sperrung wegen Bauarbeiten",
                    "consequence": "Die Linie muss in Fahrtrichtung S+U Zoologischer Garten Ã¼ber Caroline-Michaelis-Str., Julie-Wolfthorn-Str., Zinnowitzer Str., Chausseestr., Habersaathstr. und Schwarzer Weg umgeleitet werden.",
                    "consequenceShort": "Bauarbeiten, Umleitung",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.382412777777777,
                            52.53041916666667
                        ]
                    },
                    "source": "PT",
                    "affectedTrips": null,
                    "net": [],
                    "description": "Umleitung / geÃ¤nderte Haltestellenbedienung",
                    "type": "PublicTransport",
                    "uri": null,
                    "provider": "vmz_trafficinfo",
                    "operator": "News",
                    "externalResourceId": "BVG54186",
                    "direction": "Beide",
                    "firstStop": "S Nordbahnhof/Gartenstr.",
                    "lastStop": "Invalidenpark",
                    "lineName": {
                        "name": "245",
                        "trafficType": "Bus"
                    }
                }
            ]

### Getting recent general incidents that affect public transport only in a specific area. [GET]
@testable

+ Response 200

    [List of public transport Incidents][]

# Group WMS
This is a group of all REST resources delivered as WMS.

## WMS PNG file for Points of Interest [/imp-endpoint/api/V2/Resources{?left_lower_lat}{?left_lower_lng}{?right_upper_lng}{?right_upper_lat}{?width}{?heigth}{?serviceNames}]
Get WMS PNG file for points of interests specified by (several) service categories (e.g. PublicTransport, Parking, etc.)

### Getting a WMS PNG file [GET] 
@nottestable

Please note, the accept-header of this request must be set to "image/png".

+ Parameters
    + left_lower_lat (number, `52.482`) ... Left lower latitude
    + left_lower_lng (number, `13.315`) ... Left lower longitude    
    + right_upper_lng (number, `13.359`) ... Right upper longitude
    + right_upper_lat (number, `52.509`) ... Right upper latitude
    + width (optional, number, `250`) ... Width of map output in pixels (semantics according to WMS GetMap request). The default value is width=250.
    + heigth (optional, number, `250`) ... Height of map output in pixels (semantics according to WMS GetMap request). The default value is height=250.
    + serviceNames (string, `Parking,PublicTransport`) ... Service names, comma-separated list of service categories (currently offered as WMS layers by VMZ), e.g. PublicTransport, Parking

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            ?PNG

## WMS PNG file for Public Transport Stations [/imp-endpoint/api/V2/Resources/PublicTransport{?left_lower_lat}{?left_lower_lng}{?right_upper_lng}{?right_upper_lat}{?width}{?heigth}]
Get WMS PNG file for public transport stations

### Getting a public transport stations WMS PNG file [GET] 
@nottestable
Please note: The accept-header of this request must be set to "image/png"

+ Parameters
    + left_lower_lat (number, `52.482`) ... Left lower latitude
    + left_lower_lng (number, `13.315`) ... Left lower longitude    
    + right_upper_lng (number, `13.359`) ... Right upper longitude
    + right_upper_lat (number, `52.509`) ... Right upper latitude
    + width (optional, number, `250`) ... Width of map output in pixels (semantics according to WMS GetMap request). The default value is width=250.
    + heigth (optional, number, `250`) ... Height of map output in pixels (semantics according to WMS GetMap request). The default value is height=250.

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)
         
    + Body
    
            ?PNG

## WMS PNG file for Current Traffic [/imp-endpoint/api/V2/Info/TrafficInfo{?left_lower_lat}{?left_lower_lng}{?right_upper_lng}{?right_upper_lat}{?width}{?heigth}]
Get WMS PNG file for current traffic

### Getting a current traffic WMS PNG file [GET] 
@nottestable
Please note: The accept-header of this request must be set to "image/png"

+ Parameters
    + left_lower_lat (number, `52.482`) ... Left lower latitude
    + left_lower_lng (number, `13.315`) ... Left lower longitude    
    + right_upper_lng (number, `13.359`) ... Right upper longitude
    + right_upper_lat (number, `52.509`) ... Right upper latitude
    + width (optional, number, `250`) ... Width of map output in pixels (semantics according to WMS GetMap request). The default value is width=250.
    + heigth (optional, number, `250`) ... Height of map output in pixels (semantics according to WMS GetMap request). The default value is height=250.

+ Request

    + Headers

            accept: image/png 

+ Response 200 (image/png)
         
    + Body
    
            ?PNG

# Group Partners
This is a group of all IMP partner related REST resources.

 
## Partner [/imp-endpoint/api/V2/Partners/{PartnerId}]
The Partner resource has the following attributes: 

- status
- url
- companyName
- roles

+ Parameters
    + PartnerId (string, required) ... ID of the partner.

+ Model (application/haljson)

        {
            "status": "requested",
            "url": "/Partners/1",
            "companyName":"Partner 1",
            "roles": [ "ServiceProvider" ]
        }

### Show details of specified Partner [GET]
@nottestable

+ Response 200
    
    [Partner][]
    
### Request update of Partner details [PUT]
@nottestable

Starts "Update Partner" Process (UC PM-1)

+ Request (application/json)

    + Headers
        
            Accept: application/json
        
    + Body
        
            { "companyName":"Partner 1 new" }
        
+ Response 200

    [Partner][]

### Request deletion of specified Partner [DELETE]
@nottestable

Starts "Delete Partner" Process (UC PM-1)
        
+ Response 204

## Partners Collection [/imp-endpoint/api/V2/Partners]
Collection of all Partners

+ Model

        { "items":
            [
            { "status": "registered", "url": "/Partners/1", "companyName":"Partner 1", "roles": [ "ServiceProvider" ] },
            { "status": "registered", "url": "/Partners/2", "companyName":"Partner 2", "roles": [ "ServiceProvider" ] },
            { "status": "registered", "url": "/Partners/3", "companyName":"Partner 3", "roles": [ "MobilityProvider" ] }
            ]
        }


### Request creation of a new Partner [POST]
@nottestable

Starts "New Partner" Process

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body
    
            { "companyName":"ContiPark", roles": [ "ServiceProvider" ]}

+ Response 201

    [Partner][]

## User Token [/imp-endpoint/api/V2/Partners/User/Process?action={action}]
The mobility provider shall generate a separate user token for each end customer in order to be able to differentiate activities of end users in SiMobility Connect without knowing all the details of specific end users.
In case a previously created token is not valid anymore, the mobility provider needs to request a new token for this end user.
The User Token resource has the following attributes: 

- id
- partnerId
- token

+ Parameters
    + action (string, `register`) ... String `action` must have value "register" to start token generation.
    
+ Model

        {
            "id": 137533,
            "partnerId": 96,
            "token": "c04c5446-d11d-4162-a3a5-135fbf557f25"
        }

### Generate User Token [POST]
@nottestable

Starts "User Token Generation" Process

+ Request (application/json)

    + Headers
        
            Accept: application/json

+ Response 201 (application/json)

    [User Token][]


## User Transactions Collection [/imp-endpoint/api/V2/Partners/User/Transactions{?startDate}{?endDate}]
The User Transactions Collection resource has the following attributes: 

- serviceCategory
- serviceType
- serviceDescription
- unit
- value
- startTime
- endTime

+ Parameters

    + startDate (string, `2013-12-18`, optional) ... If date range is not provided, then results are fetched for the last month.
    + endDate (string, `2013-12-30`, optional) ... If date range is not provided, then results are fetched for the last month.
    
+ Model

        [
            {
                "serviceCategory": "Parking",
                "serviceType": "consumption",
                "serviceDescription": "vmzParking : consumption",
                "unit": "EUR",
                "value": 0,
                "startTime": "2014-01-07T12:38:39+05:30",
                "endTime": "2014-01-07T12:38:39+05:30"
            }
        ]
    

### Request user transactions [GET]
@nottestable

+ Request (application/json)

    + Headers
        
            Accept: application/json
            userToken: "someUserToken"
            

+ Response 200 (application/json)

    [User Transactions Collection][]
            
# Group Geo Locations

## Geo Locations [/imp-endpoint/api/V2/Info/GeoLocations{?input}{?language}{?lat}{?lng}{?type}]
Get list of geo locations for given parameters. Matching locations including geo-coordinates will be provided for a given textual address.

### Get list of geo locations [GET]
@testable

attribute | json data type | comments
--- | --- | ---
input | String | a search string
lat | String | prioritized latitude 
lng | String | prioritized Longitude
language | String | international abbreviation for language
type |ENUM | type of locations "station", "address", "poi", or "all"

+ Parameters
    + input (string, `Berlin, Mollstrasse 7`) ... Search string. 
    + lat (number, `52.482`, optional) ... Prioritized latitude value. The results will be ranked according to the given geo-coordinate. Rigth now this parameter has no effect.
    + lng (number, `13.315`, optional) ... Prioritized longitude value. The results will be ranked according to the given geo-coordinate. Rigth now this parameter has no effect.
    + language (string, `en`, optional) ... International abbreviation of language in which the content will be provided, if it is available in this language. 
    + type (string, `station`, optional) ...  type of locations. 

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "searchLocation": "Berlin, Mollstrasse 7",
                    "rankedLocations": [
                        {
                            "type": "Place",
                            "description": "Berlin (Germany)",
                            "location": {
                               "coordinates": [
                                    13.421097,
                                    52.5236814
                               ],
                               "type": "Point"
                            },
                            "address": {
                                "citycode": "10178",
                                "city": "Berlin",
                                "street": "MollstraÃe",
                                "houseno": "7",
                                "district": null,
                                "region": "Berlin",
                                "country": "Germany"
                            },
                            "level": null,
                            "rank": null,
                            "geocoder": "PhotonGeocoder"
                        },
                        {
                            "type": "Amenity",
                            "description": "Kita Traumzauberbaum, Berlin (Germany)",
                            "location": {
                                "coordinates": [
                                    13.421197012371714,
                                    52.52326395
                                ],
                                "type": "Point"
                            },
                            "address": {
                                "citycode": "10178",
                                "city": "Berlin",
                                "street": "MollstraÃe",
                                "houseno": "7a",
                                "district": null,
                                "region": "Berlin",
                                "country": "Germany"
                            },
                            "level": null,
                            "rank": null,
                            "geocoder": "PhotonGeocoder"
                        }
                    ]
                }
            ]

# Group Business Area Info

## Business Area Info [/imp-endpoint/api/V2/Info/ServiceOffering/{id}/BusinessArea]    
Business area of a (free-floating) service (cars, bikes) specified by service offering id.

The data structure contains the following attributes:

Attribute | JSON Data Type | Comments
--- | --- | ---
operator | String |  operator id. Example values: Car2Go_Berlin, DriveNow, NextBike, CallABike etc
description | String |  ...
serviceCategory |ENUM | IMP service categories "CarSharing", "BikeSharing", etc
businessBoundary | Object | business area specified as MultiPolygon conform to the following GeoJSON Format Specification: http://geojson.org/geojson-spec.html

### Getting Business Area [GET]
@nottestable

+ Response 200 (application/json)

    + Body
            
            {
              "operator": "Car2Go_Berlin",
              "description": "Wagen zum Gehen ",
              "serviceCategory": "CarSharing",
              "businessBoundary": {
                "disjunctedBoundary": {
                  "type": "MultiPolygon",
                  "coordinates": [
                  [[[12.977235,52.53996],[12.977782,52.540586],[12.977782,52.541037],[12.977793,52.541905],[12.978501,52.541924],[12.978995,52.541885]],
                      [[13.29696,52.550631],[13.297985,52.550729],[13.298113,52.55021],[13.297314,52.550135],[13.297051,52.550178],[13.29696,52.550631]]]
                      ],
                  "crs": {
                    "type": "name",
                    "properties": {
                      "name": "WGS84"
                    }
                  }
                },
                "negatedBoundary": {
                  "type": "MultiPolygon",
                  "coordinates": [
                  [[[13.366665,52.476409],[13.366386,52.476377],[13.366161,52.475619],[13.366123,52.475256],[13.366236,52.475158],[13.366413,52.475164],[13.366488,52.475275],[13.366665,52.476409]],
                      [[13.314314,52.530452],[13.313885,52.530347],[13.312082,52.535359],[13.326759,52.537317],[13.327746,52.536821]]]
                      ],
                  "crs": {
                    "type": "name",
                    "properties": {
                      "name": "WGS84"
                    }
                  }
                }
              }
            }
 
# Group Heatmap
This is a group of all REST resources related to request heatmaps as PNG files. A heat map is a graphical representation of data where the individual values are represented as colors.
Currently it is used to represent distribution of the resouces of two service categories, Car and Bike Sharing.

## CarSharing Heatmap [/imp-endpoint/api/V2/Info/Heatmap/CarSharing{?date}{?left_lower_lat}{?left_lower_lng}{?right_upper_lat}{?right_upper_lng}{?width}{?height}]    
Get WMS PNG file for carSharing for a specific date (in the past, current date or in the future) and for a specific bounding box (place).
If the date is in the past, the returned image with green areas represents historical data of car sharing availability, if the date is in the future, the returned image with blue dots represents a prediction of car sharing availability. This interface is deprecated.

### Getting heatmap as PNG image [GET]
@nottestable

+ Parameters
    + date (required, number, `1404892800000`) ... A date in the past for historical data / in the future for predictions.
    + left_lower_lat (number, `52.482`) ... Latitude of bounding box's bottom left corner.
    + left_lower_lng (number, `13.315`) ... Longitude of bounding box's bottom left corner.    
    + right_upper_lat (number, `52.509`) ... Latitude of bounding box's top right corner.
    + right_upper_lng (number, `13.359`) ... Longitude of bounding box's top right corner.
    + width (required, number, `480`) ... Width of image in pixels
    + height (required, number, `800`) ... Height of image in pixels
    
+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            ?PNG

## BikeSharing Heatmap [/imp-endpoint/api/V2/Info/Heatmap/BikeSharing{?date}{?left_lower_lat}{?left_lower_lng}{?right_upper_lat}{?right_upper_lng}{?width}{?height}]    
Get WMS PNG file for bike sharing for a specific date and for a specific bounding box (place). This interface is deprecated.

### Getting heatmap as PNG image [GET]
@nottestable

+ Parameters
    + date (required, number, `1404892800000`) ... A date in the past for historical data / in the future for predictions. 
    + left_lower_lat (number, `52.482`) ... Latitude of bounding box's bottom left corner.
    + left_lower_lng (number, `13.315`) ... Longitude of bounding box's bottom left corner.    
    + right_upper_lat (number, `52.509`) ... Latitude of bounding box's top right corner.
    + right_upper_lng (number, `13.359`) ... Longitude of bounding box's top right corner.
    + width (required, number, `255`) ... Width of image in pixels
    + height (required, number, `255`) ... Height of image in pixels

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            ?PNG


# Group Notifications
This group contains the interface for requesting status notifications.

## Request notification for changes to an earlier retrieved Resource
Get a list for requesting notification for changes to an earlier retrieved Resource.

### Open a Web Socket connection with the URI (/imp-endpoint/api/V2/WebSocket/Open)

Following request attributes needs to be sent:

attribute | data type | comments
--- | --- | ---
username | String | username
password | String | password


### Subscribe for receiving notification messages
Subscribe for receiving notification by sending a subscription message.
The subscription request contains the resource ID (id) and the time (timeInSec) the subscriber wants to receive notification about status changes of this resource.
Multiple subscription messages may be send via a websocket.

REQUEST MESSAGE:

    { "id": 11689, "timeInSec": 120 }

### Receive notification messages
Receive notification message containing information of requested Resources. The message contains details as in Resources List of any type such as bike sharing, car sharing, and so on.

NOTIFICATION MESSAGE:

             {
                "actions":[],
                "id":11689,
                "description":"Ladestation RWE Effizienz GmbH",
                "type":"EVChargingStationDetails",
                "uri":null,
                "location":{
                    "coordinates":[
                        13.390248,
                        52.51897
                    ],
                "type":"Point"},
                "provider":"hubject",
                "availability":0.0,
                "operator":"Hubject",
                "modFlag":"Modified",
                "address":
                {
                    "citycode":"10117",
                    "city":"Berlin",
                    "street":"Planckstr.",
                    "houseno":"4",
                    "district":null,
                    "region":"11",
                    "country":"DEU"
                },
                "plugTypes":["Type2Outlet"],
                "power":null
            }


# Group ServiceOfferings

## ServiceOfferings [/imp-endpoint/api/V2/ServiceOfferings] 
Parameters:

* an (optional) service offerings filter (f_service={filterJson} )
 
filterJson has following structure:


attribute | json data type | comments
--- | --- | ---
subscribed | Boolean | true, false 
category | List of String | Parking, PublicTransport, TrafficInfo, TimeTables, Ticketing, BikeSharing, CarSharing, EVCharging, WMS, JourneyPlanner, CarJourneyPlanner, GeoCoding, TaxiService 

Example: f_service=[{"subscribed": true, "category": ["PublicTransport", "CarSharing"]}]

RESPONSE:
Get a list service offerings.

attribute | json data type | comments
--- | --- | ---
id | Long | id of service offering
name | String | name of service pffering
url | String | url for service
category | ServiceCategory | service category
ownerName | String | owner name
contact | String | contact info
shortDescription | String | short description of service
geographicalInformation | String | geographicalInformation
validFrom | Date | valid from date
validTo | Date | valid to date
noticePeriod | String | notice period in no of days
version | Long | version of service
serviceSubscriptionProcessName | String | Service subscription bpmn process name
serviceUsageProcessName | String | Service usage bpmn process name
features | Feature | features supported by service
serviceAlias | String | service alias for  service
serviceProviderName | String | service provider name
serviceProviderStatus | PartnerStatus | 
serviceCosts | ServiceCost | service costs
businessBoundary | String | Business Boundary information
businessBoundaryFileName | String | Business Boundary file name
businessBoundaryUploadTime | Date | Business Boundary upload time 
businessBoundaryViaService | Boolean | whether Business Boundary uploaded via service
subscribed | Boolean | whether service subscribed by requesting user

+ Model (application/json)
    
        [
            {
                "id": 273,
                "name": "Urban Trip Planner",
                "url": "http://munich.cml.utp.bmwlabs.com:8080/utp/plan",
                "category": {
                    "id": 52,
                    "name": "JourneyPlanner"
                },
                "ownerName": null,
                "contact": null,
                "shortDescription": null,
                "geographicalInformation": null,
                "validFrom": 1442314918657,
                "validTo": 1458039718657,
                "noticePeriod": "10",
                "version": 1,
                "serviceSubscriptionProcessName": "subscribeWithAutomaticAcceptance",
                "serviceUsageProcessName": null,
                "features": [
                    {
                        "id": 275,
                        "type": "LIST",
                        "interfaceType": null,
                        "priceModelType": null,
                        "url": null,
                        "documentation": null
                    },
                    {
                        "id": 274,
                        "type": "DETAIL",
                        "interfaceType": null,
                        "priceModelType": null,
                        "url": null,
                        "documentation": null
                    }
                ],
                "serviceAlias": "utpRouting",
                "serviceProviderName": "BMW AG",
                "serviceProviderStatus": "ACTIVE",
                "serviceCosts": [],
                "businessBoundary": "null",
                "businessBoundaryFileName": null,
                "businessBoundaryUploadTime": null,
                "businessBoundaryViaService": false,
                "subscribed": false
            },
            {
                "id": 276,
                "name": "Berlin OSM Public Transport Stops",
                "url": "http://www.overpass-api.de/api/interpreter",
                "category": {
                    "id": 45,
                    "name": "PublicTransport"
                },
                "ownerName": null,
                "contact": null,
                "shortDescription": null,
                "geographicalInformation": null,
                "validFrom": 1442314918669,
                "validTo": 1458039718669,
                "noticePeriod": "10",
                "version": 1,
                "serviceSubscriptionProcessName": "subscribeWithAutomaticAcceptance",
                "serviceUsageProcessName": null,
                "features": [
                    {
                        "id": 278,
                        "type": "WMS_PTLINES",
                        "interfaceType": null,
                        "priceModelType": null,
                        "url": null,
                        "documentation": null
                    },
                    {
                        "id": 277,
                        "type": "LIST",
                        "interfaceType": null,
                        "priceModelType": null,
                        "url": null,
                        "documentation": null
                    }
                ],
                "serviceAlias": "osmBerlinStation",
                "serviceProviderName": "Open Street Map",
                "serviceProviderStatus": "ACTIVE",
                "serviceCosts": [],
                "businessBoundary": "{\n  \"disjunctedBoundary\" : {\n    \"type\" : \"MultiPolygon\",\n    \"coordinates\" : [ [ [ [ 12.69987378269434, 52.29123 ], [ 12.69987378269434, 52.710410244573964 ], [ 14.106124117970467, 52.710410244573964 ], [ 14.106124117970467, 52.29123 ], [ 12.69987378269434, 52.29123 ] ] ] ],\n    \"crs\" : {\n      \"type\" : \"name\",\n      \"properties\" : {\n        \"name\" : \"WGS84\"\n      }\n    }\n  }\n}",
                "businessBoundaryFileName": null,
                "businessBoundaryUploadTime": null,
                "businessBoundaryViaService": false,
                "subscribed": false
            }
        ]


## Service Offerings per Partner [/imp-endpoint/api/V2/Partners/{partnerId}/ServiceOfferings]

### Getting service offerings per partner [GET]
@nottestable

+ Parameters
    + partnerId (number, `42`, required) ... partner id.

+ Response 200
    
    [ServiceOfferings][]

# Group Service Subscriptions
TODO

# Group Service Categories

This is a group of all REST resources related to available service categories. Services offered by service providers have to be classified with one of these service categories.

## Service Categories [/imp-endpoint/api/V2/ServiceCategories] 
RESPONSE:
This collection contains a list of all currently available service categories in IMP. Each service category has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | Number | internal id
name | String | Service Category name

+ Model (application/json)
    
        [
            {
                "id": 33,
                "name": "BikeSharing"
            },
            {
                "id": 126351,
                "name": "CarJourneyPlanner"
            },
            {
                "id": 32,
                "name": "CarSharing"
            },
            {
                "id": 34,
                "name": "EVCharging"
            },
            {
                "id": 38,
                "name": "GeoCoding"
            },
            {
                "id": 36,
                "name": "JourneyPlanner"
            },
            {
                "id": 28,
                "name": "Parking"
            },
            {
                "id": 29,
                "name": "PublicTransport"
            },
            {
                "id": 37,
                "name": "TaxiService"
            },
            {
                "id": 31,
                "name": "Ticketing"
            },
            {
                "id": 30,
                "name": "TrafficInfo"
            },
            {
                "id": 35,
                "name": "WMS"
            }
        ]


### Show service categories [GET]
@testable

+ Response 200
    
    [Service Categories][]
    
# Group Process Definitions

Some of IMP resources are linked to BPMN processes. These resources contain actions in the URL, similar to "Resources/Parking/Garages/270113/Process?action=consume"
This group describes REST resources which can be used to list possible BPMN process definitions.

## All Process Definitions [/imp-endpoint/api/V2/ProcessDefinitions] 
RESPONSE:
This collection contains a list of all Processes. Each service usage has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | Process id
name | String | Process name
description | String | 
processCategory | String | Category of the process (ServiceUsage, ...)
requiredFeatures | Array | List of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "bookingWithCancelation",
                "name": "Booking / Cancelation",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING",
                    "CANCELATION"
                ]
            },
            {
                "id": "bookingWithoutCancelation",
                "name": "Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING"
                ]
            },
            {
                "id": "handyticketBookingProcess",
                "name": "HandyTicket Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BUY",
                    "CONFIRM"
                ]
            },
            {
                "id": "vmzParkingGarage",
                "name": "Parking Garage",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "CONSUME",
                    "RELEASE"
                ]
            }
        ]


### Getting all BPMN process definitions [GET]
@nottestable

+ Response 200
    
    [All Process Definitions][]

## Process Definitions for Service Usage [/imp-endpoint/api/V2/ProcessDefinitions/ServiceUsage] 
RESPONSE:
This collection contains a list of process definitions of the type service usage. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | Process id
name | String | Process name
description | String | 
processCategory | String | Category of the process (ServiceUsage, ...)
requiredFeatures | Array | List of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "bookingWithCancelation",
                "name": "Booking / Cancelation",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING",
                    "CANCELATION"
                ]
            },
            {
                "id": "bookingWithoutCancelation",
                "name": "Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BOOKING"
                ]
            },
            {
                "id": "handyticketBookingProcess",
                "name": "HandyTicket Booking",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "BUY",
                    "CONFIRM"
                ]
            },
            {
                "id": "vmzParkingGarage",
                "name": "Parking Garage",
                "description": null,
                "processCategory": "ServiceUsage",
                "requiredFeatures": [
                    "CONSUME",
                    "RELEASE"
                ]
            }
        ]

### getting service usage BPMN process definitions [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Usage][]

## Process Definitions for Service Subscription [/imp-endpoint/api/V2/ProcessDefinitions/ServiceSubscription] 
RESPONSE:
This collection contains a list of process definitions of the type service subscription. Each process has the following attributes:

attribute | json data type | comments
--- | --- | ---
id | String | Process id
name | String | Process name
description | String | 
processCategory | String | Category of the process (ServiceUsage, ...)
requiredFeatures | Array | List of features (BOOKING, CANCELATION, etc.)

+ Model (application/json)
    
        [
            {
                "id": "subscribePublicFree",
                "name": "Public & free",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAcceptance",
                "name": "Acceptance process",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            },
            {
                "id": "subscribeWithAutomaticAcceptance",
                "name": "Automatic acceptance",
                "description": null,
                "processCategory": "ServiceSubscription",
                "requiredFeatures": []
            }
        ]

### getting service subscription BPMN process definitions [GET]
@testable

+ Response 200
    
    [Process Definitions for Service Subscription][]


# Group System Configuration
This group contains all System related configuration interfaces.

## Get System Business Area Info [/imp-endpoint/api/V2/ApplicationInfo/SystemBusinessArea] 
Get a list of System Business Areas served by Connect. The individual business areas are specified as polygons.

attribute | json data type | comments
--- | --- | ---
businessBoundary | Object | List of MultiPolygon in Geojson format.

+ Model (application/json)

    + Body
    
            {
                "operator": null,
                "description": null,
                "serviceCategory": null,
                "businessBoundary": {
                "disjunctedBoundary": {
                    "coordinates": [
                        [
                            [
                                [
                                    13.0891553,
                                    52.3396296
                                ],
                                [
                                    13.0891553,
                                    52.6754542
                                ],
                                [
                                    13.7611176,
                                    52.6754542
                                ],
                                [
                                    13.7611176,
                                    52.3396296
                                ],
                                [
                                    13.0891553,
                                    52.3396296
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    12.69987378269434,
                                    52.29123
                                ],
                                [
                                    12.69987378269434,
                                    52.710410244573964
                                ],
                                [
                                    14.106124117970467,
                                    52.710410244573964
                                ],
                                [
                                    14.106124117970467,
                                    52.29123
                                ],
                                [
                                    12.69987378269434,
                                    52.29123
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    11.32715,
                                    48.034301
                                ],
                                [
                                    11.32715,
                                    48.260096
                                ],
                                [
                                    11.757894,
                                    48.260096
                                ],
                                [
                                    11.757894,
                                    48.034301
                                ],
                                [
                                    11.32715,
                                    48.034301
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    9.730132,
                                    53.396286
                                ],
                                [
                                    9.730132,
                                    53.739434
                                ],
                                [
                                    10.32528,
                                    53.739434
                                ],
                                [
                                    10.32528,
                                    53.396286
                                ],
                                [
                                    9.730132,
                                    53.396286
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    6.772582,
                                    50.829527
                                ],
                                [
                                    6.772582,
                                    51.084963
                                ],
                                [
                                    7.162063,
                                    51.084963
                                ],
                                [
                                    7.162063,
                                    50.829527
                                ],
                                [
                                    6.772582,
                                    50.829527
                                ]
                            ]
                        ],
                        [
                            [
                                [
                                    6.688762,
                                    51.124375
                                ],
                                [
                                    6.688762,
                                    51.352534
                                ],
                                [
                                    6.939939,
                                    51.352534
                                ],
                                [
                                    6.939939,
                                    51.124375
                                ],
                                [
                                    6.688762,
                                    51.124375
                                ]
                            ]
                        ]
                    ],
                    "type": "MultiPolygon",
                    "crs": {
                        "type": "name",
                        "properties": {
                            "name": "WGS84"
                        }
                    }
                },
                "negatedBoundary": null
                }
            }

### Getting all System Business Areas [GET]
@testable

+ Response 200

    [Get System Business Area Info][]
    
# Group Reporting
This is a group of all REST resources related to reporting.

## Report [/imp-endpoint/api/V2/Reporting/CustomReport{?reportName}] 
RESPONSE:
The response contains an image representing the report.

+ Model (text/plain)
    
        iVBORw0KGgoAAAANSUhEUgAAAfoAAAEjCAIAAABVRlT5AABHkkl


### getting a specific report [GET]
@nottestable

REQUEST

+ Request

    + Headers
        
            accept: text/plain
            
+ Parameters

    + reportName (string, `sp_revenue`) ... Reportname. (possible report types: mp_revenue, info_request, book_request, total_revenue, availability)

+ Response 200 

    [Report][]
    


# Group Dummy. Please do not delete.